
// c to s: end with _2s
// s to c: end with _2c
// between c and s: end with _cs
// nested msg start with nested,otherwise start with msg

//------------------登陆begin------------------------

//------------------玩家与世界变量begin------------------------
//cmd_start_index=600
//cmd_name=player_world_var
message nested_variant_data {
	required int32 index = 1;
	required int64 value = 2;
}

message msg_variant_data_set_2c {
	required int32 variant_type = 1;//变量类型，  0:未初始化;    1:玩家变量； 2：世界变量
	repeated nested_variant_data info_list = 2;
}
//------------------玩家与世界变量end------------------------

//------------------保险箱begin------------------------
//cmd_start_index=1000
//cmd_name=baoxianxiang
//是否设置了初始密码
message msg_bank_is_have_password_2c {
	required int32 is_have_password = 1; //是否有初始密码
}

//存款
message msg_bank_store_2s {
	required double gold = 1;//change gold to double
}

message msg_bank_store_2c {
	required int32 ret_code = 1;//0成功，-1密码过期，-2系统错误
	optional double new_bank_gold = 2;//change gold to double
	optional double gold = 3;
}

//取款
message msg_bank_take_2s {
	required double gold = 1;//change gold to double
	required string password = 2;
}

message msg_bank_take_2c {
	required int32 ret_code = 1;//0成功，-1密码不对，-2保险箱金钱不足，-3系统错误
	optional double new_bank_gold = 2;//change gold to double
	optional double gold = 3;
}


//修改密码
message msg_bank_password_recovery_2s {
	required string old_password = 1;
	required string new_password = 2;
}

message msg_bank_password_recovery_2c {
	required int32 ret_code = 1;//0成功,-1老密码不对,-2系统错误
}

//更新财富元宝
message msg_player_gold_change_2c {
	required int32 change_type = 1; //原因
	required double gold = 2;
}

//上线同步财富元宝和保险箱元宝
message msg_player_gold_and_bankgold_2c {
	required double gold = 1;
	required double bank_gold = 2;
}

//同步房间中的元宝或者金币(vip场为元宝, 金币场为金币)
message msg_sync_room_gold_2c {
	required double gold = 1;
}

message msg_h2g_rescue_room {
	optional	int32 		room_id = 1;
}

//------------------保险箱end------------------------



//--------------------------------cluster begin----------------------------------
//cmd_start_index=1300
//cmd_name=cluster

message msg_register_server_req {
	required int32 		id =1;
	required int32 		linkNum =2;
	required string 	token =3;
	required int32 		type =4;
	required int32 		port =5;
	required string 	ip =6;
}

message msg_register_server_ack {
	required int32 		id =1;
}

message msg_update_server_req {
	required int32 		linkNum =1;
}


message nested_user_battle_result {
	optional uint32 user_id = 1;
	optional string name = 2;
	optional int32 score = 3;		//获得的分数
	optional string open_id = 4;
	optional string head_url = 5;
}


message msg_g2h_setUserGameStatus {
	optional uint32 user_id = 1;
	optional int32	room_type = 2;
}

message msg_g2h_resetUserGameStatus {
	optional uint32 user_id = 1;
}

message msg_h2g_syncUserToken {
	optional int32 game_type = 1;
	optional int32 game_id = 2;
	optional game_user_info info = 3;
	//optional string token = 5;
	//optional int32 roomcard = 6;
}

message msg_g2h_handleUserItem {
	optional	uint32	user_id = 1;
	optional	int32	item_id = 2;
	optional 	int32	num = 3;
	optional	int32	reason_id = 4;
	optional	string	reason = 5;
}

message nested_user_battle_record {
	optional int32 round_id = 1;		// 局数
	optional int32 timestamp = 2;		// 时间戳
	repeated nested_user_battle_result result = 3;	// 胜负情况
	optional int64 record_id = 4;       //回放记录id
}

message msg_g2h_user_battle_history {
	optional string history_id = 1;				//战绩id
	optional int32 game_id = 2;
	optional int32 room_id = 3;
	optional int32 timestamp = 4;
	repeated nested_user_battle_result result = 5;
	repeated nested_user_battle_record detail = 6;
	optional int32 club_id = 7;					//俱乐部id	（俱乐部战绩才有）
	optional int32 boardsCout = 8;				//游戏局数	（俱乐部战绩才有）
	optional int32 costCardNum = 9;				//消耗的房卡（俱乐部战绩才有）
}

message msg_kick_user {
	optional uint32 user_id = 1;
	optional int32 reason = 2;
}

message msg_user_info {
	optional uint32 user_id = 1;
}

//--------------------------------cluster end----------------------------------
message msg_test {
	optional int32 user_id = 1;
	optional int32 reason = 2;
}

/////////////////////////俱乐部///////////////////////
//cmd_start_index=1400
//cmd_name=club
//创建
message msg_create_club_req{
	optional int32          type         = 1;
    optional string         club_name    = 2;
}

message msg_create_club_ret{
	optional int32          ret_code    = 1[default=0];//1 名字长度不符 2 创建超过上限 4 名字已存在 5 名字含有敏感词汇 6 名字不符 7 房卡不足 8 已加入其它俱乐部  12.非群主不能创建亲友圈
	optional club_info      club        = 2;
}

//解散
message msg_dissolve_club_req{
    optional int32          club_id      = 1;
}

message msg_dissolve_club_ret{
	optional int32          ret_code    = 1[default=0];//1 俱乐部不存在 2 权限不足 3 游戏进行中，不能解散
    optional int32          club_id     = 2;
}

//离开
message msg_leave_club_req{
    optional int32          clubId      = 1;
}

message msg_leave_club_ret{
	optional int32          ret_code      = 1[default=0];//1 群主不能退出
    optional int32          leave_user_id = 2;
    optional int32          club_id       = 3;
}

//踢走
message msg_kick_club_role_req{
    optional int32          club_id      = 1;
    optional int32          kick_user_id = 2;
}

message msg_kick_club_role_ret{
	optional int32          ret_code     = 1[default=0];//1 俱乐部不存在 2 群主不能踢自己 3 玩家不存在
    optional int32          club_id      = 2;
    optional int32          kick_user_id = 3;
}

//返回当前所有俱乐部
message msg_get_all_club_req{

}

message club_info{
    optional int32          clubId      = 1;
    optional string         clubName    = 3;
    optional int32          maxNum      = 4;
    optional int32          curNum      = 5;
    optional uint32         ownerUserId = 6;
    optional string         ownerName   = 7;
	optional string         headUrl     = 8;
	optional string         openId      = 9;
    optional bool           isJoin      = 10; //是否已加入
	optional int32          cards       = 11;
	repeated int32          game_rights = 12;
	optional int64          club_score  = 13;
 	optional int64          user_score  = 14;
	optional int32          type        = 15;
	optional int32			desk_wait_sum	= 16;
	optional int32			desk_work_sum	= 17;
	optional int32			state			= 18; //1:开业  2:打烊
	optional int32			battle_type		= 19; //1:关闭， 2:打开
}

message msg_get_all_club_ret{
	optional int32          ret_code    = 1[default=0];
    repeated club_info      clubs       = 2;
	repeated club_room      rooms       = 3;
	optional int32          club_id     = 4[default=0];
	repeated club_info		apply_list	= 5;
}

//打开俱乐部
message msg_open_club_req{
    optional int32          clubId      = 1;
}

message club_member{
    optional uint32         userId      = 1;
    optional string         name        = 2;
    optional int32          isOnline    = 3;
    optional int32          job         = 4; //职位
	optional string         headUrl     = 5;
	optional string         openId      = 6;
	repeated int32          game_rights = 7;//游戏权限
	optional int32          join_time   = 8;
	optional int32          state       = 9;//1 未准备 1 已准备 3 游戏中
	optional int64          score       = 10;
	optional int32			site		= 11;//座位号
}

message club_room{                               //当前已开的房间信息
    optional int32          	game_type   		= 1;
	optional int32          	room_id     		= 2;
    optional int32          	ju_num      		= 3;
	optional int32              cur_ju_num          = 4;
    optional int32          	create_time 		= 5;
    optional int32          	cur_user_num  		= 6;
    optional int32          	max_user_num  		= 7;
	optional int32          	create_user_id      = 8;
	repeated club_member    	members     		= 9; //房间成员
	optional int32              state               = 10;//0 未开始 1 开始
	optional int32				deskNum				= 11;
}

message msg_open_club_ret{
	optional int32          ret_code    = 1[default=0];
    optional club_info      club_info   = 2;
    repeated club_room      rooms    	= 3;
	optional int32			reb_bag_sum = 4;
}

message msg_club_manger_req{
	optional int32	club_id = 1;
}

message msg_club_manger_ack{
	optional int32 club_id = 1;
	optional int32 owner_id = 2;
	repeated int32 managers = 3;
	optional int32 online_sum = 4;
	optional int32 all_sum = 5;
}

message msg_club_chatReq{
	optional int32           club_id     = 1;
	optional int32           talk_id     = 2; //0 广播 其他私聊
	optional string          chat       = 3;
}

message msg_club_chatRet{
	optional int32           ret_code   = 1; //0 成功， -1：不是该俱乐部成员， -2：禁言， -10：其他错误
	optional int32           clubId     = 2;
	optional string          chat       = 3;
	optional int32           send_id    = 4;
	optional string          send_name  = 5;
	optional int32           send_job   = 6;
	optional int32           time       = 7;
}

message msg_club_chat_desk_req{
	optional int32           room_id     = 1;
	optional string          chat       = 2;
}

message msg_club_chat_desk_ack{
	optional int32           club_id     = 1;
	optional int32			 room_id		= 2;
	optional string          chat       = 3;
	optional int32 			 time       = 4;
}

message msg_club_chat_player_sum_change_cast{
	optional int32 club_id = 1;
	optional int32 online_sum = 2;
	optional int32 all_sum = 3;
}

message msg_club_chat_all_player_req{
	optional int32 club_id = 1;
}

message club_chat_player{
	optional int32 id = 1;
	optional string name = 2;
	optional int32 state = 3; //0:正常  1：禁言
}

message msg_club_chat_all_player_ack{
	optional int32 result = 1;	//0:成功， -1：没有找到该俱乐部， -2：你不是该俱乐部成员  -3：操作频繁  -10：其他错误
	optional int32 club_id = 2;
	optional int32 all_page = 3;
	optional int32 page = 4;
	repeated club_chat_player players = 5;
}

message msg_club_chat_stop_talk_req{
	optional int32 club_id = 1;
	optional int32 type = 2; //0:普通禁言， 1：全体禁言
	optional int32 player_id = 3;
	optional int32 state = 4; //0:正常， 1：禁言
}

message msg_club_chat_stop_talk_ack{
	optional int32 result = 1; //0:成功， -1：没有权限 -2：没有这个人，-3:操作太频繁 -4:不能给自己禁言 -10：其他错误
	optional int32 player_id = 2;
	optional int32 state = 3;
}

//该消息表示进入了那个俱乐部，只做统计。
message msg_cur_club{
	optional int32 club_id = 1; 
	optional int32 state = 2;	// 1: 进入大厅， 2退出大厅， 3:进入房间， 4：退出房间	
}

message msg_club_share_red_bag_req{
	optional int32	club_id	= 1;
	optional int32	type = 2; //1:金币  2：红包
	optional int64	coins = 3;
	optional int32 	sum = 4;	//0  : 最大个数， 其他：具体个数
	optional string msg = 5; //附带的一句话
}

message msg_club_share_red_bag_ack{
	optional int32	result	= 1; //0:成功， -1:没有那么多钱， -2:每个人不够最小值(1分), -3:没有权限 -4:不是该俱乐部的成员，-5：钱不够，-6：过于频繁 -7：超过最大值，-10:其他错误
}

message rob_info{
	optional int32 id = 1;
	optional string name = 2;
	optional int32 sum = 3;
}

message red_bag_base_info{
	optional int32	id = 1;
	optional string owner_name = 2;
	optional string open_id = 3;
	optional string head_url = 4;
	optional string msg = 5;
	optional int32 left_sum = 6;
}

//广播红包
message red_bag_cast{
	optional red_bag_base_info info = 1;
}

message msg_club_red_bag_list_req{
	optional int32	club_id	= 1;
	optional int32  page = 2; //页数
}

message msg_club_red_bag_list_ack{
	optional int32 	result = 1; // -1:不属于该俱乐部，-2：没有那么多页 -10：其他错误
	optional int32	page = 2;
	optional int32 all_page = 3;
	repeated red_bag_base_info bags = 4;
}

message msg_red_bag_detail_req{
	optional int32 club_id = 1;
	optional int32 id = 2;
}

message msg_red_bag_detail_ack{
	optional int32 result = 1; //-1:不属于该俱乐部，-2：红包不存在 -10：其他错误
	optional int32 id = 2;
	optional int32 owner_id = 3;
	optional string owner_name = 4;
	optional string open_id = 5;
	optional string head_url = 6;
	optional int32 all_coin = 7;
	optional int32 all_sum = 8;
	optional int32 left_sum = 9;
	repeated rob_info robs = 10;
	optional int32	type = 11;//红包类型1:金币  2：红包
}

message msg_rob_bag_req{
	optional int32 club_id = 1;
	optional int32 id = 2;
}

message msg_rob_bag_ack{
	optional int32 result = 1; // 0:成功， -1：已经被抢完了， -3:不属于该俱乐部，-2：红包不存在, -4:已经抢过了 -10：其他错误
	optional int32 id = 2;
	optional int32 sum = 3;
	optional int32 left_sum = 4;
	optional int32 type = 5;//红包类型1:金币  2：红包
}


//加入俱乐部
message msg_join_club_req{
	optional int32           clubId     = 1;
}

message msg_join_club_ret{
	optional int32           ret_code   = 1[default=0];//1 人数已满 2 已经加入 3 俱乐部不存在 4 已申请 5 加入俱乐部已达上限 6 群主不能加入其他俱乐部
	optional int32           clubId     = 2;
	optional string          clubName   = 3;
	optional int32           type       = 4;
}

//申请相关操作
message msg_apply_club_op_req{
	optional int32           op_type    = 1; //1 打开 2 拒绝
	optional int32           club_id    = 2;
	optional int32           op_userid  = 3;
}

message apply_member{
	optional int32           user_id    = 1;
	optional string          name       = 2;
	optional string          url        = 3;
	optional string          openId     = 4;
	optional int32			 apply_time = 5;
}

message msg_apply_club_op_ret{
	optional int32           op_type  	= 1;
	optional int32           ret_code   = 2[default=0];// 1 俱乐部不存在 2 权限不足 3 不在申请列表中 4 已加入 5 玩家已拥有俱乐部，不能加入 6 玩家加入俱乐部已达上限
	optional int32           club_id  	= 3;
	optional int32           op_userid  = 4;
	repeated apply_member    apply_list = 5;
}

//打开俱乐部管理
message msg_open_club_manage_req{
	optional int32           club_id    = 1;
}

message msg_open_club_manage_ret{
	optional int32           ret_code = 1[default=0];// 1 权限不足
	optional int32			 page = 2;
	optional int32			 all_page = 3;
	repeated club_member     members  = 4;
}

//设置权限
message msg_club_manage_req{
	optional int32           club_id    	= 1;
    repeated int32       	 game_rights  	= 2;//1
	optional int32           set_user_id    = 3;
}

//发给自己跟被设置玩家
message msg_club_manage_ret{
	optional int32           ret_code 		= 1[default=0];//2 玩家不存在 3 权限不足 4 设置错误 5:体验俱乐部不能设置权限
	optional int32           user_id  		= 2;//
	repeated int32       	 game_rights  	= 3;
	optional int32           club_id    	= 4;
}

//俱乐部改名
message msg_club_change_name_req{
	optional int32           club_id    = 1;
	optional string          name     	= 2;
}

message msg_club_change_name_ret{
	optional int32           ret_code = 1[default=0];//1 名字长度不符 2 权限不足 4 名字已存在 5 名字含有敏感词汇 6 名字不符 
	optional int32           club_id    = 2;
	optional string          name     	= 3;
}

//刷新
message msg_club_refresh_req{
	optional int32           club_id    = 1;
	optional int32			 baofang	= 2;
}

message msg_club_refresh_ret{
	optional int32           ret_code   = 1[default=0]; 
	optional int32           club_id    = 2;
	optional int32			 baofang	= 3;
	optional int32			 desk_wait_sum	= 4;
	optional int32			 desk_work_sum	= 5;
	repeated club_room       rooms      = 6;
}

//存房卡
message msg_club_store_cards_req{
	optional int32           cards      = 1;
	optional int32           club_id    = 2;
}

message msg_club_store_cards_ret{
	optional int32           ret_code   = 1[default=0];//1 权限不足 2 房卡不足 
	optional int32           cards      = 2;
	optional int32           club_id    = 3;
}

//解散房间
message msg_club_dissolve_room_req{
	optional int32           club_id    = 1;
	optional int32           room_id    = 2;
	optional int32           game_type  = 3;
	optional int32			 wanfaNum	= 4;
	optional int32			 deskNum	= 5;
}

message msg_club_dissolve_room_ret{
	optional int32           ret_code   = 1[default=0];//1 房间不存在 2 游戏已开始，不能操作 3 权限不足 4 解散失败
	optional int32           club_id    = 2;
	optional int32           room_id    = 3;
	optional int32			 wanfaNum	= 4;
	optional int32			 deskNum	= 5;
}

//踢出房间
message msg_club_room_kickout_req{
	optional int32           club_id    = 1;
	optional int32			 wanfanum 	= 2;
	optional int32			 desk_id	= 3;
	optional int32           room_id    = 4;
	optional int32           kick_user_id = 5;
	optional int32           game_type  = 6;
}

message msg_club_room_kickout_ret{
	optional int32           ret_code   = 1[default=0];//1 房间不存在 2 游戏已开始，不能操作 3 权限不足
	optional int32           club_id    = 2;
	optional int32			 wanfanum 	= 3;
	optional int32			 desk_id	= 4;
	optional int32           room_id    = 5;
	optional int32           kick_user_id = 6;
}

//房间更新
message msg_club_room_update{
	optional int32       room_id      = 1;
}

//俱乐部战绩
message msg_club_battle_history_req {
	optional int32 clubId = 1;					// 俱乐部id
	optional int32 whichDay = 2;				// 哪天??
}

message club_battle_history_detail{
	optional string history_id = 1;				//战绩id
	optional string room_id = 2;				//房间号
	optional int32 timestamp = 3;				//时间戳
	optional int32 costRoomCard = 4;			//消耗房卡
	optional int32 boardsCount = 5;				//局数
	repeated user_battle_result result = 6;		//战绩详细
	optional int32  create_user_id  = 7;
	optional int32  game_type       = 8;
	optional int32  room_type       = 9;//1 自建 2 代开
	optional int32  dissolve_role_id = 10;//解散玩家id
}

message msg_club_battle_history_ack {
	optional int32 clubId = 1;					// 俱乐部id
	optional int32 whichDay = 2;
	repeated club_battle_history_detail detail = 3;
	optional int32  self_room   = 4;//自建
	optional int32  self_room_cards = 5;
	optional int32  match_room  = 6;//比赛，代开
	optional int32  match_room_cards = 7;
}

//受邀奖励
message msg_invited_task_reward {
	optional	int32 	item_id = 1;
	optional	int64 	item_num = 2;
}

//修改分数
message msg_club_change_score_req {
	optional    int32    club_id  = 1;
	optional    int32    user_id  = 2;
	optional    int64    score    = 3;
}

message msg_club_change_score_ret {
	optional    int32    ret_code   = 1[default=0];
	optional    int32    club_id  	= 2;
	optional    int64    club_score = 3;
	optional    int32    user_id    = 4;
	optional    int64    user_score = 5;
}

//更新分数
message msg_clue_update_score {
	optional    int32    club_id  	= 1;
	optional    int32    user_id    = 2;
	optional    int64    user_score = 3;
}

//创建玩法包房
message msg_club_create_baofang_req {
	optional	int32 					club_id 	= 1;
	optional 	msg_create_game_req 			rule		= 2;
}


//创建玩法包房返回
message msg_club_create_baofang_ack {
	optional	int32 	result 	= 1;	//0：成功， -1：超过最大个数的玩法， -2:没有权限， -10：未知失败
	optional	int32	wanfaNum = 2;
}

//删除玩法包房
message msg_club_del_baofang_req {
	optional	int32 					club_id 	= 1;
	optional	int32					wanfaNum	= 2;
}

//删除玩法包房返回
message msg_club_del_baofang_ack {
	optional	int32 	result 	= 1;	//0：成功， -1：没有权限， -2：当前还有玩家 ，-3:包房不存在， -10：未知失败
	optional	int32 	club_id = 2;
	optional	int32	wanfaNum = 3;
}

//请求包房列表
message msg_club_baofang_list_req {
	optional	int32 	club_id 	= 1;	
}

//请求包房列表返回
message msg_club_baofang_list_ack {
	optional	int32					result = 1;	// -10: 未知错误
	repeated	int32					wanfaNum 	= 2;	//玩法编号
	repeated	msg_create_game_req 			rule 	= 3;
	repeated	string					baofang_name = 4;
}

//请求包房详细信息
message msg_club_baofang_detail_req {
	optional	int32	club_id 	= 1;
	optional	int32	wanfaNum 	= 2;	//玩法编号
}

message msg_club_baofang_detail_ack {
	optional int32 result = 1;			// -1:找不到该包房		-10:未知错误
	optional int32 wanfaNum = 2;
	optional int32 desk_wait_sum = 3;
	optional int32 desk_work_sum = 4;
	repeated club_room rooms = 5;
}

message msg_club_baofang_site{
	optional	int32 	club_id 	= 1;
	optional	int32	room_id		= 2;
}

message msg_club_baofang_site_cast{
	optional	int32 	club_id 	= 1;
	optional	int32	wanfaNum	= 2;
	optional	int32 	desk_num	= 3;
	optional	club_room room 		= 4;
	optional	int32 	desk_wait_sum = 5;
	optional	int32 	desk_work_sum = 6;
}

message msg_club_change_notice_req{
	optional	int32 	club_id 	= 1;
	optional	string 	notice		= 2;
}

message msg_club_change_notice_ack{
	optional 	int32	result		= 1; // -1:没有权限 -10:其他错误
	optional	int32 	club_id 	= 2;
	optional	string 	notice		= 3;
}

message msg_club_notice_req{
	optional	int32 	club_id 	= 1;
}

message msg_club_notice_ack{
	optional 	int32	result		= 1;  // -1:没有权限 -10:其他错误
	optional	int32 	club_id 	= 2;
	optional	string 	notice		= 3;
}

message msg_club_rank_req{
	optional 	int32	club_id		= 1;
	optional	int32 	type		= 2; //1:今天表， 2:昨天表， 3:周表， 4:月表， 5:总表
	optional	int32	game_type	= 3;
}

message club_rank_node{
	optional	uint32	user_id		= 1;
	optional	string	user_name	= 2;
	optional	string	head_url	= 3;
	optional	string	open_id		= 4;
	optional 	int32	score		= 5;
}

message msg_club_rank_ack{
	optional	int32	result		= 1; //0:成功
	optional	int32	type		= 2; //1:今天表， 2:昨天表， 3:周表， 4:月表， 5:总表
	optional	int32	game_type	= 3;
	optional	int32	rank_type	= 4; //1:局数排行表， 2：大赢家排行表， 3：最佳炮手表
	repeated 	club_rank_node	rank	= 5;
}

message msg_club_invite_req {
	optional	int32	club_id		= 1;
	optional	uint32	user_id		= 2;
}

message msg_club_invite_ack {
	optional	int32	result		= 1; //0:成功，-1:已经是该俱乐部成员， -2:你没有权限， -3：邀请玩家不在线
}

message msg_club_invite {
	optional	int32	club_id		= 1;
	optional	string	club_name	= 2;
	optional	uint32	who_req		= 3;
	optional	string	user_name	= 4;
}

//代开战绩
message msg_friend_create_battle_history_req {
}

message friend_create_battle_history_detail{
	optional string history_id = 1;				//战绩id
	optional string room_id = 2;				//房间号
	optional int32 timestamp = 3;				//时间戳
	optional int32 costRoomCard = 4;			//消耗房卡
	optional int32 boardsCount = 5;				//局数
	repeated user_battle_result result = 6;		//战绩详细
	optional int32  is_room_open  = 7;			//是否开局
	optional int32  game_type       = 8;
	optional int32  dissolve_role_id = 9;       //解散玩家id
}

message msg_friend_create_battle_history_ret {
	repeated friend_create_battle_history_detail detail = 1;
}
	
//解散代开房间
message msg_friend_create_dissolve_room_req{
	optional int32           room_id    = 1;
	optional int32           game_type  = 2;
}	
	
message msg_friend_create_dissolve_room_ret{
	optional int32           ret_code   = 1[default=0];//1 房间不存在 2 游戏已开始，不能操作 3 权限不足
	optional int32 			 room_id 	= 2[default=0];
}	

message msg_club_open_req{
	optional int32		club_id = 1;
}

message msg_club_open_ack{
	optional int32		result = 1; // 0:正确， -1：没有权限， -10：其他错误
}

message msg_club_close_req{
	optional int32		club_id = 1;
}

message msg_club_close_ack{
	optional int32		result = 1; // 0:正确， -1：没有权限， -10：其他错误
}

message msg_club_state_cast{
	optional int32		club_id = 1;
	optional int32		state = 2; //1:开， 2：关
}

// 获取战绩每局详情
message msg_get_battle_history_detail_req {
	optional	string  history_id = 1;
}

message msg_battle_history_detail_user {
	optional	uint32	user_id		= 1;
	optional	string	user_name	= 2;
}

message msg_battle_history_detail_score {
	optional	uint32 	user_id 	= 1;
	optional	int32 	score		= 2;
}

message msg_battle_history_detail {
	optional	int32 	round = 1;		//局数
	optional 	int32 	timestamp = 2;	//
	repeated	msg_battle_history_detail_score scores = 3; 	//分数
}

message msg_get_battle_history_detail_ret {
	optional	string  				  history_id = 1;
	optional	int32 					  game_type = 2;
	repeated	msg_battle_history_detail details = 3;
	repeated	msg_battle_history_detail_user users = 4; 	//玩家
}

message msg_club_personal_battle_record_req {
	optional	int32   	clubId = 1;
	optional 	int32 		date = 2;	//换算成秒
}

message club_personal_battle_record {
	optional	uint32 		user_id = 1;
	optional	string      user_name = 2;
	optional	string 		open_id = 3;
	optional	string 		head_url = 4;
	optional 	int32 		day_score = 5;
	optional	int32 		day_room_num = 6;
	optional	int32 		day_big_winner_num = 7;
}

message msg_club_personal_battle_record_ret {
	optional	int32 		ret_code = 1;	// 1.不在此俱乐部 2.当前日期不可查
	optional 	int32 		date = 2;	//换算成秒
	optional	int32 		join_num = 3;
	optional	int32 		cost_card_num = 4;
	optional	int32 		round_num = 5;
	optional	int32 		big_winner_num = 6;
	repeated	club_personal_battle_record detail = 7;
}

//更改包房名称
message msg_club_change_baofang_name_req{
	optional	int32				club_id = 1;
	optional	int32				wanfaNum = 2;
	optional	string				name = 3;
}

message msg_club_change_baofang_name_ack{
	optional	int32				result = 1;		//0:成功， -1：没有权限， -2：包房不存在  -3：名字不符合规定
	optional	int32				club_id = 2;
	optional	int32				wanfaNum = 3;
	optional	string				name = 4;
}

message msg_club_change_battle_history_type_req{
	optional int32           club_id    = 1;
	optional int32			 type     	= 2; // 1:关闭(标识默认值)， 2:打开
}

message msg_club_change_battle_history_type_ret{
	optional int32           ret_code = 1[default=0];// 0：正确，-1:没有权限
	optional int32			 type = 2;
}
	
// ===================================================================================================================================
// 大厅协议
// ===================================================================================================================================
//cmd_start_index=1600
//cmd_name=hall
message neteasy_im_info_req {
	optional ProtoHeader header = 1;
	optional NetIMInfo info = 2;
}

message neteasy_im_info_ack {
	optional ProtoHeader header = 1;
}

message broadcast {
	optional ProtoHeader header = 1;
	optional int32 speed = 2;
	optional int32 showTimes = 3;
	optional string content = 4;
	optional int32  type    = 5[default=0]; //1 上梁山广播
}

//每个房间的记录
message get_battle_record_req {
	optional string history_id = 1;
}

message battle_record_detail{
	optional string history_id = 1;		// 记录ID（回放使用）
	optional int32 round = 2;			// 局数
	optional int32 timestamp = 3;		// 时间戳
}

message get_battle_record_ack {
	optional battle_record_detail detail = 1;
}

//胜负情况
message user_battle_result {
	optional uint32 user_id = 1;
	optional string name = 2;
	optional int64 score = 3;		//获得的分数
	optional string open_id = 4;
	optional string head_url = 5;
}

//历史战绩请求	
message get_battle_history_req {
	optional int32 game_id = 1; //0 所有
}

message battle_history_detail{
	optional string history_id = 1;				//战绩id
	optional string room_id = 2;
	optional int32 timestamp = 3;
	repeated user_battle_result result = 4;
	optional int32   game_type  = 5;
	optional int32   boards_count = 6;
}

message get_battle_history_ack {
	repeated battle_history_detail detail = 1;
}



message get_draw_lottery_history_req {
	optional ProtoHeader header = 1;
	optional int32 page = 2;
}

message DrawLotteryRecord {
	optional uint32 user_id = 1;
	optional string name = 2;
	optional int32 drawID = 3;
	optional int32 timestamp = 4;
	optional int32 args = 5;
}

message get_draw_lottery_history_ack {
	optional ProtoHeader header = 1;
	repeated DrawLotteryRecord history = 2;
}

//客户端主动完成的任务（分享）
message client_task_complete_req {
	optional int32 task_id = 2;
}

message client_task_complete_ack {
	optional int32 ret_code = 1;	
}

message update_task_process {
	optional ProtoHeader header = 1;
	optional int32 taskId = 2;
	optional int32 curNum = 3;
	optional int32 drewTimes = 4;
	optional int32 status = 5;
}

message get_user_adress_info_req {
	optional ProtoHeader header = 1;
}

message get_user_adress_info_ack {
	optional ProtoHeader header = 1;
	optional string receiver_wx = 2;
	optional string receiver_mobile = 3;
	optional string receiver_name = 4;
	optional string receiver_adress = 5;
}


message get_mobile_code_unbind_req {
	optional ProtoHeader header = 1;
}

message get_mobile_code_unbind_ack {
	optional ProtoHeader header = 1;
}

message unbind_mobile_req {
	optional ProtoHeader header = 1;
	optional string code = 2;
}

message unbind_mobile_ack {
	optional ProtoHeader header = 1;
}

message modify_user_base_info_req {
	optional ProtoHeader header = 1;
	optional string nikename = 2;
	optional int32 sex = 3; //性别
}

message modify_user_base_info_ack {
	optional ProtoHeader header = 1;
}

message get_other_user_base_info_req {
	optional ProtoHeader header = 1;
	optional uint32 look_user_id = 2;
}

message get_other_user_base_info_ack {
	optional ProtoHeader header = 1;
	
	optional string nickName = 2; // 昵称
    optional string headUrl = 3; // 头像
    optional int32 sex = 4; // 性别: 1=男  2=女
    optional string city = 5; // 城市
	
	optional int64 coin = 6; // 玩家金币
	optional int64 roomCard = 7; //玩家房卡
	optional int64 score = 8;//玩家积分
}

message get_play_game_server_info_by_roomnum_req {
	optional ProtoHeader header = 1;
	optional int32 game_type = 2;
	optional string roomnum = 3;
}

message get_play_game_server_info_by_roomnum_ack {
	optional ProtoHeader header = 1;
	optional string ip = 2;
	optional int32 port = 3;
	optional string token = 4;
	optional int32 game_type = 5;
}

message get_play_game_server_info_req {
	optional ProtoHeader header = 1;
	optional int32	game_type = 2;			//什么游戏
	//optional int32	play_type = 3;			//玩法 （朋友局、金币场）
}

message get_play_game_server_info_ack {
	optional ProtoHeader header = 1;
	optional string ip = 2;
	optional int32 port = 3;
	optional string token = 4;
	optional int32 game_type = 5;
}

message get_reconn_game_server_info_req {
	optional ProtoHeader header = 1;
	
}

message get_reconn_game_server_info_ack {
	optional ProtoHeader header = 1;
	optional int32 game_id = 2;
	optional int32 room_type = 3;
	optional string ip = 4;
	optional int32 port = 5;
	optional string token = 6;
}

message get_mall_item_list_req {
	optional ProtoHeader header = 1;
}

message get_mall_item_list_ack {
	optional ProtoHeader header = 1;
	repeated mall_item_info item_list = 2;
}

//单个商品信息
message mall_item_info {
    optional int32 goods_id = 1; //商品id
    optional string name = 2; //  物品名称
    optional int32 price_type = 3; //价格类型
    optional double price = 4; //价格数量--例：10个钻石
    optional int32 goods_type = 5; //商品类型
    optional double amount = 6; //商品数量--例：10000金币
    optional string discount = 7; //折扣
    optional string image = 8; //商品图片： coin_1 coin_2 coin_3 coin_4 coin_5 coin_6 / diamond_1 diamond_2 diamond_3 diamond_4
}

message get_mobile_code_bind_req {
	optional uint32 type = 1;
	optional string mobile = 2;
}

message get_mobile_code_bind_ack {
	optional ProtoHeader header = 1;		// 0.发送成功; 1.号码格式错误; 2.暂无响应（第三方服务错误，比如欠费了，宕机了） 3.已绑定手机号 4.手机号已被他人绑定
}

message bind_mobilephone_req {
	optional int32 type = 1;    // 1.绑定 2.解绑
	optional string mobile = 2;
	optional string password = 3;
	optional string mobile_code = 4;
}

message bind_mobilephone_ack {
	optional ProtoHeader header = 1;		//0.绑定成功；1.验证码错误 2.暂无响应 4.解绑成功 5.手机号未绑定 6.手机号与绑定号码不符			
}

message get_mobile_code_find_req {
	optional ProtoHeader header = 1;
	optional string mobile = 2;			
}

message get_mobile_code_find_ack {
	optional ProtoHeader header = 1;		//同（get_mobile_code_bind_ack）
}

message find_bag_password_req {
	optional ProtoHeader header = 1;
	optional string mobile = 2;
	optional string password = 3;
	optional string mobile_code = 4;
}

message find_bag_password_ack {
	optional ProtoHeader header = 1;		//0.绑定成功；1.验证码错误 2.暂无响应
}

message bind_idcard_req {
	optional ProtoHeader header = 1;
	optional string name = 2;
	optional string id = 3;
}

message bind_idcard_ack {
	optional ProtoHeader header = 1;		//0.绑定成功; 1.身份证号码错误
}

message huo_jiang_list_req {
    optional ProtoHeader header = 1;
}

message huo_jiang_list_ack {
    optional ProtoHeader header = 1;
    repeated huo_jiang_list list = 2;
}

message huo_jiang_list {
    optional int32  user_id = 1;
    optional string time = 2;
    optional int32 goods_name = 3;
    optional int64 nums = 4;
}

//兑换实物
message shiwu_dui_huan_req {
    optional ProtoHeader header = 1;
    optional int32 user_id = 2;
    optional int32 type_id = 3;
    optional int64 numbers = 4;
    optional string phone = 5;
}

message shiwu_dui_huan_ack {
    optional ProtoHeader header = 1;
    optional bool ruserts = 2;
}

//兑换福袋商品
message fudai_dui_huan_req {
    optional ProtoHeader header = 1;
    optional int32  good_id = 2;
    optional string  goods_id = 3;
}

message fudai_dui_huan_ack {
    optional ProtoHeader header = 1;
    optional bool  rusert = 2;
}


//实物请求
message reality_req {
    optional ProtoHeader header = 1;
    optional int32 goods_id = 2;
    optional string user_name = 3;
    optional string call = 4;
    optional string wechat = 5;
    optional string address = 6;
}

message reality_ack {
    optional ProtoHeader header = 1;
    optional bool yes_or_no = 2;
}

//反馈
message hall_req_feed_back {
    optional ProtoHeader header = 1;
    optional uint32 user_id = 2;
    optional string msg = 3;
    optional string tell = 4;
}

message hall_ack_feed_back {
    optional ProtoHeader header = 1;
    optional bool state = 2; //true or  flase
}

//公告请求
message hall_req_notice {
    optional ProtoHeader header = 1;
    optional uint32 user_id = 2; //查询的用户user_id
}

message hall_ack_notice {
    optional ProtoHeader header = 1;
    repeated hall_notice list = 2;
}

message hall_notice {
    optional string title = 1;
    optional string content = 2;
    optional string time = 3;
    optional string Publisher = 4;
}


//单个活动
message hall_item_event {
    optional int32 id = 1; // 活动的Id
    optional int32 type = 2; //活动类型
    optional int32 reward = 3; //活动奖品
    repeated string richText = 5; //活动内容(其中会穿插富文本的超链接内容)
    optional string title = 6; //活动名称
}

//================================================邮件=====================================================

//未读邮件数量（上线通知/有新邮件通知）
message hall_mail_unread_num {
	optional	int32 	num = 1;	//邮件未读数量
}

//邮件列表
message hall_mail_list_req {
}

message hall_mail_list_ack {
	repeated hall_mail_item  mail_list = 1;
}

//单个邮件
message hall_mail_item {
    optional int64 	mail_id = 1;
	optional int32  mail_type = 2; //邮件类型
    optional bool 	has_reward = 3; //是否有奖励
	optional string sender_name = 4;
    optional string title = 5; //邮件标题
    optional bool 	is_read = 6; //是否已查看
    optional int64 	expire_time = 7; //邮件的过期时间
	optional int64 	send_time = 8; // 邮件发送时间
}

//读取某个邮件
message hall_read_mail_req {
	optional 	int64 	mail_id = 1;
}

message hall_read_mail_ack {
	optional int32 	code = 1;	 	// 0 读取成功 1.邮件不存在
	optional int64 	mail_id = 2;	
	optional string title = 3;   	// 邮件标题
    optional string content = 4; 	// 邮件内容	
	repeated nested_item_base reward = 5; //邮件奖励
}

// 领取奖励(删除)邮件
message hall_draw_mail_req {
	optional	int64	mail_id = 1;
}

message hall_draw_mail_ack {
	optional	int64 	mail_id	= 1;
	optional	int32 	code 	= 2;	// 0.领取成功 1.邮件不存在
	repeated nested_item_base reward = 3; //邮件奖励	
}

//单个任务
message hall_item_task {
    optional int32 task_id = 1;
    optional int32 cur_num = 2; 	//当前完成进度
	optional int32 drew_times = 3;	//已领取次数
    optional int32 status = 4; 		//是否已完成    0:未激活； 1:进行中   2:已完成  3:已领取
}

message hall_change_gateout{
	optional int32 		level = 1; //0:普通; 1.VIP; 2:SVIP
	optional string 	ip = 2;
	optional int32 		port = 3;
}

message hall_userData {
	optional uint32 userId = 1; //用户ID
    optional string userName = 2; //用户昵称
    optional int32 sex = 3; //性别
    optional string headUrl = 4; //头像

    //用户兑换信息
    optional string realName = 5; //真实姓名
    optional string phoneNumber = 6; //联系电话
    optional string wxNumber = 7; //微信号码
    optional string realAddress = 8; //真实地址
	optional string unionid = 9;	//微信unionid
	optional string openid = 10;//微信openid
	optional string city = 11;//微信获取的城市
	optional string idcardNumber = 12;//实名认证的身份证号
	optional bool bagMutex = 13;
	optional int32  gameid = 14;
	
	optional int32 vipLevel = 15; //vip等级
	optional int64 vipExp = 16;   //vip经验
	
	optional int32 level = 17; //玩家等级
	optional int64 exp = 18; //玩家经验
	
	optional int64 coin = 19; //金币
	optional int32 diamond = 20; //钻石
	optional int32 roomCard = 21; //房卡
	optional int32 bouns = 22; //红包
	optional int64 common_gold = 23; //普通元宝(金币场)
	optional double gold = 24; //特殊货币
	optional int32 phone_value = 25; //话费
	
	optional int32 online_time_day = 26;//每日在线
	optional int32 recharge_day    = 27;//每日充值
	optional bool is_get_money = 28;//是否领取首次红包
	repeated msg_update_memory_card_info memory_card_info_list = 29;//
	optional int32 reg_channel = 30;	//注册的渠道id
	
	optional int32 inviter_id = 31; //邀请者id
	optional string inviter_name = 32; //邀请者名称
	optional string inviter_headurl = 33; //邀请者头像
	optional int32 code = 34; //我的邀请码
	optional int32 modified_name_times = 35;
}

//排行信息
message hall_rank_item {
    optional int32 placing = 1; //名次
    optional uint32 userId = 2; //用户id
    optional string nickName = 3; //用户昵称
    optional string rankInfo = 4; //排行项目
}

//金币专区
message CoinZone {
    repeated GoodsItem pay = 1; //充值金额
}

//钻石专区
message DiamondZone {
    repeated GoodsItem pay = 1; //充值金额
}
//兑换专区
message ExchangeZone {
    repeated GoodsItem money = 1; //兑换金额
}

//购买专区
message BuyZone {
    repeated GoodsItem pay = 1; //花费金额
}

//商品类型
message GoodsItem {
    optional int32 id = 1;
    optional int32 money = 2; //金额
    optional string img = 3; //商品图片
}

//保险箱数据
message hall_strongbox_info {
    optional int64 boxCoin = 2; //用户保险箱里的金币
    optional int64 userCoin = 3; //用户身上的金币
}

//保险箱信息
message hall_ack_strongbox_info {
    optional ProtoHeader header = 1;
    optional hall_strongbox_info strongboxInfo = 2; //保险箱数据
}

message hall_req_strongbox_info {
    optional ProtoHeader header = 1;
}

//保险箱存取
message hall_req_coininbag {
    optional ProtoHeader header = 1;
    optional int64 accessCoin = 2; //存取的金币
    optional int32 type = 3; //操作类型
}

message hall_ack_coininbag {
    optional ProtoHeader header = 1;
    optional hall_strongbox_info strongboxInfo = 2; //保险箱数据
}


//抽奖动作
message hall_req_draw_lottery {
    optional ProtoHeader header = 1;
    optional int32 draw_type = 2;
    optional int32 num = 3;
}


message hall_ack_draw_lottery {
    optional ProtoHeader header = 1;
    repeated int32 lotteryId = 2; //奖励物品id
	repeated int32 redbagNum = 3; //随机红包的金额
}

//请求转盘与签到信息
message hall_req_ds_lottery_info {
    optional ProtoHeader header = 1;
}

//回复转盘与签到信息
message hall_ack_ds_lottery_info {
    optional ProtoHeader header = 1;
    optional hall_draw_lottery_info drawLotteryInfo = 4; //转盘信息与奖励物品列表
    optional hall_sign_lottery_info signLotteryInfo = 5; //签到信息与奖励物品列表
}

//商品列表Req
message hall_req_goods_list {
    optional ProtoHeader header = 1;
    optional int32 goods_type = 2;
    optional string channelId = 3; //渠道id
}

//商品列表Ack
message hall_ack_goods_list {
    optional ProtoHeader header = 1;
    optional int32 goods_type = 2;
    repeated hall_goods_item_msg items = 3; //  物品信息
}

//购买商品REQ
message hall_req_goods_buy {
    optional ProtoHeader header = 1;
    optional int32 goods_id = 2; //商品id
    optional int64 goods_num = 3; //购买该商品的数量
}

//购买商品ACK
message hall_ack_goods_buy {
    optional ProtoHeader header = 1; //code>=0正常，code<0错误
    optional int32 goods_type = 2; //已购买的商品类型
    optional int64 amount = 3; //当前自己拥有的该商品的数量--例：10000金币
}

//单个商品信息
message hall_goods_item_msg {
    optional int32 goods_id = 1; //商品id
    optional string name = 2; //  物品名称
    optional int32 price_type = 3; //价格类型
    optional double price = 4; //价格数量--例：10个钻石
    optional int32 goods_type = 5; //商品类型
    optional double amount = 6; //商品数量--例：10000金币
    optional string discount = 7; //折扣
    optional string image = 8; //商品图片： coin_1 coin_2 coin_3 coin_4 coin_5 coin_6 / diamond_1 diamond_2 diamond_3 diamond_4
}

//签到信息与奖励物品列表
message hall_sign_lottery_info {
    optional bool isSignToday = 1; //今日是否已签到
    optional int32 totalDays = 2; //共签到多少天
    optional int32 continuousDays = 3; //连续签到天数
    repeated hall_lottery_item signItems = 4; //签到奖励物品列表
}


// 转盘信息与奖励物品列表
message hall_draw_lottery_info {
    optional bool isDrawToday = 1; //今日是否已抽奖
    repeated hall_lottery_item dialItems = 2; //转盘奖励物品列表
}

// 奖励物品信息
message hall_lottery_item {
    optional int32 id = 1;
    optional int64 num = 2;
    optional int32 type = 3; //奖励物品类型
}

//创建房间列表
message hall_req_new_room_list {
    optional int32 hall_gameId = 1;

}

message hall_ack_new_room_list {
    optional int32 hall_gameId = 1;
    repeated hall_new_room_list roomlist = 2;
}

message hall_new_room_list {
    optional int32  fangJianId = 1;
    optional int64  fangJianRenShu = 2;
}


// 请求任务列表
message hall_req_task {
}

message hall_ack_task {
    repeated hall_item_task taskList = 1;
}

// 领取任务
message hall_req_draw_task {
	optional int32 task_id = 1;
}

message hall_ack_draw_task {
	optional int32 ret_code = 1;   		// 0:领取成功  1:已领取 2:任务未完成 3.无此任务
	repeated happy_item item_list = 2;	  
}

// 更新任务
message hall_update_task{
	optional hall_item_task task = 1;
}

//商城配置
message config_mall_item {
	required int32 mall_id = 1;
	required int32 cost_item_id = 2;
	required int64 cost_item_num = 3;
	required int32 mall_item_id = 4;
	required int64 mall_item_num = 5;
}

message hall_req_config_mall {
}

message hall_ack_config_mall {
	repeated config_mall_item item_list = 1;
}

// 公告
message config_notice_item {
	required int32 timestamp = 1;
	required string title = 2;
	required string content = 3;
	required int32 type = 4;				// 0.公告 1.活动 2.我的消息
	required int32 level = 5;
}

message hall_req_config_notice {
}

message hall_ack_config_notice {
	repeated config_notice_item notice_list = 1;
}


message hall_req_config_gm {
}

message hall_ack_config_gm {
	repeated hall_config_gm gm_list = 1;
}


message hall_req_config_broadcast {
}

message hall_ack_config_broadcast {
	repeated string content = 1;
}

message hall_config_gm {
	required string title = 1;
	required string content = 2;
}

//背包
message item_info{
	optional int64   id       		 = 1;
	optional int32   item_data_id    = 2;
	optional int64   count           = 3;
	optional int32   binded          = 4;
	optional int32   grid_id         = 5;
}

message msg_bag_info {
	optional int32    		bag_nums       = 1;
	repeated item_info 		items          = 2;
}

message msg_bag_delete_items {
	repeated int32          grid_ids       = 1;
}

message msg_bag_add_items {
	repeated item_info 		items          = 2;
}

message update_item {
	optional int32          grid_id        = 1;
	optional int64          num            = 2;
}

message msg_bag_update_items {
	repeated update_item     items         = 1;
}

//七天连续奖励
message reward_info{
	optional int32           index         = 1;
	optional int32           item_id       = 2;
	optional int64           num           = 3;
	optional int32           state         = 4; // 0 可领取 1不能领取  2 已领取
}

message get_msg_seven_day_reward_req{
}


message get_msg_seven_day_reward_ret{
	repeated reward_info     reward_list    = 1;
	optional bool 			 is_share 		= 2;	//是否分享过
}

message draw_seven_day_reward_req{
	required int32           index        = 1;
}

message draw_seven_day_reward_ret{
	required int32           ret_code     = 1[default=0];		// 0.领取正确 1.领取天数对不上 2.已领取过奖励
	required int32           index        = 2;
}

//七日登录 分享奖励
message draw_share_seven_day_reward_req {
	required int32           index        = 1;
}

message draw_share_seven_day_reward_ret {
	required int32           ret_code     = 1[default=0];		// 0.分享领取成功 1.分享天数对不上 2.已领取过分享奖励 3.还没领取过就分享领奖
	required int32           index        = 2;
}

//玩家属性改变
//1 gametype 改变
//1015  玫瑰
message msg_player_property_update{
	optional int32           type         = 1;
	optional int64           value        = 2;
}

//背包道具使用
message msg_use_bag_item_req{
	optional int32            use_type    	= 1; //1 兑换红包 2 兑换金豆
	optional int32            item_data_id  = 2;
	optional int64            num           = 3; //兑换金额
}

message msg_use_bag_item_ret{
	optional int32            ret_code      = 1[default=0]; //1 类型错误 2 数量不足
	optional int32            item_data_id  = 2;
	optional int64            cur_num       = 3; // 道具剩余数量
	optional string           code          = 4; //兑换码
	optional int64            exchange_money   = 5; //已结兑换的钱
}

//打开兑换码界面
message msg_open_code_req{
	optional int32            type          = 1;//1兑换码记录  2兑换码领取记录
	optional int32            op_type       = 2; //1 红包兑换  2 红包卷兑换
}

message code_info{
	optional string           code          = 1;
	optional double           value         = 2;
	optional int32            time          = 3;
}

message msg_open_code_ret{
	repeated code_info        code          = 1;
	optional int32            type          = 2;
	optional int32            op_type       = 3;
}
 
//获取当前红包人数 
message msg_get_bouns_num_req{
	optional int32            op_type       = 1;
}	

message msg_get_bouns_num_ret{
	optional int64            num           = 1;
	optional int32            op_type       = 2;
}

message msg_match_tips_ack{
	required string            match_name           = 1;
}

//小刺激游戏状态更新
message msg_excite_update{
	optional int32            state     = 1[default=0];//0 开启  1 关闭
}

// 获取玩家的邀请信息
message msg_user_invite_info_req{
}

message msg_user_invite_info_ack{
	optional int64 	all_bouns_num 		= 1;	//累计红包
	optional int32 	all_invite_num 		= 2;	//邀请好友人数
	optional int32  finish_invite_num 	= 3;	//已完成好友人数
	repeated invite_user_info user_list = 4;	//受邀玩家列表
	optional int64  all_rebate_num		= 5[default=0];	//返利金币
}

// 有新的受邀玩家
message msg_add_user_invite_info {
	optional invite_user_info user_info = 1;
}

// 受邀玩家完成任务
message msg_finish_invite_info {
	optional invite_user_info user_info = 1;	// 完成好友信息（此玩家有可能不在显示玩家中）
	optional int64 	all_bouns_num 		= 2;	// 累计红包
	optional int32  finish_invite_num 	= 3;	// 已完成好友人数
}

message invite_user_info {
	optional uint32 	uid 		= 1;
	optional string 	name 		= 2;	// 好友名
	optional string 	head 		= 3;	// 头像
	optional bool 		is_finish	= 4;	// 状态
}

message msg_get_user_invite_page_req{
	optional	int32 	page = 1;
}

message msg_get_user_invite_page_ret{
	repeated invite_user_info 	user_list = 1;	//受邀玩家列表
	optional	bool 			is_last_page = 2;
}


message msg_invite_task_info{
	optional	bool 			is_open = 1;				//（集成包）推广任务是否打开
	optional	bool			is_invitee = 2;				//是否是被邀请人
	optional	bool 			is_finish_invite_task = 3;	//是否完成邀请任务
	optional	int32			invite_active_num = 4;		//邀请任务完成活跃度
}

// 千里传音
message msg_item_use_broadcast_req {
	optional 	int32           item_data_id  = 1;
	optional 	string 			title = 2;
	optional	string			content = 3;
}

message msg_item_use_broadcast_ret{
	optional	int32 			ret_code = 1[default =0];  // 0.成功  1.道具不足 2.使用次数已达上限，请明日再试！
}

//
message hall_query_bind_req {
	optional   int64   code = 1;
}

//
message hall_query_bind_ret {
	optional int32 playerid = 1;
	optional string name = 2;
	optional string head_url = 3;
	optional int32 ret_code = 4; //0:成功, 1:失败
}

//
message hall_bind_agent_req {
	optional   int64   code = 1;
}

//
message hall_bind_agent_ret {
	optional   int32   ret_code = 1[default =0]; //0:成功, 1:失败, 2:已经绑定过
}

message msg_bind_account_req {
	optional int32 type = 1;    // 1.绑定 2.解绑
	optional string mobile = 2;
	optional string password = 3;
	optional string mobile_code = 4;
}

message msg_bind_account_ret {
	// 0.绑定成功；1.验证码错误 2.暂无响应 3.账号已被绑定 4.重复绑定账号(已有绑定账号) 5.账号密码不匹配	 6.绑定账号被限制访问 
	// -1.解绑成功; -2.未绑定账号 -3.验证码错误 -4.账号与绑定账号不匹配 -5.手机渠道不可解绑 -6解绑验证错误
	optional 	int32	ret_code = 1;		
}

message msg_modify_name_req {
	optional string new_name = 1;
}

message msg_modify_name_ret {
	optional 	int32 	ret_code = 1;		//0.修改成功；1.微信注册账号不可修改 2.名字重复 3.低俗名字敏感词 4.改名卡不足 
	optional 	string 	new_name = 2;
}

message msg_get_excite_game_record_req {
	optional    int32  index  = 1;
	optional    int32  game_type = 2;
}

message excite_value{
	optional    int32  id = 1;
	optional    int32  value = 2;
	optional    int32  value2 = 3;
}

message excite_game_record{
	optional    int64  			issue_num  	= 1;
	repeated    excite_value   	rewards 	= 2;
	repeated    excite_value    bet_area    = 3;
	repeated    int32           reward_area = 4;
	optional    int32           bet         = 5;
	optional    int32           win         = 6;
}

message msg_get_excite_game_record_ret {
	optional    int32  ret_code  = 1[default=0];
	optional    int32  game_type = 2;
	optional    int32  index     = 3;
	optional    int32  all_num   = 4;
	repeated    excite_game_record  records = 5;
	
}

message msg_modify_head_req {
	optional string new_head = 1;
}

message msg_modify_head_ret {
	optional 	int32 	ret_code = 1;		//0.修改成功；1.无效的地址 
	optional 	string 	new_head = 2;
}

message client_tree_info_req {
}

message client_tree_info_ack {
	optional int32 tree_id = 1;	
	optional int32 coin = 2;
	optional int32 time = 3;
}

message client_tree_req {
	optional int32 tree_id = 1;
}

message client_tree_ack {
	optional int32 ret_code = 1;	
}

//-------------------朋友关系+ 聊天
message friend_info {
	optional uint32 uid = 1;
	optional string name = 2;
	optional string head_url = 3;
	optional int32	state = 4;	//0:未上线， 1：大厅  其他：游戏id
}

message client_add_friend_req {
	optional uint32 uid = 1;
	optional int32	type = 2;	//0:增加  1：删除
}

message client_add_friend_ack {
	optional int32	result = 1; //0:成功  1:该用户已经是你的好友， 2:该用户不存在  3: 该用户不是你的好友
	optional uint32 uid = 2;
	optional int32	type = 3;	//0:增加  1：删除
}

message client_add_friend_bc {
	optional int32	type = 1;	//0:增加  1：删除
	optional friend_info  info = 2;
}

message client_join_group_req {
	optional int32  gid = 1;
	optional int32	type = 2;	//0:增加  1：删除
}

message client_join_group_ack {
	optional int32	result = 1; //0:成功  1:你已经在群里面， 2:该群不存在  3: 你不在群里面
	optional int32 gid = 2;
	optional int32	type = 3;	//0:增加  1：删除
}

//邀请好友入群
message invite_join_group_req {
	optional uint32  uid = 1;
	optional int32 gid = 2;
	optional int32	type = 3;	//0:增加  1：删除
}

message invite_join_group_ack {
	optional int32	result = 1; //0:成功  1:你已经在群里面， 2:该群不存在, 3:该用户不存在， 4：你没有权限
	optional uint32 uid = 2;
	optional int32 	gid = 3;
	optional int32	type = 4;	//0:增加  1：删除
}


//请求朋友信息
message client_friend_info_req {
}

message client_friend_info_ack {
	repeated friend_info infos = 1;
}

message group_info {
	optional int32 	gid = 1;
	optional string name = 2;
	repeated friend_info members = 3;
}

//请求群信息
message client_group_info_req {
}

message client_group_info_ack {
	repeated	int32 	gids = 1;
}

//请求群详细信息
message client_group_detail_req {
	optional int32 	gid = 1;
}

message client_group_detail_ack {
	optional group_info ginfo = 1;
}

message chat_msg {
	optional int32 id = 1;
	optional uint32 from = 2;
	optional string msg = 3; //表情 使用 # + id 的办法， 比如说： #1 表示笑脸
	optional int32 time = 4;
	optional uint32	uid = 5;
	optional int32	gid = 6;
}

message client_chat_req {
	optional uint32	uid = 1;
	optional int32	gid = 2;
	optional string msg = 3;
}

message client_chat_ack {
	optional int32	ret = 1; // 0:成功， 1：找不到用户， 2：找不到群  3: 消息不合规则
	optional chat_msg msg = 2;
}


// ==================================================================================================================================================================
// common_client
// ==================================================================================================================================================================
//cmd_start_index=1800
//cmd_name=common
message ProtoHeader {
    optional string version = 1; // 版本号
    optional uint32 userId = 2; // 用户 id
    optional int32 code = 3; // result code
    optional string error = 4; // result error description
}

//服务器信息
message ServerInfo {
    optional string ip = 1;
    optional int32 port = 2;
    optional int32 releaseTag = 3; //发布版本标志
    optional int32 currVersion = 4; //服务器的当前最新版本号
    optional int32 isUpdate = 5; //0=无需升级 1=可选升级 2=强制升级
    optional string downloadUrl = 6; //下载地址
    optional string versionInfo = 7; //版本升级描述信息
    optional int32 isMaintain = 8; //是否停服维护 1=停服维护中
    optional string maintainMsg = 9; //维护提示消息
    optional int32 status = 10; //0开启 1关闭
    optional int32 gameId = 11; //0开启 1关闭
}

//网易语音信息
message NetIMInfo{
	optional string		nimId = 1; 
	optional string		nimToken = 2;
}

// 接入服务器
message QuickConn {
    optional ProtoHeader header = 1;
    optional string channelId = 2; //渠道号
    optional int32 gameId = 3; //游戏ID: 1德州、2麻将、3斗地主
    optional int32 currVersion = 4; //当前版本号
    optional int32 languageId = 5;
    optional uint32 userId = 6; //用户Id
}

message AckQuickConn {
    optional ProtoHeader header = 1;
    repeated ServerInfo gameServer = 2; //游戏服务器
    optional int32 serverListVersion = 3; //游戏服务器的列表是否需要更新
}

// 微信信息
message WeixinInfo {
    optional string openId = 1; // 微信授权用户唯一id
    optional string nickName = 2; // 微信昵称
    optional string headUrl = 3; // 微信头像
    optional int32 sex = 4; // 性别: 1=男  2=女
    optional string city = 5; // 城市
    optional string unionId = 6; // unionId
}

//注册类型
//enum common_enum_reg {
//    RET_TYPE_TOURIST = 1;
//    RET_TYPE_WEIXIN = 2;
//}

//客户端系统类型
//enum common_enum_os_type {
//    OS_IOS = 1;
//    OS_ANDROID = 2;
//    OS_WEB = 3;
//}

//请求
message common_req_reg {
    optional ProtoHeader header = 1;
    optional int32 regType = 2; //注册类型:1,游客2,微信
    optional WeixinInfo wxInfo = 3; //微信登录信息，如果是游客注册，则不需要填写此信息
    optional int32 clientOSType = 4; //1=iOS 2=Android 3=web
    optional string channelId = 5; //渠道
}

//回复
message common_ack_reg {
    optional ProtoHeader header = 1;
    optional uint32 userId = 2; //注册成功之后的用户id
}

//表示玩家掉线
message cm_offline {
}

//表示心跳
message cm_hearbeat {
    optional uint32 seq_id = 1; //序列号
}



//聊天的内容
message common_req_message {
    optional ProtoHeader header = 1;
    optional int32 msgType = 2; //消息的类型,1,快捷,2,表情,3,自定义
    optional int32 id = 3; //只有快捷和表情的时候有用
    optional string msg = 4; //自定义的时候使用
    optional uint32 userId = 5; //发消息的人是谁
    optional int32 deskId = 6; //desk的id
    optional uint32 toUserId = 7; //收消息的人 道具时使用
}

//消息广播
message common_bc {
    optional ProtoHeader header = 1;
    optional int32 msgType = 2; //消息的类型,1,快捷,2,表情,3,自定义
    optional int32 id = 3; //只有快捷和表情的时候有用
    optional string msg = 4; //自定义的时候使用
    optional uint32 userId = 5; //发消息的人是谁
    optional uint32 toUserId = 6; //收消息的人 道具时使用
}

//使用道具
message ComUseItem {
	optional ProtoHeader header = 1;
	optional uint32 touserid = 2;
	optional uint32 itemid = 3;
}

message ComUseItemRsp {
	optional ProtoHeader header = 1;
	optional uint32 itemid = 2;
	optional int32 resultcode = 3;
	optional uint32 touserid = 4; //道具使用目标
	optional uint32 userid = 5; //道具使用者
}

message net_down_reason {
	optional int32 code = 1;
}

//表示心跳到达数量
message msg_hearbeat_num {
    optional uint32 user_id = 1;
    optional uint32 num = 2; //当前统计最近4个心跳包的到达情况
}

message msg_switch_client {
}

message msg_notify_client_log {
}

//=======================================login=========================
//cmd_start_index=1900
//cmd_name=login


message wx_login_by_code_req {
	optional string code = 1;
	optional int32 channel = 2;			//渠道id
	optional string ip = 3;
}

message login_by_refresh_token_req {
	optional string refresh_token = 1;
	optional int32 channel = 2;
	optional string ip = 3;
}

message common_login_ack {
	optional int32 code = 1;
}

message common_token_ack {
	optional string token = 1;
}

message common_refresh_notify {
	
}

message common_refresh_req {
	optional string refresh = 1;
	optional int32 channel = 2;			//渠道id
}

message yj_login_by_token_req {
	optional string token = 1;		
	optional int32 channel = 2;		// 渠道
	optional string ip = 3;			// 
	optional string version = 4;	// 客户端版本号
}

message wx_mini_program_login_by_code_req {
	optional 	string code = 1;
	optional 	int32 channel = 2;			//渠道id
	optional 	string ip = 3;
	optional	string	nickname = 4;
	optional	string	headurl = 5;
	optional	int32	sex = 6;
	optional	string	city = 7;
}

message login_by_user_id_req {
	optional	uint32 	user_id = 1;
}

message hw_login_req {
	optional 	string		playerId 		= 1;
	optional	string 		playerLevel		= 2;
	optional	string 		ip 				= 3;
	optional	string 		playerName 		= 4;
	optional	string 		playerHead 		= 5;
	optional	string 		timestamp 		= 6;
	optional 	int32		chan			= 7;
	optional	string 		playerSSign 	= 8;
}

message vivo_login_req {
	optional 	string		authtoken 		= 1;
	optional	string 		playerName 		= 2;
	optional	string 		ip 				= 3;
	optional	string 		timestamp 		= 4;
	optional 	int32		chan			= 5;
	optional	string 		playerHead 		= 6;
}

message oppo_login_req {
	optional 	string		token 		= 1;
	optional	string 		ssoid 		= 2;
	optional	string 		ip 			= 3;
	optional	string 		timestamp 	= 4;
	optional 	int32		chan		= 5;
}

message mi_login_req {
	optional 	string		session_id 	= 1;
	optional	string 		uid 		= 2;
	optional	string 		ip 			= 3;
	optional	string 		timestamp 	= 4;
	optional 	int32		chan		= 5;
	optional	string 		playerName 	= 6;
}

//=======================================login=========================
//cmd_start_index=2000
//cmd_name=bisai

message msg_challenge_round {
	required int32 lun = 1;
	required int32 ju = 2;
}

message msg_challenge_wait {
	required int32 desk = 1;
}

message msg_challenge_result {
	required bool win = 1;
	required int32 money_type = 2;
	required int64 money_num = 3;
	required int32 rank = 4;
}

message match_info {
	required int64 point_init = 1;		//初始底分
	required int64 point_player = 2; 	//玩家初始积分
	required string match_name = 3;		//比赛场名字
}

message match_round_info {
	required int32 type = 1;
	required int64 out_point = 2;
	required int32 ju_num = 3;
	required int32 up_num = 4;
	required int32 reset = 5;
}

message match_reward_item {
	required int32 type = 1;
	required int64 num = 2;
}

message match_reward_info {
	required int32 rank_from = 1;
	required int32 rank_to = 2;
	repeated match_reward_item reward_list = 3;
	optional string text = 4; // 奖励的文字描述
}

message game_user_info {
	required uint32 userId = 1;
	required string name = 2;
	required string headurl = 3;
	required int32 sex = 4;
	required int32 type = 5;		// (1.真实玩家; 2.陪玩机器人; 3.上帝机器人)
	optional int32 hall_id = 6;		// 所在大厅 	（真实玩家才有此项）
	optional string token = 7;		// 登录token	（真实玩家才有此项）
	optional string openid = 8;		// 微信openid   （真实玩家才有此项）
	optional int32 level = 9;
	optional int64 exp = 10;
	optional int32 vip_level = 11;
}

message msg_h2g_challenge_info{
	required int64  id =1;
	required match_info match = 2;
	repeated match_round_info round_list = 3;
	repeated match_reward_info reward_list = 4;
	repeated game_user_info sign_user_list = 5;
}

message hall_match_info {
	required int32 match_id = 1;					
	repeated match_reward_item sign_fee = 2;		// 报名费用
	required bool is_sign = 3;						// 是否报名
	required int32 open_sign_num = 4;				// 开赛条件（报名人数）
	required string name = 5;						// 比赛名
	required string openTime = 6;					// 比赛开放时间（描述时间）
	required string describe = 7;					// 描述 （“108人开赛，前55人获奖”）
	required int32 free_sign_times = 8;				// 每日免费报名次数
	repeated match_reward_info reward_list = 9;		// 奖励列表
	optional int32 join_num = 10;				 	// 当前参与人数
	optional int64 min_coin_num = 11;				// 允许进入的最小携带金币
	optional int32 match_class = 12;				// 比赛分类（1.人满开赛  2.定时赛  3.密码定时赛）
	optional string icon = 13;						// 比赛icon
	optional int32 sub_type = 14;				    // 1微信红包 2实物
	optional int32 openSeconds = 15;				// 比赛开始的秒
	optional int32 used_free_sign_times = 16;		// 使用过的免费报名次数
	optional int32 match_state = 17;				// 0.等待报名中;1.报名中;2.进行中;3.已结束;4.已作废;5.延迟报名中
	optional int32 game_type = 18;					// 游戏类型 见 data_game_type配置表
	optional string deadSignTime = 19;				// 报名截止时间
	optional int32 cur_round = 20[default=0];		// 当前轮次（定时赛有效）
	repeated match_reward_item join_fee = 21;		// 中途加入费用（定时赛有效）
}

message msg_match_list_req {
	required int32 match_type = 1;
}

message msg_match_list_ack {
	required int32 match_type = 1;
	repeated hall_match_info match_list = 2;
}

message msg_update_match_free_times {
	optional int32 match_id = 1;
	optional int32 used_free_sign_times = 2;
}

message msg_match_sign_req {
	required int32 match_id = 1;
	optional string match_passwd = 2;
}

message msg_match_sign_ack {
	required int32 match_type = 1;
	required int32 match_id = 2;
	optional ProtoHeader header = 3;
}


message msg_match_unsign_req {
	required int32 match_id = 1;
}

message msg_match_unsign_ack {
	required int32 match_type = 1;
	required int32 match_id = 2;
	optional ProtoHeader header = 3;
}

message msg_update_match_num {
	required int32 match_type = 1;
	required int32 match_id = 2;
	optional int32 num = 3;
	optional int32 join_num = 4;	// 当前参与人数
}

message msg_match_beginning {
	optional string ip = 1;
	optional int32 port = 2;
	optional string token = 3;
	optional int32 game_type = 4; 
}

message msg_get_match_signed_num_req {
	optional int32 match_id = 1;
}

message msg_get_match_signed_num_ack {
	optional int32 num = 1;
}

message challenge_user_result {
	optional uint32 userId = 1;
	optional int32 rank = 2;
	//optional int32 socre = 3;
}

message msg_g2h_challenge_result_info {
	required int64 id = 1;
	repeated challenge_user_result result = 2;
}

message msg_update_match_state {
	optional	int32 	match_id = 1;
	optional	int32 	match_state = 2;
}

// 金币场掉落奖励
message msg_coin_room_drop_reward {
	repeated 	happy_item 		item_list = 1;		//掉落的奖励道具
}

message msg_match_info_req {
	optional		int32			match_id = 1;
}

message msg_match_info_ret {
	optional hall_match_info match_info = 1;
}

//=======================================login=========================
//cmd_start_index=2100
//cmd_name=club_1
//创建房间
message club_room_rule {
    optional int32 boardsCout = 1; //房间的局数
    optional int32 guangguoType = 3;//逛锅类型
	optional bool isDianPaoSanJia = 4; //是否点炮包三家
    optional bool isUseYaoJiu = 5; // 是否有幺九蛋
	optional bool isXiaoJiFeiDan = 6; // 是否小鸡飞蛋
	optional bool isKuaiBao = 7; // 是否快宝
	optional bool isXiaoJiWanNeng = 8; // 是否小鸡万能宝
    optional bool isYaoJiuSanSe = 9; // 是否幺九蛋顶三色
    optional int32 userCountLimit = 10; //玩家人数限制
	optional bool isUnCheat	= 11;	//是否防作弊
	optional int32 payType = 12; //房费支付模式
	optional bool isKuaiGuo	= 13;	//是否快锅
}

message h2g_create_club_desk_req{
	optional uint32 user_id = 1;
	optional int32 club_id = 2;
	optional int32 club_room_id = 3;
	optional club_room_rule room_rule = 4;
	optional uint32 owner_id = 5;
}

message g2h_create_club_desk_ack{
	optional uint32 user_id = 1;
	optional int32 club_id = 2;
	optional int32 club_room_id = 3;		// 
	optional string roomnum  = 4;
	optional uint32 owner_id = 5;
}

message g2h_sync_room_member_num{
	optional int32 club_id = 1;
	optional string roomnum = 2;
	optional int32 num = 3;
}

message g2h_sync_room_state{
	optional int32 club_id = 1;
	optional string roomnum = 2;
	optional int32 room_state = 3;		// 1.准备中(默认) 2.游戏中 3.销毁
}

message sync_room_role_score_info{
	optional	uint32 		role_id = 1;
	optional	int32 		score 	= 2;
}

// 游戏同步房间分数
message g2h_sync_room_score{
	optional 	int32 	game_type 	= 1;
	optional 	int32 	room_id  	= 2;
	optional 	int32	round 		= 3;	//第几局
	repeated 	sync_room_role_score_info scores = 4;	//分数情况
}

//房间管理通用协议
//cmd_start_index=2200
//cmd_name=room_mgr
//game_type:20 吉林麻将  21 吉林麻将俱乐部
message common_game{
	optional int32  game_type      = 1;  //游戏类型
	optional int32  room_id        = 2;
	optional uint32 user_id        = 3;
	optional int32  club_id        = 4;
	optional int32	club_wanfa	   = 5;
	optional int32	club_wanfa_desk = 6;
	optional int64  record_id      = 7; //记录ID（回放使用）
	optional int32  club_create_type   = 8; //俱乐部创建类型 1 自建 2 代开
	optional int32  blood_level    = 9;
	optional int32  blood_rate     = 10;
	optional int32  first_banker_id = 11;
	optional int32  last_winner_id  = 12;
	optional int32  multiple		= 13;
}

message common_game_header{
	optional int32  game_type      = 1;
	optional int32  room_id        = 2;
}

message common_role{
	optional int32  user_id        = 1;
	optional string name           = 2;
	optional int32  sex            = 3;
	optional string head_url       = 4;
	optional string open_id        = 5;
	optional bool  	is_ready       = 6;//未准备  已准备
	optional int32  seat           = 7; //座位
	optional int32  state          = 8; //1 在线 2 离线
	optional int64  coin           = 9; // 头像显示的金币
	optional bool   robot          = 10; //
	optional int32  ai_level       = 11;
	optional int32  win_times      = 12;//获胜次数
	optional int32  total_times    = 13;//总次数
	optional int32 	level 		   = 14;
	optional int64 	exp 		   = 15;
	optional int32 	vip_level 	   = 16;
	optional int32  lucky          = 17;//好牌级别
	optional latlng  latlng_info   = 18;//经纬度
	optional bool 	is_switch	   = 19;//是否切后台
	optional int32 	net_state 	   = 20;//网络状态
	optional int32  cheat_rate     = 21;
	optional int32  cheat_score    = 22;
	optional int32  cheat_state    = 23;
	optional int64 	score 		   = 24; //筹码数（金币场就是金币；朋友场有初始值）
	optional int32  robot_level    = 25; //机器人级别（0.普通机器人 1.庄家机器人）
	optional string ip             = 26;
	optional string address        = 27;
	optional int32	rate		   = 28[default=0];
	optional int32  item_num       = 29;
	optional bool   auto_flag      = 30; //false:正常状态, true:托管
	optional int32  fish_bet_id    = 31;
	optional int32  login_interval_time = 32;
	optional uint32 look_player		= 33[default=0];
}

message msg_create_game_ret{
	optional int32  ret_code       	     		 = 1[default=0];//1 房卡消耗未配置 2 房卡不足 3 游戏服未开启 4 房间已达上限 5 重复开房 6 不在此俱乐部 7 权限不足 8 没有该包房 9 没有该桌子 10 该桌子已经创建好了 13.非群主不能创建代开
	optional common_game game_info  	 		 = 2;
	optional common_role role_info  	 		 = 3;
	optional xl_game_rule rule 					 = 4;
}

message msg_enter_game_req{
	optional common_game_header game_info     = 1;
	optional latlng             latlng_info   = 2;
	optional int32 				seat   		  = 3;		//预选进入房间的座位号 				
}

message msg_enter_game_ret{
	optional int32        ret_code        	        = 1[default = 0];//1 房间号错误 2 房间人数已满 3.位置已经有人 4.房间中没有这个位置 5.俱乐部分数不足 6.需要加入俱乐部 7.房间已开始 10.已报名比赛场
	optional common_game  game_info          		= 2;
	optional common_role  self_info       	        = 3;
	repeated common_role  other_infos     	  	    = 4; //如果是百人场，只发可能当庄家的玩家列表
	optional xl_game_rule rule 					 	= 5;
	optional bool         id_reconnect     			= 6; //是否重连
	optional bool		  is_get_others 			= 7; //是否需要获取其它玩家列表 		  
	optional int32		  others_num				= 8; //其它玩家的总数量（如果是百人场，需要另外获取其它玩家列表）
	optional xl_game_rule_public rule_public		= 9;
	optional int32		  desk_id					= 10[default = 0];
}

message msg_enter_game_other{
	optional common_game_header game_info     = 1;
	optional common_role  role_info           = 2;
}

message msg_leave_game_req{
	optional common_game_header game_info     = 1;
}

message msg_leave_game_ret{
	optional int32      ret_code       		  = 1[default=0];// 1 房间不存在 2 不在此房间内 3 朋友场不能离开 
	optional common_game_header game_info     = 2;
	optional int32      user_id               = 3;
	optional int32		coin_ret_code		  = 4; //1.金币不足; 2.金币超过最大携带数量 3.挂机次数超过规定次数
}

message msg_stand_game_req{
	optional common_game_header game_info     = 1;
}

message msg_stand_game_ret{
	optional int32      ret_code       		  = 1[default=0];// 1 房间不存在 2 不在此房间内 3 朋友场不能离开 
	optional common_game_header game_info     = 2;
	optional int32      user_id               = 3;
}

message msg_prepare_game_req{
	optional common_game_header game_info     = 1; //如果是金币场，发送的是房间级别id，类似于普通场，高手场，其他就是房间号
	optional int32           rate          = 2[default=0];
}

message msg_prepare_game_ret{
	optional int32       ret_code             = 1[default=0];// 1 房间不存在 2 不在此房间内 3 没有游戏服 4 金币不足，不能进入  5 金币高于进入上限
	optional common_game_header game_info     = 2;
	optional int32      user_id               = 3;
	optional int32           rate          = 4[default=0];
}

message msg_g2h_create_room_ack{
	optional int32       game_type            = 1;
	optional int32       room_id              = 2;
}

message msg_g2h_update_room_state{
	optional int32       game_type            = 1;
	optional int32       room_id              = 2;
	optional int32       state                = 3; //1 返还房卡的解散 2 结束
	repeated coin_result results              = 4;//总结果
	repeated room_result_detail details       = 5;//详细
	optional int32       circle_num           = 6;//圈数
	optional int32       end_state            = 7; //1 真正结束
	optional int32 		 dissolve_role_id     = 8; // 解散玩家的id
}

message chat_info{
	optional common_game_header game_info     = 1;
	optional int32              msg_type      = 2;
	optional int32              id            = 3;
	optional string             msg           = 4;
	optional int32              to_user_id    = 5;
}

message msg_chat_message_req{
	optional chat_info 			chat_info     = 1;
}

message msg_chat_message_ret{
	optional chat_info 			chat_info     = 1;
	optional int32              send_user_id  = 2;
}

message msg_game_rule_req{
	optional int32              room_id       = 1;
}

message msg_h2g_create_game{
	repeated common_role         roles      = 1;
	optional common_game         game_info  = 2;
	optional common_coin         coin_info  = 3;
	optional xl_game_rule 		 rule		= 4;
}

message msg_update_room_role_state{
	optional common_game_header game_info          = 1;
	optional int32              user_id            = 2;
	optional int32              state              = 3; //1 在线 2 离线
}

message msg_g2h_create_match_ack {
	required int32 game_type 	= 1;
	required int64 match_id 	= 2;
} 

message common_coin{
	optional int32  base_score   = 1; //低分
	optional int32  ai_level     = 2; //ai等级
	optional int32  config_id    = 3;
	optional int32  tax          = 4; //房费
}

message msg_change_room_req{
	optional int32  game_type    	= 1;
	optional int32  room_coin_id    = 2;
	optional string  ip             = 3;
}

message msg_enter_coin_game_ret{
	optional int32  ret_code        = 1[default=0]; //1 金币不足，不能进入 2 金币高于进入上限 3 没有游戏服  4.房间人数已满（百人场）
	optional int32  rate          = 2[default=0];
	optional int32  arg           = 3;
}

message coin_result{
	optional int32  user_id         = 1;
	optional int64  coin            = 2;				// 输赢多少
	optional bool   is_hangup 		= 3;				// 是否挂机
	optional int32  identify 		= 4[default=0];		// 身份（每个游戏中表示身份不一样） （拼双十:庄家; 斗地主:地主）
	optional int32  game_user_state = 5[default=0]; 	// 玩家游戏状态 （麻将：胡牌） 
	optional int32  game_poker_num	= 6[default=0];  	// 游戏中特殊牌型次数 （麻将:摸宝或对宝; 拼双十:牛牛牌型; 斗地主:王炸; 刨幺：大雪）  
	optional int32	bet_coin		= 7[default=0];		// 投注金额
	optional int32  reduction_id    = 8[default=0];     // 游戏周期片段id
	optional int32  reward_type     = 9[default=0];     // 奖励的类型
	optional int32  bouns           = 10[default=0];    // 红包(捕鱼专用)
	repeated coin_result_item  item_list = 11;          // 物品奖励(捕鱼专用)
}

message msg_g2h_coin_result{
	optional common_game_header game_info          = 1;
	repeated coin_result        result_info        = 2;
}

//创建牌桌
message tdk_rule_info {
	optional uint32 		round_count = 1; //局数
	optional uint32 		role_count = 2; //局数
	optional uint32 		play_type = 3; //玩法从1开始
	optional bool 			has_joker = 4; //有王
	optional bool 			joker_pao = 5; //王中炮
	optional bool 			a_pao = 6; //a必炮
	optional bool 			lan_double = 7; //烂锅加倍
	optional bool 			genfu = 8; //跟服
	optional bool 			is_open = 9; //亮底
	optional bool 			share_type = 10; //true:公张随豹，false：公张随点
	optional bool 			bati = 11; //true:把踢，false：末踢
	optional uint32 		base_score = 12; //基础分
	optional uint32 		allin_score = 13; //allin分
	optional bool 			limit_club			= 14;	//是否仅限俱乐部成员加入
	optional bool 			limit_words			= 15;	//禁言
	optional bool 			limit_talk 			= 16;	//语音
	optional bool 			gps 				= 17;	//gps测距
	optional uint32         xifeng_num          = 18;   //喜分
	optional uint32         max_score          = 19;   //下注最大分
	optional bool 			sixiaowang 				= 20;	//四小王
	optional int32          tuoguan_time          = 21;   //进入托管时间，0不托管
	optional bool          huixuanti          = 22;   //回旋踢
	optional bool          motifanbei          = 23;   //末踢翻倍
	optional bool          qinsandui          = 24;   //亲三队
	optional bool          lianxian          = 25;   //连线
	optional bool          busuoqiang          = 26;   //不缩枪
	optional bool          auto_start          = 27;   //人满自动开局
	optional bool          shunzi          = 28;   //顺子加分
}


//换桌成功返回
message msg_change_room_ret{
	optional int32 ret_code  = 1[default=0];////1 金币不足，不能进入 2 金币高于进入上限 3 没有游戏服
}

message msg_h2g_update_coin{
	optional uint32  user_id   = 1;
	optional int64   coin      = 2; 
}

//创建房间
message p16_req_createdesk{
    optional int32 boardscout = 1; //房间的局数
	optional bool isdianpaosanjia = 2; //是否点炮包三家
	optional bool isxiaojifeidan = 3; // 是否小鸡飞蛋
    optional bool isyaojiusanse = 4; // 是否幺九蛋顶三色
    optional int32 usercountlimit = 5; //玩家人数限制
	optional bool isuncheat	= 6;	//是否防作弊
	optional int32 paytype = 7; //房费支付模式
	optional bool issifenggang = 8; //是否四风杠(默认三风杠)
	optional bool pqsanse = 9;//是否飘胡、七对不限色和幺九
	optional bool isxiadanzhanli = 10;//是否下蛋算站立
	optional bool istongbaofanfan = 11;//是否通宝翻翻
	optional bool isquemen = 12;//是否缺门
	optional bool gps = 13;//gps   
	optional bool isyuyin = 14;//语音
	optional bool isBuJiaBuHu = 15;//不夹不胡
	optional bool isHaoQiFanBei = 16;//豪七翻倍
	repeated string reserved = 17; //保留字段(以后有新的字段就不用再在后面添加)
}

//返给客服端显示桌子规则,考虑到有可能和创建房间规则不一致,新加一个协议方便扩展
message p16_ack_desk_rule{
	optional int32 ret_code = 1[default = 0]; // 1 房间不存在
    optional int32 boardscout = 2; //房间的总圈数
    optional int32 guangguotype = 3;//逛锅类型
	optional bool isdianpaosanjia = 4; //是否点炮包三家
    optional bool isuseyaojiu = 5; // 是否有幺九蛋
	optional bool isxiaojifeidan = 6; // 是否小鸡飞蛋
	optional bool iskuaibao = 7; // 是否快宝
	optional bool isxiaojiwanneng = 8; // 是否小鸡万能宝
    optional bool isyaojiusanse = 9; // 是否幺九蛋顶三色
    optional int32 usercountlimit = 10; //玩家人数限制
	optional bool isuncheat	= 11;	//是否防作弊
	optional string ownernickname = 12; // 房主昵称
	optional int32 paytype = 13; //房费支付模式
	optional bool iskuaiguo	= 14;	//是否快锅
	optional int32 room_id  = 15; // 房间号
}

//金币场进入
message msg_enter_coin_game_req{
	optional int32           game_type     = 1;
	optional int32           room_id       = 2;
	optional string          ip            = 3;
	optional int32           rate          = 4[default=0];
	optional int32           seat          = 5;
	optional int32           desk_id       = 6;
	optional uint32			 look_player   = 7;
}

//巷乐游戏规则
message xl_game_rule{
	optional 	sdy_rule_info 		sdy_rule = 1;
	optional	ddz_rule_info 		ddz_rule = 2;
	optional	ps_rule_info 		ps_rule = 3;
	optional	tdk_rule_info 		tdk_rule = 4;
	optional	py_rule_info 		py_rule = 5;
	optional    pin3_rule_info      pin3_rule     = 6;
	optional    suoha_rule_info     suoha_rule = 7;
	optional    jlb_ps_rule_info    jlb_ps_rule = 8;
	optional	gdy_rule_info		gdy_rule = 9;
	optional	hb_rule_info		hb_rule = 10;
	optional    yq_pin3_rule_info   yq_pin3_rule = 11;
	optional	xy_ddz_rule_info	 xy_ddz_rule = 12;
	optional	paodekuai_rule_info 	paodekuai_rule = 13;
}

//三打一朋友场创建
message sdy_rule_info{
	optional int32          circle_num          = 1; //局数
	optional bool           zhu_2         		= 2; //主二
	optional bool           lian_kou_dai_po     = 3; //连扣带破
	optional bool           bi_diao             = 4; //比吊
	optional bool           wang_kou            = 5; //王扣
}

//斗地主朋友场规则
message ddz_rule_info{	
	optional int32          circle_num          = 1; 	//局数					% done
	optional int32 			max_score 			= 2;	//封顶分数 				% done
	optional bool 		    been_call_score 	= 3;	//双王4个2必叫分 		% done
	optional bool 			exchange_poker		= 4;	//换三张				
	optional bool 			can_dai_extra2		= 5;	//四带二				% done
	optional int32 			double_score		= 6;	//1.自由加倍; 2.农民优先; 3.不能加倍
	optional bool 			stack_gen_poker 	= 7;	//分摞发牌
	optional bool 			limit_words			= 8;	//禁言
	optional bool 			card_holder			= 9;	//记牌器
	optional bool 			limit_talk 			= 10;	//语音
	optional bool 			gps 				= 11;	//gps测距
	optional bool 			bottom_poker_double = 12;	//底牌加倍
	optional bool			is_juetou			= 13;	//撅头玩法
}

//拼十朋友场规则
message ps_rule_info{	
	optional int32          circle_num          = 1; 	//局数					% done
	optional int32 			max_score 			= 2;	//封顶分数 		% done
	optional int32			score_type 			= 3;	//分数类型， 1：1000， 2：2000， 3：不限
	optional int32 			game_type			= 4;	//抢庄模式  1：抢庄  2:通比  3:房主庄  4:牛牛庄
	optional int32 			show_type			= 5;	//显示牌的张数 1:扣一张 2:全扣
	optional int32			max_grub			= 6;	//最大抢庄倍数
	optional int32			max_bet			    = 7;	//最大下注倍数
	optional int32			card_type_three     = 8;	//特殊牌型-三条
	optional int32			card_type_straight  = 9;	//特殊牌型-顺子
	optional int32			card_type_flush     = 10;	//特殊牌型-同花
	optional int32			card_type_full_house     = 11;	//特殊牌型-葫芦
	optional int32			card_type_five     		 = 12;	//特殊牌型-五小牛
	optional int32			card_type_flush_straight = 13;	//特殊牌型-同花顺
	optional int32			card_type_sihua = 14;	//特殊牌型-四花牛
	optional int32			card_type_wuhua = 15;	//特殊牌型-五花牛
	optional int32			card_type_zhadan = 16;	//特殊牌型-炸弹牛
	optional bool 			limit_club			= 17;	//是否仅限俱乐部成员加入
	optional bool 			limit_words			= 18;	//禁言
	optional bool 			limit_talk 			= 19;	//语音
	optional bool 			gps 				= 20;	//gps测距
	optional bool 			renman 				= 21;	//人满开赛
	optional int32			tuoguan = 22;				//托管时间
	optional int32			beishu = 23;				//0：牛牛3牛九2牛八2  1：牛牛4牛九3牛八牛七2
}

//刨幺朋友场规则
message py_rule_info{	
	optional int32          circle_num          = 1; 	//局数					% done
	optional int32 			base_score 			= 2;	//
	optional bool			is_ming 			= 3;	//true：mingyao
	optional bool 			is_dui				= 4;	//true：对门一家
	optional bool 			is_san				= 5;	//true：3大，false：3小
	optional bool 			has_san				= 6;	//true：有
	optional bool 			limit_club			= 7;	//是否仅限俱乐部成员加入
	optional bool 			limit_words			= 8;	//禁言
	optional bool 			limit_talk 			= 9;	//语音
	optional bool 			gps 				= 10;	//gps测距
	optional bool           double              = 11;   //是否加倍
}

//创建房间
message na_req_createdesk{
    optional int32 boardscout = 1; //房间的局数
    optional int32 usercountlimit = 2; //玩家人数限制
	optional bool isuncheat	= 3;	//是否防作弊
	optional bool isqiduidaigu	= 4;	//七对带估
	optional bool istongbaofanfan = 5;//通宝翻番
	optional bool ispiaohudandiaofanfan = 6;//飘胡单吊翻倍
	optional bool isqiduiyaojiu = 7;//七对不限幺九
	optional bool isdianpaosanjia = 8; //是否点炮包三家
	optional bool gps = 9;//gps
	optional bool isyuyin = 10;//语音
	optional bool isuseyaojiu = 11; // 是否有幺九蛋
	optional bool isMenQingFanBei = 12; // 是否未开门翻倍
	repeated string reserved = 13; //保留字段(以后有新的字段就不用再在后面添加)
}

//进入房间
message na_ack_desk_rule {
    optional int32 ret_code = 1[default = 0]; // 1 房间不存在
    optional int32 boardscout = 2; //房间的总圈数
	optional bool isdianpaosanjia = 3; //是否点炮包三家
    optional bool isyaojiusanse = 4; // 是否幺九蛋顶三色
    optional bool pqsanse = 5;//是否飘胡、七对不限色和幺九
	optional bool istongbaofanfan = 6;//是否通宝翻翻
    optional int32 usercountlimit = 7; //玩家人数限制
	optional bool isuncheat	= 8;	//是否防作弊
	optional string ownernickname = 9; // 房主昵称
	optional int32 paytype = 10; //房费支付模式
	optional int32 room_id  = 11; // 房间号
}

message room_result_detail {
	optional int32      round_id              = 1; //局数
	optional int32      time                  = 2; //结束时间
	repeated coin_result results              = 3; //结果
	optional int64      record_id             = 4; //回放id
}

//金币场玩家基本信息
message msg_room_user_info{
	optional common_game_header game_info          = 1;
	repeated common_role  	    role_infos     	   = 2;
}

//金币场玩家金币信息
message msg_room_user_coin_info{
	repeated common_role_coin		role_coins 		= 1;
}

message	common_role_coin {
	optional int32  user_id         = 1;
	optional int64  coin            = 2;
}

//朋友场创建
message msg_create_game_req{
	optional common_game                    game_info 		  = 1;
	optional xl_game_rule 					rule 			  = 2;
	optional latlng                         latlng_info       = 3;
	optional xl_game_rule_public 			rule_public		  = 4;
}

message latlng {
	optional double         latitude  = 1;  //经度
	optional double         longitude = 2;  //维度
}

//更新位置
message msg_player_location_req{
	optional latlng latlng_info          = 1;
	optional string address              = 2;
	optional string ip                   = 3;
}

message msg_player_location_ack{
	optional int32 user_id          = 1;
	optional latlng latlng_info          = 2;
	optional string address              = 3;
	optional string ip                   = 4;
}

//房间金币更新
message msg_room_coin_update{
	optional int32  game_type      = 1;
	optional int32  room_id        = 2;
	optional int32  user_id        = 3;
	optional int64  coin           = 4;
}

//房间重连
message msg_room_reconnect_req{
}

//房间解散 （同意/拒绝）
message room_dissolve_agree_req {
	optional	bool		is_agree = 1;
}

message room_dissolve_agree_ack {
	optional 	int32       game_type   = 1;
	optional	uint32 		user_id 	= 2;
	optional	bool 		is_agree 	= 3;
}

//房间解散结果
message room_dissolve_agree_result {
	optional 	int32       game_type   = 1;
	optional	bool		is_dissolve = 2;		// 是否解散
}

//房间准备
message room_prepare_req {
}

message room_prepare_ack {
	optional 	int32       game_type   = 1;
	optional	uint32 		user_id 	= 2;
}

//下一把退出协议(仅对正在游戏的多人游戏的金币场有效)
message msg_plan_leave_game_req{
	optional common_game_header game_info     = 1;
}

message msg_plan_leave_game_ret{
	optional int32      ret_code       		  = 1[default=0];// 1 房间不存在 2 不在此房间内 3 不能离开房间
	optional common_game_header game_info     = 2;
	optional int32      user_id               = 3;
}

message msg_rank_req{
	optional 	int32 		rank_id   = 1;
}

message role_rank_info{
	optional	int32 		rank		= 1;
	optional	uint32		user_id 	= 2;
	optional	string 		name 		= 3;
	optional	string 		head_url	= 4;
	optional	int64 		score 		= 5;
	optional	int32 		timestamp 	= 6;
}

message history_rank_info {
	optional	uint32		champin_user_id	 	= 1;	//昨日冠军id
	optional	string		champion_name  		= 2;	//昨日冠军姓名
	optional	string 		champion_head		= 3;	//昨日冠军头像
	optional	int64 		champion_score 		= 4;	//昨日冠军得分
	optional	int32 		cur_rank 			= 5;	//当前名次	(-1 未上榜)
	optional	int64 		cur_score 			= 6;	//当前得分
	optional	int32 		history_rank 		= 7;	//玩家昨日名次 (-1 未上榜)
}

message msg_rank_ret{
	optional 	int32 				rank_id   = 1;
	repeated	role_rank_info 		rank_list = 2;
	optional	history_rank_info	history_info = 3;
}

//进入房间之前，查看房间规则、查看座位信息、验证游戏是否已下载
message msg_room_pre_enter_req{
	optional    int32               room_id   = 1;
}

message msg_room_pre_enter_ret{
	optional    int32               game_type = 1;
	optional    int32               room_id   = 2;
	optional	bool				is_can_select_seat = 3;		//是否可以选座
	repeated	seat_role			role_list = 4;		
}

//拼三张
message pin3_rule_info{
	optional int32       role_num     = 1;
	optional int32       boards_cout  = 2;
	optional int32       circle_num   = 3;
	optional int32       play_rule    = 5;
	optional int32       limit_rule   = 6;
	optional int32       limit_watch  = 7;
	optional int32       limit_cmp    = 8;
	optional int32       limit_score  = 9;
	optional bool        limit_talk   = 10;
	optional bool        is_gps       = 11;
	optional bool        is_giveup    = 12;
	optional bool        is_watchall  = 13;
}

//换座位协议
message msg_room_change_seat_req{
	optional int32      gametype     = 1;
	optional int32      roomid       = 2;
	optional int32      seat         = 3;
}

message msg_room_change_seat_ret{
	optional int32      ret_code     = 1[default=0];
	optional int32      gametype     = 2;
	optional int32      roomid       = 3;
	optional int32      user_id      = 4;
	optional int32      seat         = 5;
	optional int32      other_id     = 6;
	optional int32      other_seat   = 7;
}

//梭哈朋友场规则
message suoha_rule_info{	
	optional int32          circle_num          = 1; 	//局数					% done
	optional int32 			max_score 			= 2;	//封顶分数 		% done
	optional int32			score_type 			= 3;	//分数类型， 1：1000， 2：2000， 3：不限
	optional int32 			game_type			= 4;	//抢庄模式  1：抢庄  2:通比
	optional int32 			player_num			= 5;	//人数
	optional bool			show_card			= 6;	//亮底牌
	optional bool			give_up			    = 7;	//超时弃牌
	optional bool 			limit_club			= 14;	//是否仅限俱乐部成员加入
	optional bool 			limit_words			= 15;	//禁言
	optional bool 			limit_talk 			= 16;	//语音
	optional bool 			gps 				= 17;	//gps测距
}

message seat_role{
	optional int32  user_id        = 1;
	optional string name           = 2;
	optional int32  sex            = 3;
	optional string head_url       = 4;
	optional string open_id        = 5;
	optional bool  	is_ready       = 6;//未准备  已准备
	optional int32  seat           = 7; //座位
	optional int32  state          = 8; //1 在线 2 离线
	optional int64  coin           = 9; // 头像显示的金币
}

//俱乐部 拼十朋友场规则
message jlb_ps_rule_info{	
	optional int32          circle_num          = 1; 	//局数					% done
	optional int32 			max_score 			= 2;	//封顶分数 		% done
	optional int32			score_type 			= 3;	//分数类型， 1：1000， 2：2000， 3：不限
	optional int32 			game_type			= 4;	//抢庄模式  1：抢庄  2:通比
	optional int32 			show_type			= 5;	//显示牌的张数 1:扣一张 2:全扣
	optional int32			max_grub			= 6;	//最大抢庄倍数
	optional int32			max_bet			    = 7;	//最大下注倍数
	optional int32 			base_score			= 8;	//底注 1:10,2:20,3:50,4:100
	optional int32			card_type_three     = 9;	//特殊牌型-三条
	optional int32			card_type_straight  = 10;	//特殊牌型-顺子
	optional int32			card_type_flush     = 11;	//特殊牌型-同花
	optional int32			card_type_full_house     = 12;	//特殊牌型-葫芦
	optional int32			card_type_five     		 = 13;	//特殊牌型-五小牛
	optional int32			card_type_flush_straight = 14;	//特殊牌型-同花顺
	optional bool 			limit_club			= 15;	//是否仅限俱乐部成员加入
	optional bool 			limit_words			= 16;	//禁言
	optional bool 			limit_talk 			= 17;	//语音
	optional bool 			gps 				= 18;	//gps测距
}

message msg_g2h_immediately_update_room_state{
	optional int32       game_type            = 1;
	optional int32       room_id              = 2;
	optional int32       state                = 3; //1 返还房卡的解散 2 结束
	repeated coin_result results              = 4;//总结果
	repeated room_result_detail details       = 5;//详细
	optional int32       circle_num           = 6;//圈数
	optional int32       end_state            = 7; //1 真正结束
}

//干瞪眼朋友规则
message gdy_rule_info{
    optional int32      circle_num              = 1; //局数
    optional int32      role_count              = 2; //人数
    optional int32      max_score               = 3; //封顶
    optional bool       ruan_san                = 4; //三张不为软炸
    optional bool       bi_card                 = 5; //有牌必出
    optional bool       quanguan                = 6; //全关
    optional bool       wang_double             = 7; //手中剩王翻倍
    optional bool       bomb_double             = 8; //手中剩炸翻倍
	optional bool 		limit_club				= 9;	//是否仅限俱乐部成员加入
	optional bool 		limit_words				= 10;	//禁言
	optional bool 		limit_talk 				= 11;	//语音
	optional bool 		gps 					= 12;	//gps测距
}

//红包朋友规则
message hb_rule_info{
    optional uint32         zhuang_type = 1; //庄
    optional uint32         mailei = 2; //最低埋雷
    optional uint32         max_rate = 3; //最大倍数
    optional uint32         role_count = 4; //多少局
    optional bool           model = 5; //模式(选抢 :false; 必抢 : ture)
    optional bool           is_join = 6; //中途是否允许加入
    optional uint32         max_baonum = 7; //最大包数
    optional bool           limit_club      = 8;  //是否仅限俱乐部成员加入
	optional bool           limit_words      = 9;  //禁言
	optional bool 		limit_talk 				= 10;	//语音
	optional bool 		gps 					= 11;	//gps测距
}

// 旁观游戏
message msg_view_friend_game_req{
	optional	int32 		game_type 	= 1;
	optional	int32		room_id 	= 2;
}

message msg_view_friend_game_ret{
	optional	int32 			ret_code 	= 1[default=0];		// 1.房间号错误 2.观战人数已满 3.房间不能旁观 4.房间不允许旁观 5.俱乐部分数不足 6.需要加入俱乐部 10.已报名比赛场
	optional	common_game 	game_info 	= 2;
	optional	common_role 	self_info 	= 3;
	repeated	common_role 	other_infos = 4;
	optional	xl_game_rule 	rule  		= 5;
	optional	bool 			id_reconnect = 6;				//是否重连
	optional 	xl_game_rule_public rule_public = 7;
}

// 旁观者进入游戏
message msg_view_friend_game_other{
	optional common_game_header game_info     = 1;
	optional common_role  role_info           = 2;
}

//拼三张
message yq_pin3_rule_info{
	optional int32       role_num     = 1;
	optional int32       boards_cout  = 2;
	optional int32       circle_num   = 3;
	optional int32       play_mod     = 4; //玩法模式
	repeated int32       play_rule    = 5; //玩法
	optional int32       base_score   = 6; //底注
	optional int32       limit_enter  = 7; 
	optional int32       limit_leave  = 8;
	optional bool        limit_talk   = 9;
	optional bool        is_gps       = 10;
	optional bool        is_add       = 11;//是否陌生人加入
	optional int32       limit_cmp    = 12;
	optional int32       lucky_type   = 13;//喜分类型
	optional int32       lucky_pay    = 14;//喜分赔付
	repeated int32       lucky_pokers = 15;//喜分牌型
	optional int32       op_time      = 16;
	optional bool        is_midway_add = 17; 
	optional bool        is_viewer     = 18;
	optional int32       limit_watch   = 19;
}


message msg_get_room_user_info_req{
	optional	int32 		game_type 	= 1;		//
	optional	int32		room_id 	= 2;
}

message msg_get_room_user_info_ret{
	optional	int32 		game_type 	= 1;		//
	optional	int32		room_id 	= 2;
	repeated	room_user_info user_infos = 3;
}

message room_user_info{
	optional int32    	user_id  		= 1;
	optional string   	name 			= 2;
	optional int32  	sex            	= 3;
	optional string   	head_url      	= 4;
	optional int64   	coin          	= 5;//金币
	optional int32 		win_times      	= 6;//获胜次数
	optional int32  	total_times    	= 7;//总次数
	optional int32 		level 		   	= 8;
	optional int64 		exp 		   	= 9;
	optional int32 		vip_level 	   	= 10;
	optional int64 		score			= 11;//筹码 （筹码不等于金币，只在金币做结算的游戏中，金币等于筹码）
}


//金币自建房，房间列表
message msg_get_room_self_build_req{
	optional	int32 		game_type 	= 1;
	optional    int32       index       = 2;
}

message room_self_build_info{
	optional int32          room_id     = 1;
	optional int32 			game_type 	= 2;
	optional xl_game_rule   rule 		= 3;
	optional int32          role_num    = 4;
}

message msg_get_room_self_build_ret{
	optional    int32       			   index       = 1;
	repeated    room_self_build_info       room_list   = 2;
}


//msg_pre_enter_game_req之后检查房间可加入，可观战状态
message msg_check_room_info_req{
	optional common_game_header game_info     = 1;	
}

message msg_check_room_info_ret{
	optional 	common_game_header game_info     = 1;
	optional 	bool		is_can_enter = 2;			//可中途进入
	optional 	bool		is_can_view = 3;			//可观战
	optional	bool		is_show_panel = 4;			//是否显示进入面板（false：走msg_enter_game_req流程，true：面板选项，根据返回确定按钮是否置灰）
	optional	bool		is_room_started = 5;		//房间状态
	optional	xl_game_rule rule = 6;
}

message xl_game_rule_public {
	optional	bool			is_can_enter		= 1;		//可中途进入
	optional	bool			is_can_view			= 2;		//可观战
}

// 朋友场代开房间
message msg_friend_create_room_req {
}

message friend_room{                               //当前代开的房间信息
    optional int32          	game_type   		= 1;
	optional int32          	room_id     		= 2;
    optional int32          	ju_num      		= 3;
	optional int32              cur_ju_num          = 4;
    optional int32          	create_time 		= 5;
    optional int32          	max_user_num  		= 6;
	repeated room_user_info    	members     		= 7; //房间成员
	optional int32              state               = 8; //0 未开始 1 开始
	repeated sync_room_role_score_info	cur_scores	= 9; // 当前分数
}

message msg_friend_create_room_ret {
	repeated	friend_room 		room_list = 1;
}

message coin_result_item {
	optional int32 item_data_id = 1;
	optional int32 cnt = 2;
}

//同步房间局数
message g2h_sync_room_round{
	optional 	int32 	game_type 	= 1;
	optional 	int32 	room_id  	= 2;
	optional 	int32	round 		= 3;	//第几局
}

//极速麻将
message jisu_req_createdesk{
    optional int32 boardscout = 1; //房间的局数
    optional int32 usercountlimit = 2; //玩家人数限制
	optional bool isuncheat	= 3;	//是否防作弊
	optional int32 paytype = 4; //房费支付模式
	optional bool gps = 5;//gps
	optional bool isyuyin = 6;//语音
	optional int32 mode = 7; //0:圈模式 1:局模式
	optional bool haiDiLao = 8; // 海底捞
	repeated string reserved = 9; //保留字段(以后有新的字段就不用再在后面添加)
}
//--------------------------------房间管理器 end----------------------------------


//--------------------------------斗牛 begin----------------------------------
//cmd_start_index=2500
//cmd_name=douniu

message msg_bullfight_state_change_2c {
	required int32 room_state = 1;//0等待,1抢牛,2下注,3操作,4结算
}

//准备
message msg_bullfight_ready_2s {
}

message msg_bullfight_ready_2c {
	required uint32 user_id = 1;//
}


//抢牛
message msg_bullfight_rob_bull_2s {
	required int32 bet = 1;//倍率,0不抢
}

//抢牛结果成功时候广播
message msg_bullfight_rob_bull_2c {
	required int32 ret_code = 1;//0成功，-1金钱不足
	optional uint32 user_id = 2;
	optional int32 bet = 3;//倍率,-1不抢
}

//定庄
message msg_bullfight_banker_2c {
	required uint32 user_id = 1;
}

//下注
message msg_bullfight_bet_2s {
	required int32 bet = 1;//倍率
}

//下注结果成功时候广播
message msg_bullfight_bet_2c {
	required int32 ret_code = 1;//0成功，-1金钱不足
	optional uint32 user_id = 2;
	optional int32 bet = 3;//倍率
}

message nested_bullfight_card_info {
	required uint32 user_id = 1;
	repeated int32 cards = 2;//牌信息
}

message nested_bullfight_card_info_type {
	required uint32 user_id = 1;
	optional int32 type = 2; //类型   -1:未定义， 0：无牛； 1-10： 牛一到牛十； 21：炸弹 22：四花牛 23 五花牛 24:五小牛
	repeated int32 cards = 3;//牌信息
	//repeated int32 order_cards = 4; //3张牌的顺序
}

//发牌
message msg_bullfight_deal_card_2c {
	required int32	round = 1;	//第几局
	repeated nested_bullfight_card_info card_info_list = 2;//牌信息
}

//亮牌
message msg_bullfight_show_card_2c {
	repeated nested_bullfight_card_info_type card_info_list = 1;//牌信息
}

message nested_bullfight_result {
	required uint32 user_id = 1;
	required int64 win_gold = 2;
	optional int32 win_times = 3;
	optional int32 lost_times = 4;
}

//单局结果
message msg_bullfight_result_2c {
	repeated nested_bullfight_result results = 1;
}

//战绩
message msg_bullfight_result_all_2c {
	required int32 room_number = 1;//房号
	required int32 game_times = 2;//局数
	required uint32	room_master = 3;//房主ID
	required int32	start_time = 4;//开始时间
	repeated nested_bullfight_result results = 5;
}

//当前玩家状态
message user_cur_state {
	required uint32 user_id = 1;
	required bool isBanker = 2;//是否是庄
	required bool isOpt = 3;//组牌是否完成
	required int32 betOne = 4;//抢庄倍数
	required int32 betTwo = 5; //下注倍数
	required nested_bullfight_card_info_type car_info = 6;//手牌信息
	required int32 state = 7; //1:加入游戏， 0： 旁观
	optional int64 coin = 8; //当前金币（朋友场）
	optional	bool 	is_auto 	= 9;//是否挂机
}

//主动恢复状态
message msg_resume_state_2c {
	required int32 room_state = 1;
	required int32 left_time = 2;//倒计时
	required int32 cur_round = 3; //当前第几局
	required int32 config_id = 4; //金币场使用
	required int32 auto_bank = 5;// 抢庄  0取消  1最小倍数  2最大倍数
	required int32 auto_bet = 6;//  下注  0取消  1最小倍  2最大
	repeated user_cur_state user_state = 7;
	repeated msg_bullfight_dissolve_agree_ack agrees = 8; //房间解散相关消息
}

//房间解散 （同意/拒绝）
message msg_bullfight_dissolve_agree_req {
	optional	bool		is_agree = 1;
}

message msg_bullfight_dissolve_agree_ack {
	optional	uint32 		user_id 	= 1;
	optional	bool 		is_agree 	= 2;
	optional	int32		time		=3; //倒计时， 恢复时候使用
}

//房间解散结果
message msg_bullfight_dissolve_agree_result {
	optional	bool		is_dissolve = 1;		// 是否解散
}

//自动抢庄下注
message msg_auto_bank_bet_2s {
	required int32 auto_bank = 1;// 抢庄  0取消  1最小倍数  2最大倍数
	required int32 auto_bet = 2;//  下注  0取消  1最小倍  2最大
}

//自动抢庄下注返回
message msg_auto_bank_bet_2c {
	required int32 ret_code = 1;//0成功 -1失败
	optional int32 auto_bank = 2;// 抢庄  0取消  1最小倍数  2最大倍数
	optional int32 auto_bet = 3;//  下注  0取消  1最小倍  2最大
}

// 玩家挂机
message bullfight_player_auto_req {
	required 	bool 	is_auto 	= 1;	//true:挂机; false:手动出牌
}

// 挂机返回（广播）
message bullfight_player_auto_ack {
	required	uint32	user_id 	= 1;
	required	bool 	is_auto 	= 2;
}

//--------------------------------斗牛 end----------------------------------


//--------------------------------填大坑 begin----------------------------------
//cmd_start_index=2600
//cmd_name=tiandakeng


message TdkCDeskUserData {
    optional uint32 userid = 1;
	optional int64 score = 2; //玩家剩余本金
	optional bool already = 3; //玩家是否准备
	optional bool fold = 4; //玩家是否弃牌
	optional int32 pos = 5; // 玩家座号
	optional uint32 bet = 6; //玩家下注金额
	optional uint32 winnum = 7;
	optional uint32 totalnum = 8;
	repeated uint32 pokerlist = 9;
	repeated uint32 hidelist = 10;
	optional bool borrow = 11; //玩家是否有借牌
	optional bool allin = 12; //是否allin
	optional bool join = 13;//是否游戏中
	optional	bool		is_auto		=14;//是否托管
	optional	uint32		round_bet		=15;//当前下注
	optional	uint32		op_type		=16;//当前操作
	optional	uint32		fanti_times		=17;//反踢次数
}

message TdkJoinPlayingDeskRsp {
	optional 	bool isLanGuo =1;
	optional 	int32 deskstatus = 2;
	optional 	uint32 actuserid = 3;
	optional 	uint32 time = 4;
	repeated 	TdkCDeskUserData userdata = 5; //牌桌其他用户数据
	optional 	int32 roomType = 6; //牌桌配置
	repeated 	uint32 betlist = 7;
	optional 	int32 	room_state = 8;//0等待，1准备，2下注
	optional	tdk_rule_info		rule		=9;//规则
	optional	bool				is_reconnect	=10;//true重连
	optional	uint32				cur_circle		=11;
	optional	uint32				dissolve_timeout =12;
	repeated 	room_dissolve_agree_ack dissolve_info = 13;	// 解散情况（为空则不是在解散状态）
	optional	uint32 	roomnum = 14;
	optional	uint32				config_room_id =15;
	optional	int32				xifen=16;
	optional	int32				lan_num=17;
	optional	int32				max_bet=18;  //当前最大下注(不缩枪玩法)
}

message TdkTuoGuan {
	optional	bool 		type = 1;//true托管false取消
}

message TdkTuoGuanRsp {
	optional	bool 		type = 1;//true托管false取消
	optional	uint32		user_id=2;
}

message TdkCBet {
	required int32 type = 1;//1下注，2起脚，3反踢，4开牌，5allin，6不踢，7弃牌,8跟
	optional int32 num = 2;//下注金额
}

message TdkCBetRsp{
	required int32 type = 1;//1下注，2起脚，3反踢，4开牌，5allin，6不踢，7弃牌,8跟
	optional int32 num = 2;//下注金额
	optional uint32 userid = 3;
	optional uint32 nextuserid = 4;
	optional int32 deskstatus = 5;
	optional uint32 time = 6;
	optional uint32 fanti_times = 7;
}


message TdkCPoker {
	required uint32 userid = 1;
	required uint32 pokerid = 2; //牌ID
	required bool borrow = 3;
}

message TdkCHidePoker {
	required uint32 userid = 1;
	repeated uint32 pokerid = 2; //牌ID
}

//发牌
message TdkCSendPoker {
	repeated TdkCPoker pokerlist = 1; //牌ID
	repeated uint32 selflist = 2; //
	optional int32 deskstatus =3;
	optional uint32 nextuserid = 4;
	optional uint32 time = 5;
	optional	uint32 	roomnum = 6;
	optional	uint32 	startid = 7;
	optional	bool	is_first = 8;
}

//开牌
message TdkCOpenPoker {
	repeated  TdkCHidePoker poker =1;
}

message TdkCDeskState {
	optional bool ready =1;
}

//单轮游戏结果
message TdkCRoundEnd {
	optional uint32 userid = 1; //赢家id
	optional bool languo = 2; //false-有玩家胜利，true-烂锅
	optional uint32 time = 3;
	optional	int32				xifen=4;
	optional	int32				lan_num=5;
}


message TdkPlayerFinalResult{//玩家大结算结构
	optional 	uint32		id		=1;//玩家id
	optional	int64		score		=2;//玩家积分
	optional	uint32		win_times=3;
	optional	uint32		lose_times=4;
	optional    uint32       xifeng_num = 5; //喜分
}

message TdkFinalResult{//大结算
	repeated	TdkPlayerFinalResult		list		=1;//输赢列表
}

message TdkKanPaiReq {
	
}

message TdkKanPaiRsp {
	optional	uint32		user_id=1;
}

message TdkWaitNotify {
	
}


//--------------------------------填大坑 end----------------------------------

//--------------------------------比赛场 begin----------------------------------
//cmd_start_index=2700
//cmd_name=match

//比赛开始消息(重连和中途加入，复活都需要发送此消息，帮助客户端抓取奖池)
message msg_match_start {
	required	int32 		game_type 		= 1;	//游戏类型
	required	int32		match_type 		= 2;	
	required	int32 		match_id		= 3;
}

//比赛轮次信息
message msg_match_round_info {
	required	int32	round_type		= 1;	// 1.预赛 2.晋级赛 3.决赛 4.总决赛
	optional	int32 	cur_game 		= 2;	// 当前第几局
	optional	int32 	game_num 		= 3;	// 此轮几局比赛
	optional	int32 	last_score		= 4;	// 上轮积分
	optional 	int32 	now_score		= 5;	// 当前积分
	optional	int32 	up_num			= 6;	// 晋级人数	
	optional 	int32 	round_num		= 7;	// 第几轮
	optional	int32 	out_score		= 8;	// 淘汰分（大于0有效）
}

message msg_match_rank_info {
	optional	int32	rank  		= 1;
	optional	int32	left_player_num 		= 2; // 剩余桌数 （-1表示会继续匹配）
}

// 斗地主晋级人数已满(预赛)
message msg_match_round_num_full {

}

//比赛轮次结束，排队等待中
message msg_match_round_end_line_req {
	
}

message msg_match_round_end_line_ret {
	required	int32 	rank 			= 1;	//当前排名
	required	int32 	left_player_num	= 2;	//剩余玩家数
	required	int32	left_desk_num	= 3;	//剩余桌子数
	optional	int32 	round_type 		= 4;	//下一轮 1.预赛 2.预赛 3.晋级赛 4.决赛 5.总决赛
	optional	int32 	round_num		= 5;	//第几轮
	optional	int32 	game_type 		= 6;
	optional	int32 	cur_score		= 7;	//当前自己的分数
}

//比赛轮次结束，排队等待中，
message msg_match_round_end_line {
	required	int32 	rank 			= 1;	//当前排名
	required	int32 	left_player_num	= 2;	//剩余玩家数
	required	int32	left_desk_num	= 3;	//剩余桌子数
	optional	int32 	round_type 		= 4;	//当前轮 1.预赛 2.预赛 3.晋级赛 4.决赛 5.总决赛
	optional	int32 	round_num		= 5;	//第几轮
	optional	int32 	game_type 		= 6;
	optional	int32 	cur_score		= 7;	//当前自己的分数
	optional	int32	match_type 		= 8;	//比赛类型 1:快速赛 2:定时赛 3:夺宝赛 
}

// 比赛奖励
message msg_match_reward_info {
	repeated	match_reward_item reward = 1;
	optional	string		text		= 2;	//奖励文字说明
}

// 比赛结束
message msg_match_end {
	required	int32					rank  		= 1;
	optional	msg_match_reward_info	reward 		= 2;
	optional	int32 					match_id    = 3;
	optional	string					name 		= 4;
	optional	int32 					match_type 	= 5;  	// 1.红包 2.其它
	optional	int32 					bouns_num 	= 6;	//红包数量 （红包赛有效）
	optional	int32 					beat_num 	= 7;	//击败人数
	optional	int32 					bouns_all 	= 8;	//获得的总红包数量
}

//比赛分享
message match_wx_share_req{
}

message match_wx_share_ret{
	optional	int32 		ret_code = 1[default=0];	// 0.正常 	1.游戏已结束（游戏快要结束时分享，可能会无法加分） 2.重复分享不加分
}

//游戏中 分数改变（金币场充值/背包取钱、比赛场分享都是这个协议）
message msg_room_update_score {
	optional	uint32		user_id = 1;
	optional	int64		cur_score = 2;
} 


message msg_match_round_countdown {
	optional	int32		seconds = 1[default=5];
	optional	int32 		next_round_num = 2;			//下轮晋级人数(大于此名次的人被淘汰)
}

message msg_is_match_shared {
	optional	bool 		is_share = 1;
}

message msg_h2g_room_update_score {
	optional	int32		room_id = 1;
	optional	uint32		user_id = 2;
	optional	int64		add_score = 3;
	optional	int32 		reason = 4;		
}

// 本轮轮空
message msg_match_round_null {

}

//获取奖池奖励
message msg_get_match_reward_pool_req {
	optional	int32		match_id = 1;	
}

message msg_get_match_reward_pool_ret {
	optional	int32					match_id = 1;
	optional	int64					pool_num = 2;			// 奖池大小
	optional	int32 					reward_rank = 3;		// 可获奖名次
	repeated	match_reward_info		reward 	 = 4;			// 具体奖励
}

// 预赛淘汰协议
message msg_match_dead_ret {
	repeated match_reward_item sign_fee = 1;		// 报名费用(复活费用)			
}

//定时赛预赛阶段 复活
message msg_match_reborn_req {
	optional	int32		match_id = 1;	
}

message msg_match_reborn_ret {
	optional	int32		ret_code = 1;	// 0.正常复活	1.费用不足	2.时间已过
	optional	int32		match_id = 2;	
}

// 定时赛预赛阶段 中途加入
message msg_match_join_req {
	optional	int32 		match_id = 1;
}

message msg_match_join_ret {
	optional	int32		ret_code = 1;	// 0.正常复活	1.费用不足	2.时间已过
	optional	int32		match_id = 2;	
}


message msg_user_match_rank_info {
	optional	int64					rank_id 	= 1; //天数*10000 + match_id
	optional	string					match_name 	= 2;
	optional	int32 					user_rank 	= 3;
	optional	int32					start_time	= 4;
	optional	msg_match_reward_info	reward 		= 5;
}

message msg_get_match_rank_history_list_req {
	
}

message msg_get_match_rank_history_list_ret {
	repeated	msg_user_match_rank_info	list = 1;
}

message msg_get_match_rank_history_detail_req {
	optional	int64				rank_id = 1;
}

message msg_user_match_detail {
	optional	string 					user_name   = 1;
	optional	string 					user_head 	= 2;
	optional	int32 					user_rank 	= 3;
	optional	msg_match_reward_info	reward 		= 4;
}

message msg_get_match_rank_history_detail_ret {
	optional	int32						ret_code 	= 1;	//1.比赛进行中，暂无数据 2.无法获取到历史数据
	repeated	msg_user_match_detail		detail 		= 2;
}

message msg_match_win_result {
	optional	int32				user_id 	= 1;	// 
	optional	int32		 		win_score 	= 2;
}

message msg_match_room_win_result {
	repeated	msg_match_win_result		 	win_result 	= 1;
}


//--------------------------------比赛场 end----------------------------------

//--------------------------------斗地主 begin----------------------------------
//cmd_start_index=2800
//cmd_name=doudizhu


//桌子信息
message ddz_desk_info {
	optional 	uint32 		owner_id 		= 1;		// 房主id （朋友局有效）
	optional	int32 		password		= 2;		// 房间号 （朋友局有效）
	optional 	int32 		cur_circle		= 3;		// 当前局数 （朋友局有效）
	optional	int32 		game_type		= 4;		// 31:比赛场 32:金币场 33:朋友场
	optional	int32 		base_score		= 5;		// 底分   （比赛场有效）
	optional	int32 		out_score 		= 6;		// 淘汰分 （比赛场有效）
	optional	int32 		desk_status 	= 7;		// 桌子状态（准备；等待发牌；叫分；加倍；出牌; 解散）
	optional	ddz_rule_info 			desk_rule			= 8;	// 桌子规则
	optional	int32 					call_score_timeout	= 9;	// 叫分超时
	optional	int32 					double_timeout		= 10;	// 加倍超时
	repeated	ddz_play_poker_timeout 	play_timeout		= 11;	// 出牌超时
	optional	int32 					max_circle			= 12;	// 最大局数
	optional 	int32 					start_timestamp 	= 13; 	// 比赛开始的时间戳	
	optional	int32 					dissolve_timeout	= 14;	// 解散超时
	optional	xy_ddz_rule_info 		xy_desk_rule 		= 15;	//祥云斗地主桌子规则
}

// 玩家信息
message ddz_player_info {
	optional 	uint32		user_id 		= 1;
	optional	int64 		score 			= 2;	//玩家筹码数
	optional	int32 		site 			= 3;	//座位号
	optional	bool 		is_double		= 4;	//是否加倍
	optional	bool 		is_auto 		= 5;	//是否挂机
	optional 	int32 		identify 		= 6;	//身份（1.地主 2.农民）
	optional	int32 		hand_poker_num	= 7;	//手牌数量
	optional 	bool 		is_change_poker = 8;	//是否换牌
	optional	bool		is_prepared		= 9;	//是否准备
	optional	int32 		call_score 		= 10;	//叫分 -1没叫分 
}

// 房间信息
message ddz_room_info {
	optional ddz_desk_info desk_info = 1;
	repeated ddz_player_info player_info = 2;
	optional int32 		cur_round = 3;			// 预赛第几轮
}


// 重连房间
message ddz_reconnect_room_info {
	optional ddz_desk_info 		desk_info = 1;
	optional int32 				desk_fan = 2;		// 倍数(底分*(2^炸弹数量))
	optional uint32 			cur_player  = 3;	// 当前操作的玩家id
	optional int32 				timeout		= 4;	// 操作倒计时
	repeated ddz_player_info 	player_info = 5;	// 玩家列表
	repeated int32 				hand_pokers = 6;	// 手牌
	repeated int32 				bottom_pokers = 7;	// 底牌（3张）
	repeated ddz_play_poker_ack recent_play = 8;	// 最近出牌（只记录最多三手；一轮牌出完后会清空）
	optional int32 				cur_call_score = 9;	// 当前最小叫分
	optional int32 				cur_zha_dan_num = 10; 		// 当前炸弹数量
	optional int32 				bottom_pokers_times = 11;	// 底牌倍数
	optional int32 				config_room_id 		= 12;	// 配置的room_id 
	repeated int32 				played_pokers = 13; 		// 记牌器（已经出过的牌）
	repeated int32 				change_poker = 14;			// 交换的牌（换牌时有效）
	repeated int32				stacked = 15;				// 已经选过的牌堆（选牌时有效） 			
	repeated room_dissolve_agree_ack dissolve_info = 16;	// 解散情况（为空则不是在解散状态）
	optional bool				is_wx_shared		= 17;	// 是否微信分享过（仅比赛场中有效）
}

message ddz_update_desk_status {
	optional 	int32 	desk_status			= 1;		// 桌子状态（准备；等待发牌；叫分；加倍；出牌）
	optional	uint32 	cur_player 			= 2;		// 当前操作的玩家id
}

message ddz_update_base_score {
	optional	int32 	base_score 			= 1;		//底分
	optional	int32 	out_score			= 2;		//淘汰分
}

// 选择分摞
message ddz_stack_poker_req {
	optional 	int32 		stack 			= 1;
}

message ddz_stack_poker_ack {
	optional	uint32		user_id 		= 1;	
	optional 	int32 		stack 			= 2;
}

//玩家手牌
message ddz_hand_poker_list {	
	repeated 	int32 		hand_pokers 	= 2;	// 手牌
}

// 换牌(换三张)
message ddz_change_poker_req {
	repeated	int32 		pokers 			= 1;
}

message ddz_change_poker_ack {
	optional	uint32 		user_id 	= 1;
	repeated	int32 		pokers 		= 2;
}

message ddz_change_poker_result {
	optional	bool 		is_clockwise = 1;		//是否顺时针 
	repeated 	int32 		pokers 		 = 2;
}

//叫分（叫了3分后，进入加倍）
message ddz_call_score_req {
	required	int32 		score 			= 1; 	//(0.不叫；1.1分；2.2分；3.3分)
}

//叫分返回（广播）
message ddz_call_score_ack {
	required	uint32 		user_id 	= 1;
	required	int32		score		= 2;
}

//叫分结果
message ddz_call_score_result {
	repeated 	int32 		bottom_pokers  	= 1;	//底牌（3张）	
	required	uint32 		landholder_id 	= 2;	//地主 id
	required	int32 		bottom_pokers_times = 3;	// 底牌倍数
}

//加倍
message ddz_double_score_req {
	required	bool 		is_double 	= 1;
}

//加倍返回（广播）
message ddz_double_score_ack {
	required	uint32 		user_id 	= 1;
	required	bool 		is_double 	= 2;
}

message ddz_play_role_score_change_info {
	required	uint32 		user_id 		= 1;
	required	int32 		change_score	= 2;	// 积分变化
	required	bool		is_double 		= 3;	// 是否加倍
	repeated	int32 		left_hand_poker = 4;	// 剩下手牌
}

//斗地主一局比赛完了之后的统计结果
message ddz_play_result {
	required	int32 		zhadan_num = 1;
	required	int32 		is_god	= 2;				// 超神 （0.正常赢牌 1.春天 2.反春）
	required	int32 		bottom_pokers_times = 3;	// 底牌倍数
	repeated 	ddz_play_role_score_change_info 	change_list = 4;
	optional	int32 		round_type 		= 5;		// 1.预赛 2.晋级赛 3.决赛 4.总决赛
	optional	int32 		left_desk_num	= 6;		// 剩余桌数 （-1表示会继续匹配）
}


// 玩家掉线
message ddz_player_offline_ack {
	required	int32	user_id	= 1;
	optional	bool 	is_offline = 2; //是否掉线 true为掉线，false为正常
}

// 玩家挂机
message ddz_player_auto_req {
	required 	bool 	is_auto 	= 1;	//true:挂机; false:手动出牌
}

// 挂机返回（广播）
message ddz_player_auto_ack {
	required	uint32	user_id 	= 1;
	required	bool 	is_auto 	= 2;
}


// 玩家出牌
message ddz_play_poker_req {
	repeated	int32 		pokers 		= 1;
}

// 玩家出牌返回（广播）
message ddz_play_poker_ack {
	required	uint32 	user_id 		= 1;
	repeated	int32 	pokers 			= 2;
}

// 客户端请求重连消息
message ddz_reconnect_req{

}

//明牌
message ddz_get_all_poker_req {
}

message ddz_role_poker_info {
	required	uint32 	user_id 		= 1;
	repeated	int32 	pokers 			= 2;		
}

message ddz_get_all_poker_ack {
	repeated	ddz_role_poker_info role_poker  = 1;
}


//换牌
message ddz_record_user_change_poker{
	optional  	uint32 	user_id = 1;
	repeated  	int32 	select_pokers = 2;
	repeated 	int32 	result_pokers = 3;
}

// 换牌（得牌）
message ddz_record_change_poker{
	optional	bool 							is_clockwise = 1;	//是否顺时针 
	repeated 	ddz_record_user_change_poker 	change_info  = 2;		
}

// 战绩统计
message ddz_friend_last_player_info {
	optional	uint32		user_id = 1;
	optional	int32 		win_times = 2;
	optional	int32		lose_times = 3;		
	optional	int64 		last_score = 4;			// 最后分
	optional	int64 		top_score = 5;			// 最高分
	optional	bool		is_creator = 6;			//是否是房主
	optional	int32		farmer_times = 7;		//农民次数
	optional	int32 		landholder_times = 8;	//地主次数
}

message ddz_friend_last_info {
	repeated	ddz_friend_last_player_info player_info = 1;
}

message ddz_control_poker_info {
	optional	uint32		user_id = 1;
	optional	int32 		control_level = 2;
}

// 回放玩家基本信息
message record_player_info {
	optional 	uint32		user_id 		= 1;
	optional 	string 		nick_name 		= 2;
	optional	int32 		sex				= 3;
	optional	string 		head_url 		= 4;
	optional	int64 		score 			= 5;	//玩家筹码数
	optional	int32 		site 			= 6;	//座位号
	optional 	int32 		identify 		= 7;	//身份（地主、农民）（庄家，闲家）
	optional	string 		open_id 		= 8;	
	repeated	int32 		hand_poker		= 9;	//手牌
}

// 回放桌子基本信息
message record_desk_info {
	optional 	uint32 		owner_id 		= 1;		// 房主id 
	optional	int32 		password		= 2;		// 房间号 
	optional 	int32 		cur_circle		= 3;		// 当前局数 
	optional	int32 		game_type		= 4;		// 游戏类型 
	optional	int32 		base_score		= 5;		// 底分   
	optional	int32 		desk_status 	= 6;		// 桌子状态,游戏自行定义（斗地主 准备；等待发牌；叫分；加倍；出牌; 解散）
	optional	xl_game_rule 	desk_rule		= 7;	// 桌子规则
	optional	int32 		max_circle			= 8;	// 最大局数
	optional 	int32 		start_timestamp 	= 9; 	// 游戏开始的时间戳	
}

//回放房间基本消息
message record_room_info{
	optional record_desk_info 		desk_info 	= 1;
	repeated record_player_info 	player_info = 2;
}


message ddz_play_poker_timeout{
	optional 	uint32			play_user_id = 1;
	optional	int32 			play_timeout = 2; // 出牌超时
}

//--------------------------------斗地主 end----------------------------------

//--------------------------------游戏规则 begin----------------------------------
//cmd_start_index=3000
//cmd_name=game_rule
//祥云斗地主朋友场规则
message xy_ddz_rule_info{	
	optional int32          circle_num          = 1; 	//局数					% done
	optional int32 			max_times 			= 2;	//最大倍数 				% done
	optional bool 		    been_call_score 	= 3;	//双王4个2必叫分 		% done
	optional bool 			limit_words			= 4;	//禁言
	optional bool 			card_holder			= 5;	//记牌器
	optional bool 			limit_talk 			= 6;	//语音
	optional bool 			gps 				= 7;	//gps测距
}

message msg_get_room_desks_req{
	optional common_game_header  game_info = 1;
	optional int32               index     = 2;
}

message common_desk{
	optional int32       	room_id = 1;
	repeated common_role	roles   = 2;
	repeated int32          args    = 3; //保留参数
}

message msg_get_room_desks_ret{
	optional int32               ret_code 	= 1[default=0];
	optional common_game_header  game_info 	= 2;
	repeated common_desk         desks     	= 3;
	optional int32               index      = 4;
}

message msg_room_desk_info{
	optional common_game_header  game_info 	= 1;
	optional int32               op_type    = 2;//1 加人  2 减人
	optional common_desk         desk       = 3;
}

//离开房间列表界面
message msg_leave_room_desks_req{
	optional common_game_header  game_info = 1;
}

//卡密充值
message msg_card_charge_req {
	optional string       card_num = 1;
}

message msg_card_charge_ret {
	optional  	int32        				ret_code = 1;   // 0.成功  1.暂定
	repeated   	msg_invited_task_reward  	reward = 2;
}

//--------------------------------游戏规则 end----------------------------------

//------------------金币场保险箱begin------------------------
//cmd_start_index=4000
//cmd_name=baoxianxiang_coin
//是否设置了初始密码
message msg_coin_bank_is_have_password_2c {
	required int32 is_have_password = 1; //是否有初始密码
}

//存款
message msg_coin_bank_store_2s {
	required int64 coin = 1;//
}

message msg_coin_bank_store_2c {
	required int32 ret_code = 1;//0成功，-1密码过期，-2系统错误
	optional int64 new_bank_coin = 2;//
	optional int64 coin = 3;
}

//取款
message msg_coin_bank_take_2s {
	required int64 coin = 1;//change gold to double
	optional string password = 2;
}

message msg_coin_bank_take_2c {
	required int32 ret_code = 1;//0成功，-1密码不对，-2保险箱金钱不足，-3系统错误
	optional int64 new_bank_coin = 2;//
	optional int64 coin = 3;
}

//转账
message msg_coin_bank_trans_2s {
	required int32 player_id = 1;
	required int64 coin = 2;//
	required string password = 3;
}

message msg_coin_bank_trans_2c {
	required int32 ret_code = 1;//0成功，-1收款人不能为自己，-2保险箱金钱不足,-3冷却时间中，-4接受者不存在，-5状态不对, -6系统错误, -7状态不对
	optional int64 new_bank_coin = 2;//
}

//账单
message nested_coin_bank_bill {
	required int32 id = 1;
	required int32 sender_id = 2;
	required string sender_name = 3;
	required int32 recver_id = 4;
	required string recver_name = 5;
	required int32 send_time = 6;//发送时间
	required int64 coin = 7;//
	required int64 my_coin = 8;
	required int32 type = 9; //0:转出, 1:转入, 2:存入, 3:取出
	required int64 charge_coin = 10; //手续费
}

message msg_coin_bank_bill_list_2c {
	repeated nested_coin_bank_bill bill_list = 1;
}

//账单更新或者新增
message msg_coin_bank_update_bill_2c {
	required nested_coin_bank_bill bill = 1;
}

//修改密码
message msg_coin_bank_password_recovery_2s {
	required string old_password = 1;
	required string new_password = 2;
}

message msg_coin_bank_password_recovery_2c {
	required int32 ret_code = 1;//0成功,-1老密码不对,-2系统错误
}

//上线同步金币和保险箱金币
message msg_player_coin_and_bankcoin_2c {
	required int64 coin = 1;
	required int64 bank_coin = 2;
}

//充值提示
message msg_update_coin_recharge_flag_2c {
	required int32 flag = 1; //1:有新充值, 0:没有
}

//客户端点击
message msg_set_coin_recharge_flag_2s {
	required int32 flag = 1; //1:有新充值, 0:没有
}

//摇摇乐,快三公告
message msg_yyl_notice_2c {
	optional int32 speed = 1;
	optional int32 showtimes = 2;
	required string roomname = 3;
	required string playername = 4;
	required double wingold = 5;
	required bool is_rich = 6;
}

//------------------三打一begin------------------------
//cmd_start_index=4100
//cmd_name=sdy

message sdy_user_info{
	optional int32        user_id 	  		 = 1;
	optional string       name    	  		 = 2;
	optional string       head_url    		 = 3;
	optional string       open_id     		 = 4;
	optional int32        sex                = 5;
	optional int64        coin        		 = 6;
	optional int32        seat               = 7;//座位
	optional int32        call_score  		 = 8;//叫分分数
	optional bool         banker             = 9;//是否庄家
	optional int32        pokers_num         = 10;
	repeated int32        pokers             = 11;//手牌
	optional int32        cur_send_poker     = 12;//当前出的牌
	optional bool         is_auto            = 13;//是否托管
	optional bool         is_robot           = 14;
	optional bool         is_continue        = 15;//是否继续
	optional int32        is_agree           = 16;//0 没选择 1 同意 2 不同意 3 申请者
	optional int32        state              = 17[default=0];//0 游戏中 1 离开 2 离线
	optional int32  	  win_times      	 = 18;//获胜次数
	optional int32  	  total_times   	 = 19;//总次数
}

message sdy_room_info{
	optional int32        game_type          = 1;//25 三打一金币场
	optional int32        owner_id           = 2;
	optional int32        room_id            = 3;
	optional int32        room_config_id     = 4;
	optional int32        max_num            = 5;
	optional int32        cur_circle         = 6;
	optional int32        max_circle         = 7;
	optional int32        state              = 8;//1叫分 2 选择主牌 3 扣底牌 4 出牌 5 朋友场继续 6 朋友场解散
	optional sdy_op_info  cur_op             = 9;
	optional int32        call_score_timeout = 10;//叫分倒计时
	optional int32        color_timeout      = 11;//花色倒计时
	optional int32        base_timeout       = 12;//扣底牌倒计时
	optional int32        timeout            = 13;//出牌倒计时
	optional int32        circle_color       = 14;//第一张牌的花色
	optional int32        circle_user_id     = 15;//第一个出牌玩家
	optional int32        vote_timeout       = 16;//投票结束倒计时时间错
}

message sdy_op_info{
	optional int32        user_id            = 1;
	optional int32        op_type            = 2;//1叫分 2 选择主牌 3 扣底牌 4 出牌 
	optional int32        timeout            = 3;//重连时候使用，时间戳
	repeated int32        score_list         = 4;//可以叫分的列表
}

message sdy_base_pokers_info{
	optional int32        call_score         = 1;//叫分
	optional int32        key_poker          = 2;//主牌花色
	repeated int32        pokers             = 3;//
	repeated int32        score_pokers       = 4;//分牌
	optional int32        type               = 5; //0 普通 1 上车 2 破牌 3 扣底
}

//房间初始
message msg_sdy_room_init{
	optional int32           type            			= 1;//1 进入初始化 2 重连初始化
	optional sdy_room_info   room_info       			= 2;
	repeated sdy_user_info   user_info       		    = 3;
	optional sdy_base_pokers_info   base_pokers_info  	= 4;
}

//叫分
message msg_sdy_call_score_req{
	optional int32            score          = 1;
}

message msg_sdy_call_score_ret{
	optional int32            ret_code                  = 1[default=0];//1 当前不该你操作 2 不能叫此分数
	optional int32            user_id                   = 2;
	optional int32            score                     = 3;//0 不叫
	optional int32            state                     = 4;//1 叫分阶段 2 叫分结束出现庄家 3叫分结束无庄家
	optional int32            next_user_id              = 5;// 下一个叫分
	repeated int32            score_list                = 6;
	optional int32            call_score_timeout        = 7;//叫分倒计时
	optional int32            banker_id                 = 8;//庄家ID
}

//发底牌
message msg_sdy_deal_bottom{
	optional int32            user_id        = 1;
	repeated int32            pokers         = 2;
}

//重新发手牌
message msg_sdy_deal{
	repeated int32            pokers                    = 1;
	optional int32            call_score_user_id        = 2;//叫分用户id
	repeated int32            score_list                = 3;
	optional int32            cur_circle                = 4;//局数更新，只有朋友场使用
}

//选择主牌
message msg_sdy_choice_color_req{
	optional int32            color          = 1;
}

message msg_sdy_choice_color_ret{
	optional int32            ret_code       = 1[default=0];//1 当前不该你操作 2 没有此花色
	optional int32            color          = 2;
}	

//扣底牌
message msg_sdy_kou_pokers_req{
	repeated int32            pokers         = 1;
}

message msg_sdy_kou_pokers_ret{
	optional int32            ret_code       = 1[default=0];//1 当前不该你操作 2 扣牌数量不对 3 没有此牌
	optional int32            user_id        = 2;
	repeated int32            pokers         = 3;
}

//出牌
message msg_sdy_user_poker_req{
	optional int32            poker          = 1;
}

message msg_sdy_user_poker_ret{
	optional int32            ret_code       = 1[default=0];//1 当前不该你操作 2 没有此牌 3 出牌错误
	optional int32            user_id        = 2;
	optional int32            poker          = 3;
	optional int32            next_user_id   = 4; //下一个应该操作的玩家ID
	optional int32            color          = 5; // 此轮必出花色
}

//分牌结果
message msg_sdy_score_pokers{
	optional int32            type           = 1; //0 普通 1 光牌 2 上车 3 破牌 4 扣底
	repeated int32            pokers         = 2;
}

//托管请求
message msg_sdy_auto_req{
	optional int32            type           = 1; //1托管 2取消托管
}

message msg_sdy_auto_ret{
	optional int32            type           = 1;
	optional int32            user_id        = 2;
}

message sdy_result_info{
	optional int32            user_id        = 1;
	optional int64            score          = 2;
}

message sdy_win_info{
	optional int32            type           = 1;//0叫牌 1 光牌 2 上车 3 破牌 4 扣底 5 连扣带破 6 王扣
	optional int64            value          = 2;
}

//结算结果
message msg_sdy_result{
	optional int32            win_type       = 1;//1 庄家赢 2 闲家赢
	repeated sdy_win_info     win_info       = 2;
	repeated sdy_result_info  result_info    = 3;
}

//朋友场继续
message msg_sdy_continue_req{
}

message msg_sdy_continue_ret{
	optional int32            user_id        = 1;
}

//发起解散
message msg_sdy_dissolve_req{
}

message msg_sdy_dissolve_ret{
	optional int32            user_id        = 1;
}

//是否同意解散
message msg_sdy_vote_dissolve_req{
	optional bool             agree          = 1;
}

message msg_sdy_vote_dissolve_ret{
	optional int32            user_id        = 1;
	optional bool             agree          = 2;
}

message sdy_friend_result_info{
	optional int32            user_id        	= 1;
	optional int32            zhuang_cheng_pai  = 2; //庄成牌
	optional int32            zhuang_guang_pai  = 3; //庄光牌
	optional int32            bei_po_pai        = 4; //被破牌
	optional int32            bei_shang_che     = 5; //被上车
	optional int64            score             = 6;
}

//朋友场大结算
message msg_sdy_friend_result{
	repeated sdy_friend_result_info          friend_result = 1;
	optional int32                       time          = 2;
}

//------------------三打一end------------------------


//--------------------------------炸金花 begin----------------------------------
//cmd_start_index=4200
//cmd_name=zhajinhua
message msg_zhajinhua_match_2s {
	required int32 room_type = 1;
}

message msg_zhajinhua_match_2c {
	required int32 ret_code = 1;//0成功,-1筹码不足,-2系统错误
	required int32 room_type = 2;
}

message msg_zhajinhua_quit_2s {
}

message msg_zhajinhua_quit_2c {
	required int32 ret_code = 1;//0成功,-1牌局中
}

message msg_zhajinhua_change_room_2s {
}

message msg_zhajinhua_change_room_2c {
	required int32 ret_code = 1;//0成功
}


message nested_zhajinhua_player {
	required int32 site = 1;
	required int32 player_id = 2;
	required string player_name = 3;
	required int32 sex = 4;
	required double gold = 5;//总筹码 change gold to double
	required double clips = 6;//筹码
	required int32 bet_clips = 7;//该局下注额
	required int32 card_state = 8;//手牌状态 0暗牌,1明牌
	repeated int32 cards = 9;//手牌信息（自己信息明牌时候才会有数据）
	required int32 player_state = 10;//房间状态准备中时：0未准备，1准备；房间状态操作中时：0未参赛，2等待,3操作,4弃牌。
	required int32 auto_set_clips = 11;//自动设置筹码
	required string open_id = 12;
	required string head_url = 13;
	required bool is_robot = 14;
}

message msg_zhajinhua_room_info_2c {
	required int32 room_type = 1;
	required int32 room_state = 2;//0等待，1准备,2操作,3结算
	required int32 state_begin_time = 3;
	repeated nested_zhajinhua_player players = 4;//玩家列表(包括自己)
	required int32 banker_site = 5;
	required int32 op_site = 6;
	required int32 round = 7;//轮数
	required int64 tatol_clips = 8;//桌面总筹码
	required int32 min_clips = 9;//最低下注筹码(看牌情况下)
	required int32 remain_time = 10; //剩余时间
}

message msg_zhajinhua_player_enter_2c {
	required nested_zhajinhua_player player = 1;
}

message msg_zhajinhua_player_quit_2c {
	required int32 site = 1;//位置
}

message msg_zhajinhua_state_change_2c {
	required int32 room_state = 1;//0准备,1操作,2结算
}

//准备
message msg_zhajinhua_ready_2s {
}

message msg_zhajinhua_ready_2c {
	required int32 site = 1;//位置
}

//根据此协议发牌表现,扣除桌费
message msg_zhajinhua_join_game_sites_2c {
	required int32 banker_site = 1;
	repeated int32 sites = 2;
}

//轮到谁操作
message msg_zhajinhua_op_site_2c {
	required int32 site = 1;
	required int32 round = 2;
}

message msg_zhajinhua_op_2s {
	required int32 op = 1;//0弃牌,1看牌，2下注，3比牌,4孤注一掷
	required int32 value = 2;//下注时为下注金额，比牌时为与哪个位置比牌
}

message msg_zhajinhua_op_2c {
	required int32 site = 1;
	required int32 op = 2;//0弃牌,1看牌，2下注，3比牌，4孤注一掷
	required int32 value = 3;//下注时为下注金额，比牌时为与哪个位置比牌，孤注一掷时（0失败，1胜利）
	required int64 cost_coin = 4; //比牌时扣除了多少
	repeated int32 cards = 5;//看牌时候,看牌人自己会收到这个字段信息;比牌时候，失败者会收到自己牌信息;孤注一掷时候，失败会收到自己牌信息
	required int32 win_site = 6;//比牌时为哪个位置胜利
	required int32 tatol_clips = 7;//桌面总筹码
	required int32 min_clips = 8;//最低下注筹码(看牌情况下)
}

message nested_zhajinhua_back_clip {
	required int32 site = 1;
	required int32 clips = 2;
	required double new_clips = 3;
}

message nested_zhajinhua_result {
	required int32 site = 1;
	required int32 win_clips = 2;
	required double new_clips = 3;
	repeated int32 cards = 4;
	required int32 special_award = 5;//三同，顺金奖励
	required int32 back_clips = 6;//返还金额（别人孤注一掷时候胜利）
}

message msg_zhajinhua_result_2c {
	required int32 type = 1;//0，普通结算；1，10回合结算
	repeated int32 win_sites = 2;//胜利的位置
	repeated nested_zhajinhua_result results = 3;
}

//自动补充筹码设置
message msg_zhajinhua_set_anto_clips_2s {
	required int32 clips = 1;
}

message msg_zhajinhua_set_anto_clips_2c {
	required int32 ret_code = 1;//0成功，-1错误的金额
}

//自动补充筹码更新筹码协议
message msg_zhajinhua_clips_update_2c {
	required int32 site = 1;
	required double clips = 2;
	required double gold = 3;
	required int32 auto_set_clips = 4;//自动设置筹码
}

//打赏功能
message msg_zhajinhua_dashang_2s {
}

message msg_zhajinhua_dashang_2c {
	required int32 site = 1;
	required double new_clips = 2;
}
//--------------------------------炸金花 end----------------------------------

//--------------------------------排行榜begin-----------------------------------
//cmd_start_index=4300
//cmd_name=rank
message msg_rank_get_rank_list_2s {
	required int32 type = 1;//排行榜类型，1财富，2昨日盈利
}

message nested_rank_info {
	required int32 rank = 1;
	required int32 player_id = 2;
	required string player_name = 3;
	required string openid = 4;
	required string headurl = 5;
	optional int32 sex = 6;
	required double value = 7;//对应值   change gold to double
	optional int32 is_robot = 8;//是否是机器人
	optional int32  reward_id = 9;
	optional int64  reward_num = 10;
}

message msg_rank_get_rank_list_2c {
	required int32 type = 1;//排行榜类型，1财富，2昨日盈利
	repeated nested_rank_info ranks = 2;
	optional int32  my_rank   = 3;
}

message msg_share_friend_2s {
	required int32 type = 1;//类型, 1:好友, 2:朋友圈
}

//vip等级礼包
message msg_vip_open {
	
}

message vip_open {
	optional 	int32 		vip_level = 1;
	repeated	int32 		vip_draw_index_list = 2; // 领取索引位置列表
}

message msg_vip_open_2c {
	repeated vip_open  draw_list = 1;//每一位代表每一个vip是否领取过
}

message msg_vip_draw {
	required 	int32 	level = 1; 	// 领取等级
	optional	int32 	index = 2;	// 领取位置索引
}

message msg_vip_draw_2c {
	required 	int32 	level = 1; 		// 领取等级
	optional	int32 	index = 2;		// 领取位置索引
	optional 	int32 	ret_code = 3;	// 0.领取成功 1.VIP等级不够 2.已经领取过
}

message msg_vip_draw_onekey {
}

message msg_vip_draw_onekey_2c {
	optional 	int32 						ret_code = 1;	// 0.领取成功 1.所有的都领取了
	repeated	msg_invited_task_reward		reward_list = 2;
}

//更新VIP经验
message msg_update_vip_level_2s {
	required int64 cur_exp = 1;
	required int32 cur_level = 2;
}

//更新玩家经验
message msg_update_player_level_2s {
	required int64 cur_exp = 1;
	required int32 cur_level = 2;
}

//领取救济金
message msg_relief_gift_2s {
}

//领取救济金返回
message msg_relief_gift_2c {
	required int32 retcode = 1; //1:成功, 0:失败 
}

//救济金剩余次数
message msg_remain_relief_gift_cnt_2c {
	required int32 remain_cnt = 1; //剩余次数
}


//--------------------------------排行榜end-----------------------------------

//--------------------------------任务系统start-------------------------------
message nested_task_progress {
	required int32 target_cnt = 1; //目标次数
	required int32 cur_cnt = 2; //当前完成的次数(和目标次数一样时代表可领取)
}

//
message nested_accept_task {
	required int32 task_id = 1; //任务id
	required int32 flag = 2; //0:未领取, 1:已领取
	repeated nested_task_progress progress = 3; //
	optional int32 expire_time  = 4[default=0];
}

//任务列表
message msg_accept_task_2c {
	repeated nested_accept_task task = 1;
	optional int32              task_level = 2;//当前任务等级
}

//提交任务
message msg_submit_task_2s {
	required int32 task_id = 1; //任务id
}

//提交任务结果
message msg_submit_task_2c {
	required int32 task_id = 1; //任务id
	required int32 ret_code = 2;
}

//任务进度改变
message msg_task_progress_change_2c {
	required int32 task_id = 1; //任务id
	repeated nested_task_progress progress = 2; //
	optional int32 expire_time  = 3[default=0];
}

//触发等级任务
message msg_trigger_level_task_2s{
	required int32   level = 1;
}

message msg_trigger_level_task_2c{
	required int32   ret_code = 1[default=0];
	optional int32   level    = 2;
	repeated nested_accept_task task = 3; //有变化的任务
}

//更新金钱
message msg_update_money_2c {
	required int32 money_type = 1; //类型, 0:金币, 1:房卡, 2:钻石, 3:红包(单位分), 4:摇摇乐专用元宝(财富游戏), 5:普通元宝(金币场), 6:话费(单位分)
	required int64 change_value = 2; //改变值 
	required int64 new_value = 3; //新值
	required int32 change_type = 4; //原因
}

//物品基本结构
message nested_item_base {
	required int64 itemid = 1; //物品唯一id
	required int32 item_data_id = 2; //物品配置表id
	required int64 cnt = 3; //物品数量
	required int32 validtime = 4; //时效性(-1永久)
}

//新增物品
message msg_add_new_item_2c {
	required nested_item_base item = 1;
}

//更新物品
message msg_update_item_2c {
	required int64 itemid = 1;
	required int64 cnt = 2; //0代表删除物品
	optional int32 expire  = 3;
}

//上线初始化
message msg_online_item_list_2c {
	repeated nested_item_base list = 1;
}

//开始抽奖
message msg_luck_draw_2s {
	required int32 main_type = 1; //1:抽奖卡抽奖, 2:元宝抽奖
	required int32 sub_type = 2; //元宝抽奖时有效, 1:88元宝/次, 2:1元话费/次, 3:1元红包/次
}

//抽奖结果
message msg_luck_draw_2c {
	required int32 main_type = 1; //1:抽奖卡抽奖, 2:元宝抽奖
	required int32 sub_type = 2; //元宝抽奖时有效, 1:88元宝/次, 2:1元话费/次, 3:1元红包/次
	required int32 retcode = 3; //-1:抽奖卡不足, -2:元宝不足, -3:话费不足, -4:红包不足, -5:加入背包失败 1:成功
	required int32 id = 4; //配置表id
	required int32 cnt = 5; //新的抽奖次数
}

//抽奖记录
message nested_luck_draw {
	required int32 playerid = 1;
	required string playername = 2;
	required int32 time = 3;
	required int32 id = 4;
	required string openid = 5;
	required string headurl = 6;	
}

//上线下发
message msg_online_luck_draw_2c {
	repeated nested_luck_draw list = 1;
}

//上线下发抽奖次数
message msg_online_luck_draw_cnt_2c {
	required int32 cnt = 1;
}

//新的抽奖记录
message msg_add_new_luck_draw_2c {
	required nested_luck_draw st = 1;
}

// 商城商品
message config_shop_item {
	required int32 id = 1;
	required int32 cost_itemid = 2; 
	required int64 cost_item_count = 3;
	required int32 itemid = 4;
	required int64 item_count = 5;
	required int32 vip_level = 6;
	required int32 type = 7;
	required int32 is_giftsbag = 8;
	required int32 cost_discount = 9;
	required int32 get_discount = 10;
	optional int32 vip_add = 11[default=0]; //vip额外增加
	optional int32 sub_type = 12;
}
// 登陆商城配置通报
message config_shop_login_notify{
	repeated config_shop_item shoplist = 1;
	optional int32            activity_shop = 2; //1 兑换活动开启 2 兑换活动关闭
}
// 道具
message common_itemid_count{
	required int32 itemid = 1;
	required int64 count = 2; 
}
// 礼包
message config_giftsbag_item{
	required int32 id = 1;
	repeated common_itemid_count items = 2;
}
// 登陆礼包通报
message config_giftsbag_login_notify{
	repeated config_giftsbag_item giftsbaglist = 1;
}
// 购买商品请求
message msg_shop_buy_req{
	required int32 id = 1;
}
// 响应商品购买
message msg_shop_buy_ask{
	required int32 code = 1;
}

// 购买商品价格验证请求
message msg_shop_goods_amount_req{
	required int32 id = 1;
	required int32 itemid = 2;
	required int64 itemcount = 3;
}
// 响应商品购买
message msg_shop_goods_amount_ask{
	required int32 code = 1;
}


// 实物兑换商品
message config_trade_shop_item {
	required int32 id = 1;
	required int32 cost_itemid = 2;
	required int64 cost_item_count = 3;
	required int64 cost_discount = 4;
	required int32 itemid = 5;
	required int64 item_count = 6;
	required int64 stock_count = 7;
	required int32 type = 8;
}

// 请求实物商城兑换列表
message msg_trade_shop_list_req{
}

// 响应实物商城兑换列表
message msg_trade_shop_list_ask{
	repeated config_trade_shop_item list = 1;
}


// 兑换实物商品请求
message msg_trade_shop_exchange_req{
	required int32 id = 1;			// 商品id 
	required string name = 2;		// 收件人姓名
	required string Phone = 3;		// 收件人电话
	required string add = 4;		// 收件人地址
	optional int32  op_type = 5;    // 1 商城兑换  2 活动兑换
	
}
// 响应实物商品兑换
message msg_trade_shop_exchange_ask{
	required int32 code = 1;
}

// 实物兑换记录
message shop_exchange_record_item {
	required int32 itemid = 1;
	required int32 itemcount = 2;
	required int32 status = 3;//1 审核中 2 同意 3拒绝
	required int32 time = 4;
	required string track_num = 5;
	required int64 order_num = 6; //订单号
}

// 请求实物商品兑换记录
message msg_trade_shop_exchange_record_req{
	optional int32  op_type = 1; // 1 商城兑换  2 活动兑换
}
// 响应实物商品兑换记录
message msg_trade_shop_exchange_record_ask{
	repeated shop_exchange_record_item list = 1;
	optional int32                     op_type = 2;
}

//活动状态更新
message msg_activity_state {
	optional int32   activity_id  = 1;
	optional int32   state        = 2; // 1 开始 2 结束
}

message activity_item{
	optional int32   min_rank          = 1;
	optional int32   max_rank          = 2;
	optional int32   item_data_id = 3;
	optional int64   num          = 4;
}

//1 兑换活动 2 排行榜 3 收集活动
message activity_infos{
	optional int32   			activity_id  			= 1;
	optional int32   			state        			= 2;
	repeated activity_item   	rewards_info  			= 3;//奖励信息
}

//活动信息
message msg_activity_info {
	repeated  activity_infos      activity     = 1; 
}

//刷新某功能
message msg_refresh_function {
	optional  int32      function_id     = 1; 		// 1.比赛; 2. 
}

message msg_activity_info_req{
}

message happy_item{
	optional int32   item_data_id  = 1;
	optional int64   num           = 2;
}

message happy_info{
	optional int32 index    = 1;
	optional int32 state    = 2; //1 可领  2 已领取 3 待领取
	repeated happy_item   items = 3;
}

//七天乐
message msg_seven_happy{
	optional int32    begin_time = 1;
	optional int32    end_time   = 2;
	repeated happy_info  happys  = 3;
	optional bool     is_bind    = 4;
}

message msg_get_seven_happy_req{
	optional int32    index      = 1;
}

message msg_get_seven_happy_ret{
	optional int32    ret_code  = 1[default=0];
	optional int32    index     = 2;
}

message msg_share_friend_2c{
	optional int32    ret_code  = 1[default=0];
}

message msg_update_memory_card_info{
	optional	int32 	game_type = 1;			// 游戏类型
	optional	int32 	expire_time  = 2;		// 过期时间
}

//分享另获救济金
message msg_share_relief_gift_2s {
}

//分享救济金返回
message msg_share_relief_gift_2c {
	required int32 retcode = 1; //1:成功, 0:失败 
}

//每日分享（金额随机）
message msg_day_share_reward_2s {
	optional	int32 	client_channel	= 1;	//客户端渠道id
}

//每日分享（金额随机）
message msg_day_share_reward_2c {
	optional 	int32 				retcode = 1; //1:成功, 0:失败
	repeated	nested_item_base 	reward = 2;
}

message get_rank_activity_req {

}

message rank_activity {
	optional	int32 			id 			= 1;
	optional	int32  			begin_time	= 2;
	optional	int32 			end_time 	= 3;
	optional	string 			title 		= 4;
	optional	string 			content 	= 5;
	optional	msg_rank_ret	rank_detail	= 6;	// 排行榜详情
}

message get_rank_activity_ret {
	repeated	rank_activity	list = 1;
}

message msg_rank_activity_state {
	optional int32   activity_id  = 1;
	optional int32   state        = 2; // 1 开始 2 结束
}

// 获取收货地址
message get_receiving_address_req {

}

message get_receiving_address_ret {
	optional	string 			name 	= 1;
	optional	string 			tel 	= 2;
	optional	string 			address = 3;
}

message modify_receiving_address_req {
	optional	string 			name 	= 1;
	optional	string 			tel 	= 2;
	optional	string 			address = 3;
}

message modify_receiving_address_ret {
	optional	int32 			ret_code = 1;	// 0:成功 1.失败
}

message get_lucky_activity_req {

}

message lucky_activity {
	optional	int32 			id 			= 1;
	optional	int32  			begin_time	= 2;
	optional	int32 			end_time 	= 3;
	optional	int64  			user_score 	= 4;
	optional	int32 			rank_id		= 5;	// 排行榜详情
	optional	int64 			reward_pool_size 	= 6;	// 奖池大小  
}

message get_lucky_activity_ret {
	repeated	lucky_activity	list = 1;
}

message msg_lucky_activity_state {
	optional int32   activity_id  = 1;
	optional int32   state        = 2; // 1 开始 2 结束
}

message msg_lucky_activity_draw_req {

}

message msg_lucky_activity_draw_ret {
	optional	int32 			ret_code 	= 1; 	// 0.成功 1.积分不足 2.活动不存在
	optional	int32 			lucky_score = 2;	// 幸运分数
}

message msg_lucky_activity_draw_history_req {
	
}

message lucky_activity_draw_history {
	optional	int32 			draw_time 	= 1;
	optional	int32  			draw_score	= 2;
}

message msg_lucky_activity_draw_history_ret {
	repeated	lucky_activity_draw_history 	list = 1;
}

//VIP满级之后的充值礼包
message msg_vip_ext_open_2c {
	optional	int32 			cur_exp 		= 1;	// 当前经验条
	optional	int32 			draw_num 		= 2;	// 可领取的礼包数
}


//=========slot game============
//cmd_start_index=4400
//cmd_name=slot

message msg_slot_enter_2s{
	optional int32    game_type  = 1;
	optional int32    room_type  = 2;
}

message msg_slot_enter_2c{
	optional int32    ret_code   = 1[default=0];//1 金币不足  2 在其他游戏中
	optional int32    game_type  = 2;
	optional int32    room_type  = 3;
	optional int32    role_num   = 4;
}

message msg_slot_bet_2s{
	optional int32    line_num   = 1;
	optional int32    line_bet   = 2;
}

message nested_slot_win_line{
	optional int32    line      = 1;
	optional int32    card      = 2;
	optional int32    num       = 3;
}

message nested_slot_card{
	optional int32    x       = 1;
	optional int32    y       = 2;
	optional int32    card_id = 3;
}

message nested_slot_func{
	optional int32     func_type  = 1;
	optional int32     func_cnt   = 2;
	optional int32     line       = 3;
	optional int32     bet        = 4;
	optional int32     site_id    = 5;
	repeated int32     midd_cards = 6;
	optional int32     odds       = 7;
	optional int32     win_money  = 8;
	optional double    new_money  = 9;
	optional int32     mini_win_money = 10;
}

message nested_slot_result {
	repeated nested_slot_card          cards     = 1;
	repeated nested_slot_win_line      win_lines = 2;
	repeated nested_slot_func          funcs     = 3;
	optional double                    new_money = 4;
	optional int32                     win_money = 5;
	optional int32                     big_win   = 6;
}

message msg_slot_bet_2c{
	optional int32    ret_code   = 1[default=0];//1 配置错误 2 参数错误 3 金币不足
	optional nested_slot_result  result = 2;
	optional int32    type       = 3[default=0];//9 人物  10 刀剑
}

message msg_slot_mini_game_2s{

}

message msg_slot_mini_game_2c{
	optional nested_slot_func     result = 1;
}

//得分
message msg_slot_get_2s{
}

message msg_slot_get_2c{
	optional int32       ret_code 	= 1[default=0];// 
	optional double      new_money  = 2;
}

message msg_slot_compare_2s{
	optional int32                choice = 1;
}

message msg_slot_compare_2c{
	optional int32                ret_code  = 1[default=0];//1 不能比倍 2 未达比倍条件  3 金币不足
	repeated int32                points 	= 2;
	optional double               new_money = 3;
	optional int32                win_money = 4;
}

message msg_slot_reconnect{
	optional int32                game_type = 1;
	optional int32                room_type = 2;
}

message msg_slot_reconnect_2s{
}

message msg_slot_reconnect_2c{
	repeated nested_slot_func     func      = 1;
}

message msg_slot_quit_2s{
	optional int32    game_type  = 1;
	optional int32    room_type  = 2;
}

message msg_slot_quit_2c{
	optional int32    ret_code   = 1[default=0];
}

message msg_slot_choice_comapre_2s{
	optional int32    choice     = 1;//1双比倍  2 比倍 3 半比
}

message msg_slot_choice_comapre_2c{
	optional int32    ret_code   = 1[default=0];
	optional int32    choice     = 2;//1双比倍  2 比倍 3 半比
	optional double   new_money  = 3;
}

message msg_slot_op_2s{
	optional int32    game_type  = 1;
	optional int32    op_type    = 2; //1 打开在线列表  2 打开全盘奖列表
	optional int32    room_type  = 3;
	optional int32    index      = 4;
}

message slot_role {
	optional int32    player_id  	= 1;
	optional string   player_name 	= 2;
	optional string   open_id     	= 3;
	optional string   head_url      = 4;
	optional double   coin          = 5;
	optional int32    bet           = 6;
	optional int32    time          = 7;
	optional string   all_name      = 8;
}

message msg_slot_op_2c{
	optional int32    game_type  = 1;
	optional int32    op_type    = 2;
	repeated slot_role     infos = 3;
	optional int32    role_num   = 4;
	optional int32    index      = 6;
}

message msg_slot_update {
	optional int32   game_type   = 1;
	optional int32   room_type   = 2;
	optional int32   role_num    = 3;
}

message mammon_box_info{
	optional int32   seat_id     = 1;
	optional int32   box_id      = 2;
}

message msg_slot_mammon_open_box_2s {
	optional int32   seat_id     = 1;
}

message msg_slot_mammon_open_box_2c{
	optional int32             ret_code = 1[default=0];
	optional mammon_box_info   box      = 2;
	optional int32   left_times  	    = 3;
	optional int32   total_rate  	    = 4;
}

message msg_slot_mammon_reconnet_2s{
}

message msg_slot_mammon_reconnet_2c{
	repeated mammon_box_info   open_boxs    = 1;
	optional int32             total_rate   = 2;
}

message msg_slot_gm_2s{
	repeated int32             icons       = 1;
}

message get_cash_activity_req {

}

message cash_activity {
	optional	int32 			id 			= 1;
	optional	int32  			begin_time	= 2;	// 活动开始时间
	optional	int32 			end_time 	= 3;	// 活动结束时间
	optional	int32 			open_cash_time 	= 4;	// 下次开奖倒计时（单位：s）
	optional	string 			user_cash_code	= 5;	// 玩家兑奖码
	optional	bool 			is_open_cash	= 6;	// 今日是否开奖
	optional	int32 			user_reward_level = 7;	// 玩家中奖等级（0:未中奖 1:一等奖 2:二等级 3:三等奖）
	optional	int32 			rank_num1 		= 8;
	optional	int32 			rank_num2 		= 9;
	optional	int32 			rank_num3 		= 10;
}

message get_cash_activity_ret {
	repeated	cash_activity	list = 1;
}

message msg_cash_activity_state {
	optional int32   activity_id  = 1;
	optional int32   state        = 2; // 1 开始 2 结束
}

// 获取中奖码
message msg_get_user_activity_cash_code_req {
}

// 获取中奖码
message msg_get_user_activity_cash_code_ret {
	optional	int32 			ret_code 	= 1;		// 0.成功 1.已有兑换码 2.活动未开  3.兑换码已领完 4.今日已开奖
	optional	string 			cash_code 	= 2;
}


// 获取玩家中奖记录
message msg_user_cash_activity_reward_history_req {
	optional	int32 			activity_id 		 = 1;
}

message cash_activity_reward_history {
	optional	int32 			reward_time 	= 1;
	optional	string			reward_code		= 2;
	optional	int32 			reward_rank 	= 3;
}

message msg_cash_activity_reward_history_ret {
	repeated	cash_activity_reward_history	list = 1;
}

// 获取中奖榜单
message msg_day_cash_activity_reward_history_req {
	optional		int32 		timestamp 	= 1;
}

message day_cash_activity_reward_history {
	optional	uint32			user_id			= 1;
	optional	string			user_name 		= 2;
	optional	string 			head			= 3;
	optional	int32 			reward_time 	= 4;
	optional	string			reward_code		= 5;
	optional	int32 			reward_level 	= 6;
}

message msg_day_cash_activity_reward_history_ret {
	optional	int32 							 	timestamp = 1;
	repeated	day_cash_activity_reward_history	list = 2;
	repeated	int32 							 	tslist = 3;
}

// 开奖提示
message msg_cash_activity_open_tips {
	optional	int32 			tip_time 		= 1; // 单位（s）
}

message msg_cash_activity_open_result_req {
}

// 开奖结果
message msg_cash_activity_open_result_ret {
	repeated		string		rank_code_list1		= 1; // 一等奖开奖号码列表
	repeated		string		rank_code_list2		= 2; // 
	repeated		string		rank_code_list3		= 3; // 
}

//--------------------------------刨幺begin-----------------------------------
//cmd_start_index=4500
//cmd_name=paoyao

message py_team{//刨幺队伍
	optional 	uint32		id		=1;//队伍id
	optional	uint64		score	=2;//队伍积分
}

message py_role{//刨幺玩家结构
	optional 	uint32		id		=1;//玩家id
	optional	uint64		score	=2;//玩家积分
	optional 	uint32		team_id		=3;//队伍id
	repeated	uint32		poker		=4;//手牌
	optional	uint32		a_num	=5;//A数量
	optional	uint32		y_num	=6;//4数量
	optional	uint32		out_index	=7;//出完牌的顺序
	optional	bool		is_auto		=8;//是否托管
	optional	bool		is_online	=9;//是否在线
	optional	uint32		poker_num	=10;//手牌数量
	optional	int64		total_score	=11;//总积分
	optional	bool		ready	=12;//是否准备
	optional	bool 		double 		=13;//是否加倍
	optional    uint32		xue 		=14;//0没有操作，1雪，2不雪
	optional	bool 		yao 		=15;//是否选幺
	repeated	uint32		out_poker		=16;//不要时候值为【16#FF】
	optional	uint32 		liu_num 		=17;//6的数量
}

message py_card_info{
	optional   	uint32 	card5=1;//
	optional   	uint32 	card10=2;//
	optional   	uint32 	cardk=3;//
}

message py_desk{//刨幺桌子结构
	optional	int32				id 		=1;
	optional	int32				state 	=2;//0等待准备，1游戏中，2等待雪,3等待幺
	optional	int32				next_time	=3;//下一次操作结束时间戳
	optional	py_rule_info		rule		=4;//规则
	optional	int64				score		=5;//桌子积分
	repeated	py_team				team 		=6;//队伍列表
	optional	int32				game_type 		=7;//游戏类型60朋友61金币
	repeated	py_role				role_list		=8;//玩家列表
	optional	uint32				op_id			=9;//当前操作玩家id
	optional	bool				is_reconnect	=10;//true重连
	optional	int32				tmp_win			=11;
	optional	py_card_info		card_info		=12;
	optional	uint32				cur_circle		=13;
	optional	uint32				dissolve_timeout =14;
	repeated 	room_dissolve_agree_ack dissolve_info = 15;	// 解散情况（为空则不是在解散状态）
	optional	uint32				config_room_id =16;
}

message py_player_poker{//刨幺玩家手牌
	optional 	uint32		id		=1;//玩家id
	repeated	uint32		poker		=2;//手牌
	optional	uint32		team_id		=3;//队伍id
	optional	uint32 		liu_num 		=7;//6的数量
}

message msg_paoyao_send_poker{//发牌
	repeated 	py_player_poker 		list=1;//玩家手牌列表
	optional 	uint32 					state=2;//0等待准备，1游戏中，2等待雪,3等待幺
	optional	uint32					next_id=3;//当前操作玩家id
	optional 	uint32 					time=4;//下一次操作结束时间戳
	repeated	uint32					change_list=5;//玩家交换列表
	repeated	py_team					team 		=6;//队伍列表
}

message msg_paoyao_ready_req{//准备
	optional 	bool 		is_double=1;//是否加倍

}

message msg_paoyao_ready_ack{//准备返回
	optional 	uint32		id		=1;//玩家id
	optional 	bool 		is_double=2;//是否加倍
}

message msg_paoyao_yao_req{//选幺
	optional	uint32		a_num	=1;//A数量
	optional	uint32		y_num	=2;//4数量
}

message msg_paoyao_yao_ack{//选幺返回
	optional	uint32		id	=1;//玩家id
}

message paoyao_player_yao{//幺的结构
	optional 	uint32		id		=1;//玩家id
	optional	uint32		a_num	=2;//A数量
	optional	uint32		y_num	=3;//4数量
}

message msg_paoyao_yao_notify{//选幺结束
	repeated	paoyao_player_yao		list	=1;//玩家yao列表
	optional	uint32 					next_id		=2;//当前操作玩家id
	optional	int32					next_time	=3;
}

message msg_paoyao_yao_change{//玩家幺改变
	optional	paoyao_player_yao		yao	=1;//玩家新的yao
}

message msg_paoyao_act_req{//玩家操作
	optional	uint32	type 	=1;//1不出，2出牌
	repeated	uint32	poker	=2;//出的牌
}

message msg_paoyao_act_ack{//操作返回
	optional	uint32	type 	=1;//1不出，2出牌
	repeated	uint32	poker	=2;//出的牌
	optional	uint32	next_id	=3;//当前操作玩家id
	optional	int32	next_time	=4;
	optional	int32	op_id	=5;
}

message msg_paoyao_xue_notify{//通知雪
	optional	uint32	team_id 	=1;//选择雪的队伍id
}

message msg_paoyao_xue_req{//玩家请求雪
	optional	bool	type 	=1;//true雪，false不雪
}

message msg_paoyao_xue_ack{//请求雪返回
	optional	bool	type 	=1;//true雪，false不雪
	optional	uint32		id	=2;
}

message msg_state_change{//桌子状态改变
	optional	uint32 		state =1;//0等待准备，1游戏中，2等待雪,3等待幺
	optional	uint32		next_id	=2;//当前操作玩家id
	optional	int32		next_time	=3;
}

message msg_paoyao_score_change{//队伍积分改变
	optional	uint32 		id =1;//玩家id
	optional	uint32		team_id	=2;//队伍id
	optional	uint64		score	=3;//最新积分
}

message msg_paoyao_dscore_change{//桌子积分改变
	optional	uint64		score	=1;//最新积分
}


message msg_paoyao_result{//小结算
	optional	uint32		win_id		=1;//获胜队伍id
	optional	uint32		win_type	=2;//获胜类型
	optional	uint32		xue_type	=3;//雪类型
	repeated	py_player_result		result	=4;//赢的积分
	repeated	py_player_poker			poker	=5;//玩家手牌
}

message py_player_result{//玩家输赢结构
	optional 	uint32		id		=1;//玩家id
	optional	int64		score		=2;//玩家积分
}

message py_player_final_result{//玩家大结算结构
	optional 	uint32		id		=1;//玩家id
	optional	int64		score		=2;//玩家积分
	optional	uint32		win_times=3;
	optional	uint32		lose_times=4;
	optional	uint32		big_xue=5;
	optional	uint32		small_xue=6;
}

message msg_paoyao_final_result{//大结算
	repeated	py_player_final_result		list		=1;//输赢列表
}

message msg_paoyao_other_poker{//通知其他人的牌
	optional	py_player_poker		list		=1;//玩家手牌
	optional	uint32 				id 			=2;//玩家id
}

message msg_paoyao_tuoguan_req{
	optional   	bool 	is_tuoguan=1;//true托管false取消托管		
}

message msg_paoyao_tuoguan_change{
	optional   	bool 	is_tuoguan=1;//true托管false取消托管
	optional	uint32 	id			=2;
}

message msg_paoyao_chat_req{
	optional   	uint32 	msg=1;//消息id
}

message msg_paoyao_chat_ack{
	optional   	uint32 	msg=1;//消息id
	optional	uint32 	id			=2;
}


//--------------------------------刨幺end-----------------------------------


//--------------------------------国庆活动 begin----------------------------------
//cmd_start_index=4700
//cmd_name=activity_collect

message activity_collect_word {
	optional	int32 	word_index = 1;	// 翻字的索引（从0开始）
	optional	int32 	num = 2;		// 拥有数量
}

message activity_collect_info {
	optional	int32 	id = 1;
	repeated	activity_collect_word  activity_words = 2;		//活动文字
	optional	int32 	row = 3;
	optional	int32 	col = 4;
	repeated	int32 	collected_reward = 5;		//已经抽过奖的id
	optional	int32 	left_collect_times = 6;		//剩余收集次数
	optional	int32 	can_open_box_pos_list = 7;	//可以打开的箱子列表（0表示大奖 从右上到左下从1开始排序） 
}

//上线发送，是否开启了收集活动
message is_open_activity_collect {
	optional	bool 	is_open = 1;	
}

//请求收集活动列表
message get_activity_collect_list_req {
}

message get_activity_collect_list_ack {
	repeated	activity_collect_info 	list = 1;
}

//获得新的翻牌机会
message activity_collect_add_draw_times {
	optional	int32 		times	= 1;
}

// 翻牌
message activity_collect_draw_req{
	optional	int32 	activity_id 	= 1;
}

message activity_collect_draw_ack {
	optional	int32 					ret_code 		= 1;
	optional	int32 					activity_id 	= 2;
	optional	activity_collect_word 	word 			= 3;		//翻牌获得的字
	optional	int32 					left_collect_times = 4;		//剩余翻牌次数
	repeated	int32 					can_open_box_pos_list = 5;	//可以打开的箱子列表（0表示大奖 从右上到左下从1开始排序） 
}

// 开箱子，领奖励
message activity_collect_open_box_req {
	optional	int32 		activity_id = 1;
	optional	int32 		pos 		= 2;
}

message activity_collect_open_box_ack {
	optional	int32		ret_code 	= 1;
	optional	int32 		activity_id = 2;
	optional	int32 		pos 		= 3;
	repeated	nested_item_base reward	= 4;		//奖励
}

//--------------------------------国庆活动 end----------------------------------



//----------------------------------疯狂拼十 begin------------------------------
//cmd_start_index=4800
//cmd_name=fkps
//战况信息
message fkps_battle {
	required int32 id = 1;
	repeated int32 isOk = 2; //是否胜利(0,1)
}

//手牌
message fkps_pokers {
	required int32 id = 1; //(0:庄)
	required int32 is_win_banker = 2; //是否能胜庄（1：胜  2：不胜）
	required int32 poker_type = 3;
	repeated int32 pokers = 4;//(包含王的牌)
	repeated int32 kings = 5;//(王变的牌)
}

//已压注
message fkps_beted {
	required int32 id = 1; //压住的是谁(1,2,3,4: 关貂诸赵)
	required int64 sum = 2; //压了多少
}

//主动恢复状态
message msg_fkps_resume_state_2c {
	required int32 room_state = 1;//（0：等待， 1：下注， 2： 比牌，3：结算）
	required int32 left_time = 2;//倒计时
	required int32 req_banker_sum = 3;//申请上庄人数
	required int32 banker_times = 4; //如果自己是庄的话，还剩余庄的次数
	required int32 is_join = 5; //是否已经加入游戏
	repeated fkps_beted beted = 6;//其他人已下注
	repeated fkps_beted my_beted = 7; //自己的下注
	repeated fkps_pokers pokers = 8; //手牌
	repeated fkps_battle battle_info = 9; //战况信息
	repeated int32 bankers = 10; //庄家id列表
}

//广播状态
message msg_fkps_state_2c {
	required int32 room_state = 1; //（0：等待， 1：下注， 2：结算）
}

//压注
message fkps_bet_2s {
	required int64 bet = 1;//金币
	required int32 bet_id = 2; //压的是哪一门
}

//压注返回
message fkps_bet_2c {
	required int32 result = 1; //0：表示成功， -1：表示超过最大值 -2：表示时间已过
	required int32 bet_id = 2; //表示压到哪一门
	required int64 bet_add = 3; //当前新增
	required int64 beted = 4;// (压注总数)
}

//广播压注
message fkps_bet_broadcast {
	required int32 bet_id = 1; //(表示压到哪一门)
	required int64 bet_add = 2; //当前新增
	required int64 beted = 3;// (压注总数)
}

//申请上下庄
message fkps_req_banker_2s {
	required int32 type = 1; //1:上庄， 2：下庄
}

//申请上庄回复
message fkps_req_banker_2c {	
	required int32 result = 1; //(0：正确 ； -1：钱不够  -2： 庄人数已满)
	required int32 type = 2; //1 上庄， 2 下庄
	required int32 num = 3; //申请庄的队列种自己的排行
}

//申请庄人数变化广播
message fkps_req_banker_sum_broadcast {
	required int32 sum = 1; //当前申请队列种的人数
}

//广播在申请庄的队列种自己的排行
message fkps_req_banker_num_broadcast {
	required int32 num = 1;
}

//广播上庄
message fkps_banker_add_2c {
	required int32 id = 1;
}

//广播下庄
message fkps_banker_del_2c {
	required int32 id = 1;
}

//广播当前庄列表
message fkps_banker_lists {
	repeated int32 id = 1;
}

message fkps_winer {
	required int32 id = 1;
	required int64 sum = 2;
}

//广播战绩
message fkps_battle_lists {
	repeated fkps_battle info = 1;
}

message fkps_result {
	required int32 id = 1; // (表示那一门)
	required int64 sum = 2;
}

//结算
message fkps_results_2c {
	repeated fkps_result me = 1; 
	repeated fkps_winer winers = 2;
	repeated fkps_pokers pokers = 3; 
}

//----------------------------------疯狂拼十 end-------------------------------------


//-------------------------------拼三张--------------------------
//cmd_start_index=5100
//cmd_name=pin3
message pin3_user_info{
	optional int32       user_id = 1;
	optional int32       user_state = 2;
	optional int64       cur_score = 3;//身上当前分数
	optional bool        is_banker = 4;
	optional int64       bet_score = 5;//玩家当前个人总押注
	optional pin3_poker  pokers  = 6;
	optional int32       pokers_state = 7;//0 未看牌 1 已看牌 2 放弃
	repeated pin3_cmp_poker  cmp_poker = 8;
	optional bool        is_online   = 9;
	optional int32       seat        = 10;
	optional int64       cur_bet_score = 11;//当前手押注
}

message pin3_dissolve_info{
	optional int32       user_id    = 1;
	optional bool        is_agree   = 2;
}

message msg_pin3_state_info{
	optional pin3_user_info    user_info  = 1;
	repeated pin3_user_info    other_infos = 2;
    optional int64             cur_bet   = 3;//当前总押注
	optional int32             cur_circle = 4;
	optional int32             cur_op_user_id = 5;
	optional int32             cur_op_time    = 6;//當前操作倒計時時間錯
	optional int32             cur_bet_level  = 7;
	optional int32             cur_game_state = 8;//0 游戏中 1 结束  2 火拼中
	optional int32             fire_bet  = 9;
	optional int32             cur_round = 10;
	repeated pin3_dissolve_info     dissolves   = 11;//解散情况（为空则不是在解散状态）
	optional int32                  disvotetime = 12;//解散时间
	optional int32             config_id   = 13;
	optional bool        	   is_reconnect = 14;
}

message pin3_poker{
	optional int32       user_id = 1;
	repeated int32       pokers =  2;
	optional int32       type   =  3;
}

//看牌
message msg_pin3_watch_req{
	optional int32       user_id = 1;
}

message msg_pin3_watch_ret{
	optional int32       ret_code = 1[default=0];
	optional pin3_poker  poker    = 2;     
}

message pin3_cmp_poker{
	repeated pin3_poker  poker    	= 1;
	optional int32       win_userid = 2;
}

//比牌
message msg_pin3_cmp_req{
	optional int32       cmp_type = 1;//1主动比牌下注  2主動比牌選人
	optional int32       user_id  = 2;
	optional int32       cmp_id   = 3;//主动比牌玩家id
}


message msg_pin3_cmp_ret{
	optional int32      	 ret_code = 1[default=0];
	optional int32      	 cmp_type = 2;
	optional int32           user_id  = 3;
	optional int32           cmp_id   = 4;
	optional int32           winner   = 5;
	optional int32           next_op_user_id = 6;
	optional int64           bet      = 7;
}

//孤注一擲
message msg_pin3_try_req{
}

message msg_pin3_try_ret{
	optional int32      	 ret_code = 1[default=0];
	optional int32           user_id  = 2;
	optional int64           bet      = 3;
	optional bool            is_win   = 4;
	optional int32           next_op_user_id = 5;
}

//火拼
message msg_pin3_fire_req{
	optional int32       user_id  = 1;
}

message msg_pin3_fire_ret{
	optional int32      	 ret_code = 1[default=0];
	optional int32       	 user_id  = 2;
	optional int64           fire_bet  = 3;
	optional int32           next_op_user_id = 4;
}

//常规操作
message msg_pin3_op_req {
	optional int32           op_type = 1;//1 跟注 2 加注 3 弃牌 
	optional int32           user_id = 2;
	optional int64           value   = 3;
}	

message msg_pin3_op_ret {
	optional int32           ret_code = 1[default=0];
	optional int32           op_type = 2;
	optional int32           user_id = 3;
	optional int64           bet = 4;
	optional int32           bet_level = 6;   //當前下注檔位
	optional int32           next_op_user_id = 7;
}

//circle更新
message msg_pin3_update{
	optional int32           value  = 1;
}

//结果
message msg_pin3_result_req {
}

message pin3_result {
	optional int32           user_id = 1;
	optional double          score   = 2;
	optional int32           round   = 3;
	optional bool           is_win  = 4;
	optional bool           is_banker = 5;
	optional int32          sever_pay  = 6;
}

message msg_pin3_result{
	repeated pin3_poker      pokers 	    = 1;
	repeated pin3_result     score_result   = 2;
	optional int32           time           = 3[default=0];
}
//-----------------------------------------------------


//--------------------------------港式5张 begin----------------------------------
//cmd_start_index=5300
//cmd_name=suoha

message msg_suoha_state_change_2c {
	required int32 room_state = 1;//0等待,1:准备,2丢底,3第一轮下注,4第二轮下注,5第三轮下注，6第四轮下注，7结算
	required int64 max_bet = 2; //最大封顶
	required int32 cur_round = 3; //当前轮，对朋友场有效
}

//准备
message msg_suoha_ready_2s {
}

message msg_suoha_ready_2c {
	required uint32 user_id = 1;//
	required int32	round = 2;	//第几局
}


//当前发言
message msg_suoha_cur_say_2c {
	required uint32 user_id = 1;
}

//下注
message msg_suoha_bet_2s {
	required int32 op = 1; // 0:加注，1:梭哈,2:弃牌,3:跟牌,4:开牌,5:过
	required int64 bet = 2;//金币
}

//下注结果成功时候广播
message msg_suoha_bet_2c {
	required int32 ret_code = 1;//0成功，-1金钱不足
	optional uint32 user_id = 2;
	optional int64 cur_bet = 3;//当前轮金币
	optional int64 all_bet = 4; //总金币
	optional int32 op = 5; //操作
}

message nested_suoha_card_info {
	required uint32 user_id = 1;
	repeated int32 cards = 2;//牌信息
}

message nested_suoha_card_info_type {
	required uint32 user_id = 1;
	optional int32 type = 2; //类型   1:单牌，2:对子，3:两队，4:三条，5:顺子，6:金花， 7:葫芦, 8:四条， 9:同花顺
	repeated int32 cards = 3;//牌信息
}

//发牌
message msg_suoha_deal_card_2c {
	repeated nested_suoha_card_info card_info_list = 1;//牌信息
}

//亮牌
message msg_suoha_show_card_2c {
	repeated nested_suoha_card_info_type card_info_list = 1;//牌信息
}

message nested_suoha_result {
	required uint32 user_id = 1;
	required int64 win_gold = 2;
	optional int32 win_times = 3;
	optional int32 lost_times = 4;
}

//单局结果
message msg_suoha_result_2c {
	repeated nested_suoha_result results = 1;
}

//战绩
message msg_suoha_result_all_2c {
	required int32 room_number = 1;//房号
	required int32 game_times = 2;//局数
	required uint32	room_master = 3;//房主ID
	required int32	start_time = 4;//开始时间
	repeated nested_suoha_result results = 5;
}

//当前玩家状态
message user_suoha_cur_state {
	required uint32 user_id = 1;
	required int64 bet = 2;//已下注
	required int64 cur_bet = 3;//已下注
	required nested_suoha_card_info_type car_info = 4;//手牌信息
	required int32 state = 5; //1:加入游戏， 0： 旁观
	required int64 coin = 6; //当前金币
	required bool is_allin = 7; //是否梭哈
	required bool is_discard = 8; //是否弃牌
}

//主动恢复状态
message msg_suoha_resume_state_2c {
	required int32 room_state = 1;
	required int32 left_time = 2;//倒计时
	required int32 cur_round = 3; //当前第几局
	required int32 config_id = 4; //金币场使用
	required uint32 cur_say = 5;//谁是当前发言
	required int32 max_bet = 6;//封顶
	repeated user_suoha_cur_state user_state = 7;
	repeated msg_suoha_dissolve_agree_ack agrees = 8; //房间解散相关消息
}

//房间解散 （同意/拒绝）
message msg_suoha_dissolve_agree_req {
	optional	bool		is_agree = 1;
}

message msg_suoha_dissolve_agree_ack {
	optional	uint32 		user_id 	= 1;
	optional	bool 		is_agree 	= 2;
	optional	int32		time		=3; //倒计时， 恢复时候使用
}

//房间解散结果
message msg_suoha_dissolve_agree_result {
	optional	bool		is_dissolve = 1;		// 是否解散
}

message msg_suoha_look_req {
	optional	uint32	user_id = 1;
}

message msg_suoha_look_ack {
	optional	uint32	user_id = 1;
}


//--------------------------------港式5张 end----------------------------------

//--------------------------------干瞪眼begin-----------------------------------
//cmd_start_index=5500
//cmd_name=gandengyan



message gdy_role{//干瞪眼玩家结构
	optional 	uint32		id			=1;//玩家id
	optional	int32		score		=2;//玩家积分
	repeated	uint32		poker		=3;//手牌
	optional	bool		is_auto		=4;//是否托管
	optional	bool		is_online	=5;//是否在线
	optional	uint32		poker_num	=6;//手牌数量
	optional	bool		ready		=7;//是否准备
	repeated	uint32		out_poker	=8;//真实id
	repeated	uint32		change_poker	=9;//变换后
	optional	bool 		zhuang 		=10;//是否是庄
	optional	bool 		guan 		=11;//是否被关，true，被关
}


message gdy_desk{//干瞪眼桌子结构
	optional	int32				id 					=1;
	optional	int32				next_time			=2;//下一次操作结束时间戳
	optional	gdy_rule_info		rule				=3;//规则
	optional	int32				rate				=4;//公共倍数
	optional	int32				game_type 			=5;//游戏类型62朋友63金币
	repeated	gdy_role			role_list			=6;//玩家列表
	optional	uint32				op_id				=7;//当前操作玩家id
	optional	uint32				last_card_num		=8;//剩余牌数量
	optional	bool				is_reconnect		=9;//true重连
	optional	uint32				cur_circle			=10;
	optional	uint32				dissolve_timeout 	=11;
	repeated 	room_dissolve_agree_ack dissolve_info 	=12;	// 解散情况（为空则不是在解散状态）
	optional	uint32				config_room_id 		=13;
	optional	int32 				state               =14;//0等待准备，1游戏中
}

message gdy_player_poker{//干瞪眼发牌结构
	optional 	uint32		id		=1;//玩家id
	repeated	uint32		poker		=2;//手牌
}

message msg_gdy_send_poker{//发牌
	repeated 	uint32 					list=1;//玩家手牌列表
	optional	uint32					next_id=2;//当前操作玩家id
	optional 	uint32 					time=3;//下一次操作结束时间戳
	optional	uint32					card_num		=4;//剩余牌数量
}


message msg_gdy_guan_change{//玩家关状态改变
	optional	uint32		id	=1;//关状态改变的玩家id
}

message msg_gdy_act_req{//玩家操作
	optional	uint32	type 	=1;//1不出，2出牌
	repeated	uint32	poker	=2;//出的牌,
	repeated	uint32	change_poker	=3;//变换后
}

message msg_gdy_act_ack{//操作返回
	optional	uint32	type 	=1;//1不出，2出牌
	repeated	uint32	poker	=2;//出的牌
	optional	uint32	next_id	=3;//当前操作玩家id
	optional	int32	next_time	=4;
	optional	int32	op_id	=5;
	repeated	uint32	change_poker	=6;//变换后
}

message gdy_player_result{//玩家输赢结构
	optional 	uint32		id		=1;//玩家id
	optional	int64		score		=2;//玩家积分
}


message msg_gdy_result{//小结算
	repeated	gdy_player_result		result	=1;//输赢的积分
	repeated	gdy_player_poker			poker	=2;//玩家手牌
}

message gdy_player_final_result{//玩家大结算结构
	optional 	uint32		id		=1;//玩家id
	optional	int64		score		=2;//玩家积分
	optional	uint32		win_times=3;
	optional	uint32		guan_times=4;
}

message msg_gdy_final_result{//大结算
	repeated	gdy_player_final_result		list		=1;//输赢列表
}


message msg_gdy_tuoguan_req{
	optional   	bool 	is_tuoguan=1;//true托管false取消托管
}

message msg_gdy_tuoguan_change{
	optional   	bool 	is_tuoguan=1;//true托管false取消托管
	optional	uint32 	id			=2;
}

message msg_gdy_rate_notify{
	optional	uint32 	rate			=1;
}


//--------------------------------干瞪眼end-----------------------------------


//-------------------------------pk begin----------------------------------
//cmd_start_index=5700
//cmd_name=pk

message msg_pk_info{
	optional int32      		pk_state   = 1;//1 开局押注阶段  2 结算阶段 4 开牌阶段
	repeated int32      		poker      = 2;
	optional pk_waybill         way        = 3;// 路单
	optional pk_all_bet         all_bet    = 4;// 总押注信息
	optional pk_self_info       self_info  = 5;
	optional bool               is_reconnect = 6;
	repeated pk_rank_info   	ranks        = 7;
	optional int32              next_time    = 8;
	optional int32              bet_id       = 9;//押注配置id
	optional int32              open_user_id = 10;
	optional string             open_name    = 11;
	optional int32              start_time   = 12;
	optional int32              reel_type    = 13;
}

message pk_waybill{
	repeated int32      ju_num  = 1;
	repeated int32      icons   = 2;
}

message pk_all_bet{
	optional int64      all_bet  	= 1;
	repeated int64      bet_infos   = 2;
}

message pk_self_info{
	optional int64      win         = 1;
	repeated int64      bet_infos   = 2;
	optional int64      coin        = 3;
}

message msg_pk_bet_req{
	required int32      op_type     = 1;//1 下注  2 取消下注
	required int32      bet         = 2;
	required int32      color       = 3;
}

message msg_pk_bet_ret{
	optional int32     		ret_code     = 1[default=0];
	optional int32      	op_type      = 2;//1 下注  2 取消下注
	optional pk_all_bet		all_bet      = 3;
	repeated int64      	bet_infos    = 4;
	optional int64          value        = 5;//取消下注返回值
}

message msg_pk_result{
	repeated int32          pokers       = 1;
	optional int32          reel_type    = 2;
	optional int32          open_user_type = 3;//0 玩家 1 机器人 2 系统
	optional int32          open_user_id = 4;
	optional string         name         = 5;
	repeated pk_rank_info   ranks        = 6;
	optional pk_self_info   self         = 7;//自己的输赢
	optional pk_waybill     way          = 8;
	optional int32          next_time    = 9;//下一把开局时间错
	optional bool           is_reset     = 10;//是否需要重置路单
	optional int32          start_time   = 11;
	repeated int64          bet_infos    = 12;
}

message pk_rank_info{
	optional int32    rank          = 1;
	optional string   name 			= 2;
	optional string   open_id     	= 3;
	optional string   head_url      = 4;
	optional int64    coin          = 5; 
}

message msg_pk_state{
	optional int32    state         = 1;//1 开局下注
	optional int32    time          = 2;//操作结束时间
	optional int32    start_time    = 3;
}

message msg_pk_open_cards_req{
}

message msg_pk_open_cards_ret{
}


//-------------------------------pk end----------------------------------

//--------------------------------红包begin-----------------------------------
//cmd_start_index=5800
//cmd_name=hb



message hb_role{//开红包玩家结构
	optional 	uint32		id			=1;//玩家id
	optional	int64		money		=2;//玩家钱
	optional	string		head		=3;//头像
	optional	string		name		=4;//名字
	optional	int32		open_money	=5;//自己开奖数字，-1代表没开
	optional	int64		result		=6;//输赢多少
	optional	int32		state		=7;//0无操作，1需要埋雷，2已埋雷，3不埋雷
	optional	bool		ready		=8;//
	optional	uint32		mai_times	=9;
	optional	uint32		zhong_times	=10;
	optional	uint32		get_times	=11;
}

message mai_role{//埋红包玩家结构
	optional 	hb_role		role			=1;//玩家信息
	optional	int64		money				=2;//红包金额
	optional	int64		num				=3;//黑号
	optional	int32		rate				=4;//倍数
	optional	uint32		id				=5;
}

message hb_open{//开奖玩家结构
	optional 	uint32		id			=1;//玩家id
	optional	int64		money		=2;//玩家输赢
}



message hb_desk{//红包桌子结构
	optional	int32				id 					=1;
	optional	int32				next_time			=2;//下一次操作结束时间戳
	optional	mai_role			zhuang				=3;//庄信息
	repeated	hb_role				players				=4;//抢红包列表
	optional	hb_role				self				=5;//自己信息
	optional	hb_rule_info		rule				=6;//规则
	optional	int32				round				=7;//当前局数
	optional	uint32				dissolve_timeout 	=8;
	repeated 	room_dissolve_agree_ack dissolve_info 	=9;	// 解散情况（为空则不是在解散状态）
	optional	int32				state 				=10;//2下注
}

message msg_hb_get_req{//抢红包
	
}

message msg_hb_get_ack{//抢红包
	optional	int32				code 					=1;//0成功
	optional	int64				money 					=2;
}

message msg_hb_list_req{//埋雷列表
	
}

message msg_hb_list_ack{//埋雷列表
	repeated	mai_role				players				=1;//红包列表
}

message msg_hb_set_req{//埋红包
	optional	int64				money			=1;//-1代表不埋操作
	optional	int32				rate			=2;//下一次操作结束时间戳
	optional	int64				num				=3;//庄
}

message msg_hb_set_ack{//埋红包
	optional	int32				code 					=1;//0成功
	optional  	int64        money              =2;//玩家身上的金额
}

message msg_hb_get_notify{//广播抢红包列表
	optional	hb_role				role 					=1;//
}

message msg_hb_open_notify{//开奖
	repeated	hb_open				players				=1;//开奖列表
	optional	hb_role				zhaung				=2;
}

message HbPlayerFinalResult{//玩家大结算结构
	optional 	uint32		id		=1;//玩家id
	optional	int64		score		=2;//玩家积分
	optional	uint32		mai_times=3;
	optional	uint32		get_times=4;
	optional	uint32		zhong_times=5;
}

message HbFinalResult{//大结算
	repeated	HbPlayerFinalResult		list		=1;//输赢列表
}

message msg_hb_enter_req{//准备
	
}

message msg_hb_enter_ack{//准备
	optional	uint32				id				=1;//
}

message msg_hb_cancel_req{//取消红包
	optional	uint32				id			=1;
}

message msg_hb_cancel_ack{//取消红包
	optional	int32				code 					=1;//0成功
	optional  	int32        id              =2;//红包id
}


//--------------------------------红包end-----------------------------------

//-------------------------------一拳拼三张--------------------------
//cmd_start_index=6000
//cmd_name=yq_pin3
message yq_pin3_user_info{
	optional int32       user_id = 1;
	optional int32       user_state = 2;
	optional int64       cur_score = 3;//身上当前分数
	optional bool        is_banker = 4;
	optional int64       bet_score = 5;//玩家当前个人总押注
	optional yq_pin3_poker  pokers  = 6;
	optional int32       pokers_state = 7;//0 未看牌 1 已看牌 2 放弃
	repeated yq_pin3_cmp_poker  cmp_poker = 8;
	optional bool        is_online   = 9;
	optional int32       seat        = 10;
	optional int64       cur_bet_score = 11;//当前手押注
}

message yq_pin3_dissolve_info{
	optional int32       user_id    = 1;
	optional bool        is_agree   = 2;
}

message msg_yq_pin3_state_info{
	optional yq_pin3_user_info    user_info  = 1;
	repeated yq_pin3_user_info    other_infos = 2;
    optional int64             cur_bet   = 3;//当前总押注
	optional int32             cur_circle = 4;
	optional int32             cur_op_user_id = 5;
	optional int32             cur_op_time    = 6;//當前操作倒計時時間錯
	optional int32             cur_bet_level  = 7;
	optional int32             cur_game_state = 8;//0 游戏中 1 结束  2 火拼中
	optional int64             fire_bet  = 9;
	optional int32             cur_round = 10;
	repeated yq_pin3_dissolve_info     dissolves   = 11;//解散情况（为空则不是在解散状态）
	optional int32                  disvotetime = 12;//解散时间
	optional int32             config_id   = 13;
	optional bool        	   is_reconnect = 14;
}

message yq_pin3_poker{
	optional int32       user_id = 1;
	repeated int32       pokers =  2;
	optional int32       type   =  3;
}

//看牌
message msg_yq_pin3_watch_req{
	optional int32       user_id = 1;
}

message msg_yq_pin3_watch_ret{
	optional int32       ret_code = 1[default=0];
	optional yq_pin3_poker  poker    = 2;     
}

message yq_pin3_cmp_poker{
	repeated yq_pin3_poker  poker    	= 1;
	optional int32       win_userid = 2;
}

//比牌
message msg_yq_pin3_cmp_req{
	optional int32       cmp_type = 1;//1主动比牌下注  2主動比牌選人
	optional int32       user_id  = 2;
	optional int32       cmp_id   = 3;//主动比牌玩家id
}


message msg_yq_pin3_cmp_ret{
	optional int32      	 ret_code = 1[default=0];
	optional int32      	 cmp_type = 2;
	optional int32           user_id  = 3;
	optional int32           cmp_id   = 4;
	optional int32           winner   = 5;
	optional int32           next_op_user_id = 6;
	optional int64           bet      = 7;
}

//常规操作
message msg_yq_pin3_op_req {
	optional int32           op_type = 1;//1 跟注 2 加注 3 弃牌 
	optional int32           user_id = 2;
	optional int32           value   = 3;
}	

message msg_yq_pin3_op_ret {
	optional int32           ret_code = 1[default=0];
	optional int32           op_type = 2;
	optional int32           user_id = 3;
	optional int64           bet = 4;
	optional int32           bet_level = 6;   //當前下注檔位
	optional int32           next_op_user_id = 7;
}

//circle更新
message msg_yq_pin3_update{
	optional int64           value  = 1;
}

message yq_pin3_result {
	optional int32           user_id = 1;
	optional double          score   = 2;
	optional int32           round   = 3;
	optional bool            is_win  = 4;
	optional bool            is_banker  = 5;
	optional int32           sever_pay  = 6;
	optional bool            is_lucky   = 7;//是否有喜分
	optional int64           lucky_score = 8;
}

message msg_yq_pin3_result{
	repeated yq_pin3_poker      pokers 	    = 1;
	repeated yq_pin3_result     score_result   = 2;
	optional int32           time           = 3[default=0];
}

message msg_yq_pin3_recharge_req{
}

message msg_yq_pin3_recharge_ret{
	optional int32              user_id     = 1;
	optional int32              next_op_time = 2;//时间戳
	optional int32              op_time     = 3;//秒数
}

message msg_yq_pin3_cancel_auto_req{
	optional int32 game_type = 1;
	optional int32 room_id = 2;
}

message msg_yq_pin3_cancel_auto_ret{
	optional int32 ret_code = 1; //0:取消失败, 1:取消成功
}

message msg_yq_pin3_auto_status {
	optional int32 user_id = 1;
	optional int32 status = 2; //0:正常中, 1:托管中
}
//-----------------------------------------------------


//------------------飞禽走兽------------------
//cmd_start_index=6400
//cmd_name=fqzs
message msg_fqzs_info{
	optional int32      			fqzs_state         = 1;//1 押注阶段  2 开奖阶段
	optional int32      			last_time          = 2;//剩余时间 秒数
	repeated fqzs_bet_info          bet_area           = 3;
	repeated fqzs_record_info       way_bill           = 4;
	repeated fqzs_user_info         rank8              = 5;
	optional int64                  cur_coin    	   = 6;//自己当前的钱
	optional int32                  room_config_id     = 7;
}

message fqzs_bet_info{
	optional int32      id 			= 1;
	optional int64      value 		= 2;
	optional int64      self_value  = 3;
}

message fqzs_record_info{
	optional int32      type    = 1;//0 普通 1 双响 2 三响 3 乐翻天
	repeated int32      icons   = 2;
}

message fqzs_user_info{
	optional int32      rank     	= 1;
	optional int32      user_id 	= 2;
	optional string     name 	    = 3;
	optional string   	open_id     = 4;
	optional string   	head_url    = 5;
	optional int64    	coin        = 6;
	optional int64      win         = 7;
	repeated fqzs_bet_info    rank8_win  = 8;
}

message msg_fqzs_bet_req{
	optional fqzs_bet_info    bet   = 1;
}

message msg_fqzs_bet_ret{
	optional int32      		ret_code    = 1[default=0];
	optional int32      		user_id     = 2;
	optional fqzs_bet_info   	bet     	= 3;
}

message msg_fqzs_bet_area_update{
	repeated fqzs_bet_info      bet_area    = 1;
}

message msg_fqzs_state_update{
	optional int32              state       = 1; //1 押注阶段  2 开奖阶段
	optional int32              last_time   = 2;
	repeated fqzs_user_info     rank8       = 3; //开局更新前八
}

message fqzs_result_info{
	optional int32              index       = 1;
	optional int32              icon        = 2;
}


message msg_fqzs_result{
	optional int32              	type        = 1;
	repeated fqzs_result_info  		result      = 2;
	repeated fqzs_bet_info          area        = 3;//中奖区域
	repeated fqzs_user_info         rank5       = 4;//
	repeated fqzs_user_info         rank8       = 5;//前八金币输赢变化，只发变化的
	optional int64                  win         = 6;//自己赢钱
	optional int64                  coin        = 7;
}



//------------------------------飞禽走兽------------------ end


//---------------fish-------------
//cmd_start_index=6700
//cmd_name=fish

message fish_user_info {
	optional int32     	user_id    = 1;
	optional int32     	seat_id    = 2;
	optional string     name 	    = 3;
	optional string   	open_id     = 4;
	optional string   	head_url    = 5;
	optional int64    	coin        = 6;
	optional int32      bet         = 7;
	optional int32      buff_id     = 8;
	optional int32      buff_time   = 9;
	optional int64      bullet_id   = 10;
	
}

message msg_fish_room_info {
	repeated fish_user_info    users   = 1;	
}

message msg_fish_set_bet_req {
	optional int32             type    = 1; //1 +   2 -
}

message msg_fish_set_bet_ret{
	required int32             ret_code  = 1[default=0];
	optional int32             user_id   = 2;
	optional int32             bet       = 3;
}

message msg_fish_bet_req{
	optional int32             bullet_id = 1;
	optional int32             dir       = 2;
	optional int32             type      = 3;
}

message msg_fish_bet_ret{
	required int32             ret_code  = 1[default=0];
	optional int32             user_id   = 2;
	optional int32             bullet_id = 3;
	optional int32             dir       = 4;
	optional int32             type      = 5;
	optional int64             coin      = 6;
}

message fish_hit_req_info{
	optional int32            fish_id  = 1;
	optional int32            pos      = 2;
	repeated int32            relation = 3;
}

message msg_fish_hit_req{
	optional int32             		bullet_id = 1;
	optional int32             		buff_id   = 2;
	repeated fish_hit_req_info 		fishs     = 3;
	optional int32                  user_id   = 4;
}

message fish_hit_info{
	optional int32             fish_id = 1;
	optional int32             hit     = 2; //0 不中 1 中
	required int32 			   win     = 3;
	required int32 			   bet 	   = 4; //鱼的倍数
	required int32 			   buff_id = 5;
	required int32 			   pos 	   = 6;
}

message msg_fish_hit_ret{
	optional int32                  user_id   		= 1;
	optional int32             		bullet_id 		= 2;
	optional int32             		buff_id   		= 3;
	repeated fish_hit_info          fishs     		= 4;
	optional int32             		buff_end_time 	= 5; //buff结束时间戳
}

message msg_fish_appear {
	required int32 path_id 		= 1;//路径id
	required int32 fish_data_id = 2;
	required int32 form 		= 3;
	repeated int32 fish_ids 	= 4;
}

//清鱼，即将出现鱼阵
message msg_fish_clean {
}

//鱼阵
message msg_fish_array {
	required int32 id 		= 1;//鱼阵id
	repeated int32 fish_ids = 2;
	required int32 pos 		= 3;//0为默认
}

//捕鱼金币返还
message msg_fish_coin_return {
	required int32 user_id = 1;
	required int64 coin    = 2;
}

message msg_fish_room_quit_req {

}

//----------------------end------------------------



//--------------------------------麻将通用begin-----------------------------------
//cmd_start_index=7000
//cmd_name=mjcommon
//房间信息

message EndLotteryInfo {
    optional uint32 userId = 1;
    optional string nickName = 2; //玩家姓名
    optional bool bigWin = 3; //是否为大赢家
    optional bool isOwner = 4; //是否房主
    optional int64 winCoin = 5; //总输赢筹码数
    optional int32 countHu = 6; //胡牌次数(含自摸+接炮)
    optional int32 countZiMo = 7; //自摸次数
    optional int32 countDianPao = 8; //点炮次数
    optional int32 countAnGang = 9; //暗杠次数
    optional int32 countMingGang = 10; //明杠次数
    optional int32 countDianGang = 11; //点杠次数
    optional int32 countChaJiao = 12; //查叫次数
    optional bool bestGunner = 13; //是否为最佳炮手
}

message PlayerCard {
    repeated CardInfo handCard = 1; // 手牌数组（自己是明的，其他玩家服务器返回暗值，避免外挂获取别的玩家手牌）
    repeated ComposeCard composeCard = 2; // 摆牌数组（碰、明杠、暗杠）
    repeated CardInfo outCard = 3; // 已出牌数组
    repeated CardInfo huCard = 4; // 胡的牌
	optional CardInfo mopai  = 5; // 摸牌
    optional uint32 UserId = 6; //
    optional int32 handCardCount = 7; //手牌的长度,当不用显示手牌的时候，只显示长度就行了
	repeated mj_hupai_type huCardType = 8; //胡牌类型(顺序对应字段huCard)
}

//手牌信息
message HoldCardInfo {
    optional int32 userId = 1;
	optional CardInfo mopai = 2;
    repeated CardInfo holdCard = 3;
}

//吃牌的结构
message ChiOverTurn {
    repeated CardInfo chiCard = 1; //可以吃的牌
}

// 小结算时玩家具体信息
message PlayerCoinInfo {
	optional uint32 userId	= 1;			//玩家ID
    optional string nick = 2;       		//昵称
    optional int32 gangFen = 3;     		//杠分
    optional int32 huFen = 4;       		//胡分
    optional int32 total = 5;       		//成绩
	optional int64 nowScore = 6;			//当前总分
    optional bool isDianPao = 7;    		//是否点炮
	optional bool isTing = 8;           	//是否已经听牌
	optional int32 xiaojiCount = 9;     	//小鸡次数
	repeated CtrlCard paiList = 10;  	//牌列表
	repeated int32  baoListSee = 11;//看过的宝牌列表
    repeated int32   baoList = 12;//没看过的宝牌列表
	optional int32 zhaFen = 13;       		//扎分
	optional int32 genZYSFen = 14;          //跟庄有赏分
	optional bool isXiaoSa = 15;            //是否
	optional int32 yuPaiFen = 16;           //鱼牌点数(绥化麻将)
	optional int32 xueHunFen = 17;          //血混分(锦州麻将)
	optional int64 paoFen = 18;             //跑分
}

message user_coin_bean {
    optional uint32 userId = 1; //玩家id
    optional int64 coin = 2; //本场的积分
}

// 补杠基本信息
message BuCardInfo {
    optional int32 type = 1; //1:万,2:条,3:筒,4:风
    optional int32 value = 2; //0:牌背 1~9：万；  10~18：条；  19~27：筒。//风牌 中发白东南西北 分别是1234567
    optional int32 id = 3; //牌的id
    optional int32 cnt = 4; //杠的次数
}

message ComposeCard {
    optional int32 value = 1; // 麻将牌值: 0~27
    optional int32 type = 2; // 1.明杠 2.暗杠 3.风杠 4.喜杠 5.幺杠 6.九杠 7.碰 8.吃牌的类型
    repeated BuCardInfo cards = 3; //牌型
	optional uint32 userIdOut = 4; //碰牌或杠牌时，表示碰的谁/杠的谁
}

message mj_hupai_type{
    repeated int32 huCardType = 1;
}

message DeskGameInfo {
    optional int32 gameStatus = 1;          // 游戏所处状态: 0.未开始 1.已开始
    optional int32 playerNum = 2;           // 玩家数量
    optional int32 remainCards = 3;        // 还剩几张麻将牌
    optional uint32 banker = 4;            // 庄家
    optional int32 unBaopai = 5;           // 宝牌(-2指没有宝牌-1宝牌盖着，其他为宝牌位置)
	optional int32 lastOutNum = 6;			//尾巴上摸了多少张牌
}

message PlayerInfo {
    optional bool isBanker = 1; // 是否庄家
    optional PlayerCard playerCard = 2; // 玩家的手牌、摆牌（碰杠）、已打出的牌、胡牌信息。客户端需根据服务端的返回进行排序动画。
    optional int64 coin = 3; // 玩家当前显示的自己的筹码数
    optional string nickName = 4; // 昵称
    optional int32 sex = 5; // 性别: 1=男  2=女
    optional uint32 userId = 6; // 用户id
    optional bool isOwner = 7; // 当前用户是否房主
    optional int32 bReady = 8; // 是否已准备
    optional int32 nHuPai = 9; // 0:未胡牌; >=1: 已胡牌(血流成河时,表示已胡次数)
    optional WeixinInfo wxInfo = 10; // 微信用户信息( 进入房间时、广播新进用户时，才需返回WeixinInfo；其它广播不需要。)
    optional int32 GameStatus = 11; //玩家的游戏状态
    optional bool agentMode = 12; //托管状态
    optional string ip = 13; //玩家的ip地址
    optional bool isBaoTing = 14; //是否已报听
    optional string address = 15; //ip解析出来的地址
    optional int32 site = 16;   //座位号
	optional bool isXiaoSa = 17; //是否潇洒
	optional uint32 dingQueType = 18;//玩家定缺的花色
	optional uint32 huOrder = 19;//血战麻将玩家胡牌顺序
	optional int64  paoFen = 20;//推倒胡:跑分
	repeated int32 huType = 21; // 胡牌类型
}

//玩家总结算数据
message FinallyTotal {
	optional uint32 userId	= 1;	//玩家ID
	optional int64 totalScore = 2; //玩家总分
	optional int32 winCount = 3;   // 玩家胜局
    optional int32 mobaoCount = 4;        //摸宝次数
    optional int32 dianpaoCount = 5;      //点炮次数
    optional int32 lianzhuangCount = 6;   //连庄次数
}

message JiaoInfo {
    optional CardInfo outCard = 1;
    repeated JiaoPaiInfo paiInfos = 2;
    optional bool anGang = 3; // 是否暗杠
	optional int32 chiTingIndex = 4; //吃听时对应吃牌信息的索引
	optional bool anyJiao = 5; //是否任何牌都能胡
	repeated CardInfo tingGangCards = 6;
}

message JiaoPaiInfo {
    optional CardInfo huCard = 1; //可以胡的牌
    optional int32 fan = 2; //可以胡的牌的翻数
    optional int32 count = 3; //可以胡的牌的剩余张数
    optional bool anGangHu = 4; //听牌暗杠后是否还能胡这张牌
	optional bool isCanDDSJ = 5; //是否能对倒算夹
	optional bool isMustDDSJ = 6; //是否必须对倒算夹
	repeated int32 huTypes = 7; //胡牌类型集合
}

//杠牌结构
message GangOverTurn {
    optional CardInfo centerCard = 1; //可以杠的牌
	optional bool isNewDealStyle = 2;	//是否是新的处理杠牌方式
    repeated CardInfo gangCard = 3; //杠牌列表
}

//补杠结构
message BuGangOverTurn {
    optional CardInfo centerCard = 1; //可以杠的牌
    repeated CardInfo buGangCard = 2; //杠牌列表
}

// 操作牌
message CtrlCard {
    optional int32 cardType = 1; //吃1 碰2 杠3 补杠4 手牌列表5 胡哪张6 ...
    optional CardArr cardInfo = 2; //牌信息 后期调整分开 普通杠牌 和 补杠
}

message CardArr{
	optional int32 type			= 1;		// 默认0 普通吃牌1 中發白吃牌2 明杠3 暗杠4
	repeated int32 cardIndex	= 2;		// 牌ID
}

// 麻将牌
message CardInfo {
    optional int32 type = 1; //1:万,2:条,3:筒,4:风
    optional int32 value = 2; //0:牌背 1~9：万；  10~18：条；  19~27：筒。//风牌 中发白东南西北 分别是1234567
    optional int32 id = 3; //牌的id
}

message mj_desk_info {
    optional uint32 owner = 1;		//房主ID
    optional int32 passwrod = 2; // 房间号
    optional int32 currCircle = 3; // 当前房间的圈数
	optional uint32 deskType = 4;
	optional int32  configId = 5;
	optional xl_game_rule rule = 6;	//创建房间的规则信息
}

message mj_game_ack_act_hu {
    optional ProtoHeader header = 1;
    repeated int32 huType = 2;                  // 胡牌类型
    repeated HoldCardInfo holdCardInfo = 3;      // 手牌信息
    optional int32 huCardId = 4;                 // 胡的那张牌ID
    optional uint32 huPlayerId = 5;              // 胡牌玩家ID
    optional uint32 dianPaoPlayerId = 6;         // 点炮玩家ID
	optional bool	isRob	= 7;				 //是否是抢胡
}

// 本局结果(广播)
message mj_ack_send_current_result {
    optional ProtoHeader header = 1;
    repeated int32 huType = 2;           //胡牌类型
    repeated PlayerCoinInfo playerCoinInfo = 3; //本局玩家的输赢明细
    repeated CardInfo baoPai = 4;         //宝牌
	optional uint32	huUserID	= 5;	  //胡牌玩家ID
	optional bool	isEnd		= 6;	  //是否是最后一局
}

// 开局（接收服务端消息）
message mj_ack_game_opening {
    optional ProtoHeader header = 1;
    optional int32 CurrPlayCount = 2; //当前玩到第几局
    optional uint32 bankerId = 3; //当前庄家ID
	optional uint32 oldBankerId = 4; //上一次庄家ID
    repeated user_coin_bean userCoinBeans = 5; //玩家的详细信息
}

//游戏信息
message mj_ack_roomInit{
    optional ProtoHeader header = 1;
    optional mj_desk_info deskInfo = 2; //房间信息
    repeated PlayerInfo players = 3; //玩家信息
}

//进入房间
message mj_ack_createDesk {
    optional ProtoHeader header = 1;
}

//进入房间
message mj_req_enterDesk {
    optional ProtoHeader header = 1;
    optional int32 roomType = 2; //1表示朋友卓，2表示金币场
    optional string password = 3; //房间号码
    optional int32 roomLevel = 4; //1表示朋友卓，2表示金币场
}

message mj_ack_enterDesk {
    optional ProtoHeader header = 1;
}

// 获取离开状态
message mj_req_leave_status {
    optional ProtoHeader header = 1;
    optional uint32 userId = 2;
}

message mj_ack_leave_status {
    optional ProtoHeader header = 1;
    optional int32 status = 2; // 离开状态
}

// 发起解散房间（已开始游戏）
message mj_req_sponsor_dissolve_room {
    optional ProtoHeader header = 1;
    optional uint32 sponsorId = 2; // 发起解散用户Id
}

message mj_ack_sponsor_dissolve_room {
    optional ProtoHeader header = 1;
    optional uint32 sponsorId = 2; // 申请解散用户Id
    repeated uint32 userId = 3; // 桌内用户Id
    optional int32 countDown = 4; // 倒计时
}

// 响应解散房间
message mj_req_response_dissolve_room {
    optional ProtoHeader header = 1;
    optional uint32 responseId = 2;
    optional bool isAgree = 3; // 同意|拒绝
}

message mj_ack_response_dissolve_room {
    optional ProtoHeader header = 1;
    optional uint32 responseId = 2;
    optional bool isAgree = 3; // 同意|拒绝
}

// 直接解散房间（房主 未开始游戏）
message mj_req_dissolve_room {
    optional ProtoHeader header = 1;
    optional uint32 bankerId = 2; // 房主Id
}

message mj_ack_dissolve_room {
    optional ProtoHeader header = 1;
    optional uint32 bankerId = 2; // 房主Id
}

// 退出房间（非房主 未开始游戏）
message mj_req_exit_room {
    optional ProtoHeader header = 1;
    optional uint32 exitId = 2; // 退出用户Id
}

message mj_ack_exit_room {
    optional ProtoHeader header = 1;
    optional uint32 exitId = 2; // 退出用户Id
}

//玩家进入
message mj_ack_playerEnter {
    optional ProtoHeader header = 1;
    optional PlayerInfo player = 2;
}

//准备
message mj_req_ready {
    optional ProtoHeader header = 1;
}

message mj_ack_ready {
    optional ProtoHeader header = 1;
}

//开始
message mj_ack_opening {
    optional ProtoHeader header = 1;
}

//动作广播
message mj_bc_moPai {
    optional ProtoHeader header = 1;
    optional int32 actType = 2; //操作类型
    optional uint32 actUser = 3; //操作的玩家
    optional int32 pai = 4; //摸得麻将
}

// 轮到谁操作(摸牌、碰/杠/过/胡)
message mj_ack_game_overturn {
    optional ProtoHeader header = 1;
    optional uint32 userId = 2; // 当前谁正在操作
    optional uint32 nextUserId = 3;
    optional int32 actType = 4; // 1:正常摸牌 2:其它
    optional int32 time = 5;
    optional int32 paiCount = 6; //剩余多少牌还没有摸
    
    optional bool canPeng = 7;
    optional bool canGang = 8;
    optional bool canBuGang = 9;
	optional int32 canHu = 10;  //
    optional bool canChi = 11; //是否能够吃牌
	optional bool canTing = 12;//是否可以听牌
	optional bool canBuHua = 13;//是否可以补花
	optional bool isMustHu = 14;//是否必胡
	optional bool canChiTing = 15;//是否可以吃听
	optional bool canPengTing = 16;//是否可以碰听
	optional bool canGangTing = 17;//是否可以杠听
	optional bool canGu = 18;//是否可以估牌
	optional bool canLiangXi = 19; //是否能亮喜
	optional bool canLiangZhang = 20;//是否可以亮掌
    
	//中间预留几个字段
	
    optional CardInfo actCard = 31; // 如果有出牌，表示出的是哪张牌，否则置为空 别人打牌的判断
    repeated JiaoInfo jiaoInfos = 32; //可以胡牌的信息,只有在摸牌的时候才会有值
    optional GangOverTurn gangCards = 33; // 手牌中可杠的牌(可能多张) 自己摸牌的时候
    optional BuGangOverTurn buGangCards = 34; //可以补杠的列表
    repeated ChiOverTurn chiInfo = 35; //吃牌的信息
	optional uint32 handlerUserId = 36; //处理这条消息的玩家id 用于播放回放
	repeated int32 canNotHuTips = 37; //为啥不能听牌的提示
	optional bool canGangMoPai = 38; //是否能杠摸牌(补杠、暗杠、四风杠等杠牌后都需要摸牌)
	repeated mj_chiting_jiaoInfos chiTingJiaoInfos = 39; //吃听牌的叫牌信息
	repeated JiaoInfo gangTingJiaoInfos = 40; //杠听叫信息
	repeated JiaoInfo pengTingJiaoInfos = 41; //碰听叫信息
	repeated CardInfo liangZhangCards = 42; //亮掌牌
}

// 发牌
message mj_ack_game_deal_cards {
    optional ProtoHeader header = 1;
    repeated PlayerCard playerCard = 2; //发给我的牌
    optional uint32 dealerUserId = 3; //庄家的userId
}

message mj_ack_game_send_out_card {
    optional ProtoHeader header = 1;
    optional int32 result = 2; // 0:出牌成功 1:有人可碰/胡
    optional uint32 userId = 3; //出牌的人(广播)
    optional CardInfo card = 4; // 出的牌(广播)
    optional bool isAuto = 5; // 是否是自动打牌
	repeated mj_OthersOperateTips otherTips = 6; //打牌/补杠时 其它玩家能否对打的牌做进行操作(吃碰杠胡)的提示
}

// 牌局结束(广播)
message mj_game_send_end_lottery {
    optional ProtoHeader header = 1;
    repeated EndLotteryInfo coinInfo = 2; //4人的汇总输赢明细
}

// 出牌
message mj_req_game_send_out_card {
    optional ProtoHeader header = 1;
    optional int32 cardId = 2; //要出的牌id
}

//吃
message mj_req_chi {
    optional ProtoHeader header = 1;
    optional uint32 userId = 2;
    optional CardInfo chiCard = 3; //被吃的牌
    repeated CardInfo chooseCards = 4; //选择吃的牌
}

message mj_ack_chi {
    optional ProtoHeader header = 1;
    repeated CardInfo chiCard = 2; //广播碰的吃几张牌
    optional uint32 userIdOut = 3; //出牌的人
    optional uint32 userIdIn = 4; //碰牌的人
}

// 碰牌
message mj_req_game_act_peng {
    optional ProtoHeader header = 1;
    optional uint32 userId = 2;
    optional CardInfo pengCard = 3; // 被碰的牌
}

//碰牌结果
message mj_ack_game_act_peng {
    optional ProtoHeader header = 1;
    repeated CardInfo pengCard = 2; //广播碰的哪几张牌
    optional uint32 userIdOut = 3; //出牌的人
    optional uint32 userIdIn = 4; //碰牌的人
	optional bool	isRob	= 5;	//是否是抢碰
}

// 杠牌
message mj_req_game_act_gang {
    optional ProtoHeader header = 1;
    optional uint32 userId = 2;
	optional bool isNewDealStyle = 3;	//是否是新的处理杠牌方式
    optional CardInfo gangCard = 4;
    repeated CardInfo chooseCards = 5; //选择杠的牌
}

// 杠牌结果
message mj_ack_game_act_gang {
    optional ProtoHeader header = 1;
    optional int32 gangType = 2; //1:点杠  2:巴杠  3:暗杠, 4:三风杠和喜杠， 5：幺九杠
    optional uint32 userIdOut = 3; //出牌的人
    optional uint32 userIdIn = 4; //杠牌的人
    repeated CardInfo GangCard = 5;
    repeated user_coin_bean userCoinBeans = 6; //玩家的详细信息
	optional bool	isRob	= 7;	//是否是抢杠
	repeated mj_OthersOperateTips otherTips = 8; //打牌/补杠时 其它玩家能否对打的牌做进行操作(吃碰杠胡)的提示
}

//补杠
message mj_req_game_act_bugang {
    optional ProtoHeader header = 1;
    optional uint32 userId = 2;
    optional CardInfo buGangCard = 3; //补杠的牌
    repeated CardInfo chooseCards = 4; //选择杠的牌
}

//补杠回复消息
message mj_ack_game_act_bugang {
    optional ProtoHeader header = 1;
    optional uint32 userId = 2; //
    optional CardInfo buGangCard = 3; //补杠的牌
    repeated BuCardInfo buGangCards = 4; //广播补杠的几张牌
	repeated mj_OthersOperateTips otherTips = 5; //打牌/补杠时 其它玩家能否对打的牌做进行操作(吃碰杠胡)的提示
}

// 过牌
message mj_req_game_act_guo {
    optional ProtoHeader header = 1;
    optional uint32 userId = 2;
	optional uint32 guoType = 3; //0所有 1吃过 2碰过 4杠过 8胡过 16听过... 吃听过 碰听过 杠听过 估牌过...
}

// 过牌结果
message mj_ack_game_act_guo {
    optional ProtoHeader header = 1;
    optional uint32 userId = 2; //操作人(广播时用)
}

// 胡牌
message mj_req_game_act_hu {
    optional ProtoHeader header = 1;
    optional uint32 userId = 2;
    optional int32 huType = 3; //胡牌类型
}

// 听牌
message mj_req_game_ting {
    optional ProtoHeader header = 1;
    optional uint32 userId = 2;
}

// 听牌广播
message mj_ack_game_ting {
    optional ProtoHeader header = 1;
    optional uint32 userId = 2;
	repeated CardInfo ddsjCards = 3; //对倒算夹的牌
	repeated CardInfo lzbCards = 4; //亮掌宝的牌
}

// 打宝
message mj_ack_game_dabao {
    optional ProtoHeader header = 1;
    optional uint32 userId = 2;
    optional int32 card = 3;
	optional int32 baopaiIndex = 4;
}

// 换宝
message mj_ack_game_changbao {
    optional ProtoHeader header = 1;
    optional uint32 userId = 2;
    optional int32 card = 3;
	optional int32 newBaopaiIndex = 4;//新宝牌的位置
	optional int32 num=5;
}

//请求剩余牌
message mj_req_remain_majiang {
    optional ProtoHeader header = 1;
    optional uint32 userId = 2;
}

//请求剩余牌返回
message mj_ack_remain_majiang {
    optional ProtoHeader header = 1;
    repeated CardInfo cards = 2;
}

// 换牌
message mj_req_change_majiang {
    optional ProtoHeader header = 1;
    optional uint32 userId = 2;
    optional CardInfo handPais = 3; //手中要替换的牌
    optional CardInfo choosePais = 4; //想转换的牌
}

// 换牌结果
message mj_ack_change_majiang {
    optional ProtoHeader header = 1;
    optional CardInfo handPais = 2; //手中要替换的牌
    optional CardInfo choosePais = 3; //想转换的牌
    repeated CardInfo shoupai = 4; //换牌后手上的牌
    optional CardInfo mopai = 5; //摸的牌
}

// 发送听牌提示
message mj_ask_show_tingpai_tips{
    optional ProtoHeader header = 1;
    optional bool isShowTingPaiTips = 2; //是否显示听牌提示
}

//玩家抢碰杠胡后,删除之前补杠或者巴杠牌
message mj_ack_rob_remove_card{
	optional ProtoHeader header = 1;
	optional uint32 userId = 2;  //被抢牌的玩家ID
    optional int32 cardId = 3; 	 //删除之前补杠玩家的补杠牌
    optional int32 robType = 4;       //抢的类型
}

//更新玩家状态
message mj_ack_update_user_status{
	optional ProtoHeader header = 1;
	optional uint32 userId 		= 2;  //玩家ID
	optional int32 status = 3;  //玩家状态
}

//玩家连接游戏服校验
message mj_req_reconnect{
	optional ProtoHeader header = 1;
}

message mj_ack_reconnect {
    optional ProtoHeader header = 1;
    // 1. 首先是牌桌的玩家数据（玩家数据包括其id昵称筹码头像等基本信息，其手牌数据，以及自己打出的牌的数据，还有状态是否已经胡牌了，玩家在整局的总输赢）
    repeated PlayerInfo playerInfo = 2;
    // 2. 桌面信息（包括：游戏是否结束，当前轮到哪个玩家，倒计时剩余时间）
    optional DeskGameInfo deskGameInfo = 3;
    // 3. 桌子规则信息(包括创建房间的规则信息,地区麻将的特殊规则)
    optional mj_desk_info  deskRules= 4;
    optional uint32 senderUserId = 5; // 发起请求的人
    optional int32 isReconnect = 6; // 1=正常连接（默认） 2=断线重连
	repeated JiaoInfo jiaoInfos = 7; //可以胡牌的信息
}

message mj_ack_send_player_handinfo{
	optional ProtoHeader header = 1;
	repeated CardInfo shoupai = 2; //玩家当前的手牌
    optional CardInfo mopai = 3;  //如果摸牌,则玩家当前摸的牌
}

//重连资源完成
message mj_req_reloading_ok{
	optional ProtoHeader header = 1;
}

//重连资源完成,服务器回执
message mj_ack_reloading_ok{
	optional ProtoHeader header = 1;
}

//总结算协议
message mj_ack_finally_result{
	optional ProtoHeader header 			= 1;
	optional int32 allGameNumber			= 2;	//总局数
	repeated FinallyTotal resultUserInfo 	= 3;	//玩家结算信息
}

//分张
message mj_ack_fen_zhang {
    optional ProtoHeader header             = 1;
}

//临时添加,方便吉林麻将开发
message mj_ack_user_info {
	optional ProtoHeader header				= 1;
	optional uint32 userId					= 2;
}

//听牌出牌
message mj_req_tingpai_out_card {
	optional ProtoHeader header				= 1;
	optional int32 cardId = 2; //要出的牌id
	optional int32 tingType = 3;//用于扩展 目前1用于正常听牌出牌流程  2用于判定巴杠牌的听牌出牌流程 3暗杠听牌 4对倒算夹听牌(绥化) 5亮掌宝听牌(绥化) 6对倒算夹和亮掌宝听牌(绥化)
	optional int32 ddsjCardId = 4; //对倒算夹的牌ID(绥化)
	optional int32 lzbCardId = 5; //亮掌宝的牌ID(绥化)
	repeated int32 tingGangPaiIds = 6; //暗杠听牌的杠牌id
}

//慌庄摊牌,玩家的牌列表
message mj_game_ack_act_huangzhuangpais {
    optional ProtoHeader header = 1;
    repeated HoldCardInfo holdCardInfo = 2;      // 手牌信息
	optional bool isShangJuHuangZhuang = 3;      //上一局是否荒庄
}

message mj_ack_operator{
	optional ProtoHeader header 			= 1;
	optional uint32 actCursorId				= 2; //该谁出牌玩家
	optional uint32	lastActOutId			= 3; //最后出牌玩家（0:出的牌已经被其他玩家吃/碰/杠了）
    optional uint32 remainingTime           = 4; //出牌剩余时间
}

//逛锅模式未听牌玩家总分为0时不能点炮
message mj_ack_dont_win_zero{
	optional ProtoHeader header 			= 1;
	optional uint32 outCardUser				= 2;
}

//请求进入比赛服桌子
message mj_req_enter_match{
	optional uint32 userId	=	1;	//请求进入比赛服桌子
}

//请求进入比赛服桌子回执
message mj_ack_enter_match{
	optional uint32 userId	=	1;
	optional bool   ret = 2;//true表示成功 false表示失败
}

message mj_req_update_deposit{
	optional bool isDeposit  = 1;	//true 表示玩家进入托管 false表示玩家解除托管
}

message mj_ack_update_deposit{
	optional bool isDeposit  = 1;	//true 表示玩家进入托管 false表示玩家解除托管
}

//通知玩家金币改变
message mj_ack_update_coin{
	optional uint32 userId  = 1;	//改变金币的玩家
	optional int64  coin    = 2;	//改变后的金币数
}

//通知玩家宝牌改变
message mj_ack_bao{
	optional int32 card  = 1;	//宝牌
}

//请求跑分分数
message mj_req_paofen{
	optional int64  score   = 1;	//请求跑分的分数
}

message mj_ack_paofen{
    optional uint32 userId  = 1;
	optional int64  score   = 2;	//请求跑分的分数
}

//一个胡的数据
message mj_one_hu_data {
    optional uint32 huUserId = 1; //胡牌玩家
	repeated uint32 loseUserId = 2; //被自摸玩家ID集合,如果是点炮，第一个值为点炮玩家ID
	repeated int32  huType = 3; //胡牌的类型(清一色、中张、自摸等)
	optional uint32 fan = 4; //番
	optional int64 huFen = 5; //胡分
	optional uint32 paiIndex = 6; //胡的牌的索引
	optional int64 paoFen = 7; //跑分
}

message mj_PlayerCoinInfo {
	optional uint32 userId	= 1;			//玩家ID
    optional string nick = 2;       		//昵称
    optional int32 gangFen = 3;     		//杠分
    optional int32 huFen = 4;       		//胡分
    optional int32 total = 5;       		//成绩
	optional int64 nowScore = 6;			//当前总分
    optional bool isDianPao = 7;    		//是否点炮
	repeated CtrlCard paiList = 8;  	//牌列表
	repeated int32  baoListSee = 9;     //看过的宝牌列表
    repeated int32  baoList = 10;       //没看过的宝牌列表
	optional int64 paoFen = 11;         //跑分
}

message mj_OthersOperateTips {
    optional uint32 userId	= 1;
	optional bool canChi = 2;
	optional bool canPeng = 3;
    optional bool canGang = 4;
	optional bool canHu = 5;
}

//请求补花
message mj_req_buhua{
	optional CardInfo card = 1;
}

message mj_ack_buhua{
    optional uint32 userId = 1;
	optional CardInfo card = 2;
}
//吃牌听
message mj_req_chiting {
    optional ProtoHeader header = 1;
    optional CardInfo chiCard = 2; //被吃的牌
    repeated CardInfo chooseCards = 3; //选择吃的牌
	optional CardInfo outCard = 4;//吃听后打的牌
	optional int32 tingType = 5;//用于扩展 目前1用于正常听牌出牌流程  2用于判定巴杠牌的听牌出牌流程 3暗杠听牌 4对倒算夹听牌(绥化) 5亮掌宝听牌(绥化) 6对倒算夹和亮掌宝听牌(绥化)
	optional int32 ddsjCardId = 6; //对倒算夹的牌ID(绥化)
	optional int32 lzbCardId = 7; //亮掌宝的牌ID(绥化)
}

//吃牌听
message mj_ack_chiting {
    optional ProtoHeader header = 1;
    repeated CardInfo chiCard = 2; //广播吃的几张牌
    optional uint32 userIdOut = 3; //出牌的人
    optional uint32 userIdIn = 4; //吃牌的人
	repeated CardInfo ddsjCards = 5; //对倒算夹的牌
	repeated CardInfo lzbCards = 6; //亮掌宝的牌
}

message mj_chiting_jiaoInfos {
	repeated JiaoInfo jiaoInfos = 1;
}

//碰牌听
message mj_req_pengting {
    optional ProtoHeader header = 1;
	optional CardInfo outCard = 2;//碰牌后打的牌
	optional int32 tingType = 3;//用于扩展 目前1用于正常听牌出牌流程  2用于判定巴杠牌的听牌出牌流程 3暗杠听牌 4对倒算夹听牌(绥化) 5亮掌宝听牌(绥化) 6对倒算夹和亮掌宝听牌(绥化)
	optional int32 ddsjCardId = 4; //对倒算夹的牌ID(绥化)
	optional int32 lzbCardId = 5; //亮掌宝的牌ID(绥化)
}

//碰牌听
message mj_ack_pengting {
    optional ProtoHeader header = 1;
    repeated CardInfo pengCard = 2; //广播碰的哪几张牌
    optional uint32 userIdOut = 3; //出牌的人
    optional uint32 userIdIn = 4; //碰牌的人
	optional bool	isRob	= 5; //是否是抢碰
	repeated CardInfo ddsjCards = 6; //对倒算夹的牌
	repeated CardInfo lzbCards = 7; //亮掌宝的牌
}

//杠牌听
message mj_req_gangting {
    optional ProtoHeader header = 1;
	repeated CardInfo chooseCards = 2; //选择杠的牌
	optional int32 tingType = 3;//用于扩展 目前1用于正常听牌出牌流程  2用于判定巴杠牌的听牌出牌流程 3暗杠听牌 4对倒算夹听牌(绥化) 5亮掌宝听牌(绥化) 6对倒算夹和亮掌宝听牌(绥化)
	optional int32 ddsjCardId = 4; //对倒算夹的牌ID(绥化)
	optional int32 lzbCardId = 5; //亮掌宝的牌ID(绥化)
}

//杠牌听
message mj_ack_gangting {
    optional ProtoHeader header = 1;
    optional uint32 userIdOut = 2; //出牌的人
    optional uint32 userIdIn = 3; //杠牌的人
    repeated CardInfo GangCard = 4;
    repeated user_coin_bean userCoinBeans = 5; //玩家的详细信息
	optional bool	isRob	= 6;	//是否是抢杠
	repeated CardInfo ddsjCards = 7; //对倒算夹的牌
	repeated CardInfo lzbCards = 8; //亮掌宝的牌
}
//--------------------------------麻将通用end-----------------------------------

/////////////////////////////////////////////////////////////////////////////
//cmd_start_index=8000
//cmd_name=xiyou

message msg_xiyou_room_info{
	optional int32          		state    = 1;
	repeated xiyou_record			records  = 2;
	repeated xiyou_user_info        rank8    = 3;
	optional int32                  config_id = 4;
	optional int32                  last_time = 5;
	repeated xiyou_bet_info         bet       = 6;
	optional int64                  coin      = 7;
}

message xiyou_record{
	optional int32          type   = 1;
	repeated int32          icons  = 2;
}

message xiyou_user_info{
	optional int32            rank   = 1;
	optional int32            user_id = 2;
	optional string           name    = 3;
	optional string           head_url = 4;
	optional string           open_id  = 5;
	optional int64            coin     = 6;
	optional int64            win      = 7;
	repeated xiyou_bet_info   bet      = 8;
}

message msg_xiyou_bet_req{
	repeated xiyou_bet_info    bet    = 1;
}

message xiyou_bet_info{
	optional int32      bet_id   = 1;
	optional int64      bet_self = 2;
	optional int64      bet      = 3; 
	optional int32      rate     = 4;
}

message msg_xiyou_bet_ret{
	optional int32       ret_code = 1[default=0];
	optional int32       user_id = 2;
	repeated xiyou_bet_info    bet    = 3;
}

message msg_xiyou_bet_update{
	repeated xiyou_bet_info    bet    = 1;
}

message msg_xiyou_state_update{
	optional int32        state = 1;
	optional int32        last_time = 2;
	repeated xiyou_user_info   rank8  = 3;
}

message msg_xiyou_result{
	optional int32        type = 1;
	repeated int32        indexs = 2;
	repeated xiyou_bet_info  bet    = 3;
	optional int64        jubao_coin = 4;
	repeated xiyou_user_info   rank8 = 5;
	repeated xiyou_user_info   rank5 = 6;
	optional int32        win_type   = 7;
	optional int64        win        = 8;
	optional int64        coin       = 9;
}

message msg_xiyou_unbet_req{
}

message msg_xiyou_unbet_ret{
	optional int32       ret_code = 1[default=0];
	optional int64       coin       = 2;
}

/////////////////////////////////////////////////////

//--------------------------------跑得快begin-----------------------------------
//cmd_start_index=8100
//cmd_name=paodekuai

message paodekuai_rule_info{	
	optional int32 			hand_poker_num 			= 1;	// 手牌张数
	optional int32          circle_num          	= 2; 	// 局数					% done
	optional bool 			is_must_been_play 		= 3;	// 是否必须管
	optional int32 			first_play_role			= 4;	// 谁先出牌
	optional bool 			is_bao_di 				= 5;	// 是否保底
	optional bool 			is_chai_bomb			= 6;	// 是否可以拆炸弹
	optional bool 			is_four_take2 			= 7;	// 是否能4带2
	optional bool 			is_four_take3 			= 8;	// 是否能4带3
	optional bool 			is_bomb_of_aaa			= 9;	// 3A是否是炸弹
	optional int32			room_role_num 			= 10;	// 房间玩家人数
	optional int32 			zha_niao 				= 11;	// 扎鸟玩法
	optional int32 			max_times 				= 12;	// 最大倍数 			% done
	optional int32 			first_play_spade3		= 13;	// 先出牌规则
	optional bool 			is_show_left_cards_num	= 14;	//是否显示牌数
	optional bool 			is_fplay_three_take 	= 15;	// 是否可三张少带出完
	optional bool 			is_splay_three_take		= 16;	// 是否可三张少带接完
	optional bool 			is_fplay_three_line_take = 17;	// 是否可飞机少带出完
	optional bool 			is_splay_three_line_take = 18;	// 是否可飞机少带接完
	optional int32 			play_timeout			= 19;	// 出牌超时
	optional bool 			card_holder				= 20;	// 记牌器
	optional bool 			limit_talk 				= 21;	// 语音
	optional bool 			gps 					= 22;	// gps测距
}

//桌子信息
message pdk_desk_info {
	optional 	uint32 		owner_id 		= 1;		// 房主id （朋友局有效）
	optional	int32 		password		= 2;		// 房间号 （朋友局有效）
	optional 	int32 		cur_circle		= 3;		// 当前局数 （朋友局有效）
	optional	int32 		game_type		= 4;		// 
	optional	int32 		base_score		= 5;		// 底分   （比赛场有效）
	optional	int32 		out_score 		= 6;		// 淘汰分 （比赛场有效）
	optional	int32 		desk_status 	= 7;		// 桌子状态（准备；等待发牌；出牌; 解散）
	optional	paodekuai_rule_info 	desk_rule			= 8;	// 桌子规则
	optional	int32 					max_circle			= 9;	// 最大局数
	optional 	int32 					start_timestamp 	= 10; 	// 比赛开始的时间戳	
	optional	int32 					dissolve_timeout	= 11;	// 解散超时
}

// 玩家信息
message pdk_player_info {
	optional 	uint32		user_id 		= 1;
	optional	int64 		score 			= 2;	//玩家筹码数
	optional	int32 		site 			= 3;	//座位号
	optional	bool 		is_auto 		= 4;	//是否挂机
	optional	int32 		hand_poker_num	= 5;	//手牌数量
	optional	bool		is_prepared		= 6;	//是否准备
}

// 房间信息
message pdk_room_info {
	optional pdk_desk_info 		desk_info = 1;
	repeated pdk_player_info 	player_info = 2;
	optional int32 				cur_round = 3;			// 预赛第几轮
}


// 重连房间
message pdk_reconnect_room_info {
	optional pdk_desk_info 		desk_info 	= 1;
	optional uint32 			cur_player  = 2;	// 当前操作的玩家id
	optional int32 				timeout		= 3;	// 操作倒计时
	repeated pdk_player_info 	player_info = 4;	// 玩家列表
	repeated int32 				hand_pokers = 5;	// 手牌
	repeated pdk_play_poker_ack recent_play = 6;	// 最近出牌（只记录最多三手；一轮牌出完后会清空）
	optional int32 				cur_zha_dan_num 	= 7; 		// 当前炸弹数量
	optional int32 				config_room_id 		= 8;	// 配置的room_id 
	repeated int32 				played_pokers 		= 9; 		// 记牌器（已经出过的牌） 			
	repeated room_dissolve_agree_ack dissolve_info 	= 10;	// 解散情况（为空则不是在解散状态）
	optional bool				is_wx_shared		= 11;	// 是否微信分享过（仅比赛场中有效）
	optional uint32				zhuang_uid 			= 12;	//庄家id
}

message pdk_update_desk_status {
	optional 	int32 	desk_status			= 1;		// 桌子状态（准备；等待发牌；叫分；加倍；出牌）
	optional	uint32 	cur_player 			= 2;		// 当前操作的玩家id
}

//玩家手牌
message pdk_hand_poker_list {	
	repeated 	int32 		hand_pokers 	= 1;	// 手牌
}

message pdk_play_role_score_change_detail {
	optional	int32 		reason = 1;		// 1.手牌输赢 2.扎鸟输赢 3.炸弹输赢 4.包赔
	optional  	int32 		score  = 2;
}

message pdk_play_role_score_change_info {
	required	uint32 		user_id 		= 1;
	required	int32 		change_score	= 2;	// 积分变化
	repeated	int32 		left_hand_poker = 3;	// 剩下手牌
	repeated 	pdk_play_role_score_change_detail  detail = 4; //分数变化详情
}

//一局比赛完了之后的统计结果
message pdk_play_result {
	required	int32 		is_god	= 1;			// 超神 （0.正常赢牌 1.关门 ）
	repeated 	pdk_play_role_score_change_info 	change_list = 2;
}

// 玩家掉线
message pdk_player_offline_ack {
	required	int32	user_id	= 1;
	optional	bool 	is_offline = 2; //是否掉线 true为掉线，false为正常
}

// 玩家挂机
message pdk_player_auto_req {
	required 	bool 	is_auto 	= 1;	//true:挂机; false:手动出牌
}

// 挂机返回（广播）
message pdk_player_auto_ack {
	required	uint32	user_id 	= 1;
	required	bool 	is_auto 	= 2;
}

// 玩家出牌
message pdk_play_poker_req {
	repeated	int32 		pokers 		= 1;
}

// 玩家出牌返回（广播）
message pdk_play_poker_ack {
	optional	bool 	is_sucess 		= 1;		// 成功还是失败 
	required	uint32 	user_id 		= 2;
	repeated	int32 	pokers 			= 3;
}



// 客户端请求重连消息
message pdk_reconnect_req{
}

// 战绩统计
message pdk_last_player_info {
	optional	uint32		user_id = 1;
	optional	int32 		win_times = 2;
	optional	int32		lose_times = 3;		
	optional	int64 		last_score = 4;			// 最后分
	optional	int64 		top_score = 5;			// 最高分
	optional	bool		is_creator = 6;			// 是否是房主
	optional	int32 		bird_score = 7;			// 扎鸟分数 
	optional	int32 		baodi_times = 8;		// 保底次数
	optional	int32 		bomb_times = 9;			// 炸弹数量
}

message pdk_last_info {
	repeated	pdk_last_player_info player_info = 1;
}



//--------------------------------跑得快end-----------------------------------



//---------------fish-------------
//cmd_start_index=8200
//cmd_name=qka_fish_master

message qka_fish_master_user_info {
	optional int32     	user_id    = 1;
	optional int32     	seat_id    = 2;
	optional string     name 	    = 3;
	optional string   	open_id     = 4;
	optional string   	head_url    = 5;
	optional int64    	coin        = 6;
	optional int32      bet_dataid  = 7;
	optional int32      buff_id     = 8;
	optional int32      buff_time   = 9;
	optional int64      bullet_id   = 10;
	optional int32      effect_type = 11;
	optional int32      effect_remain_time = 12;
}

message msg_qka_fish_master_room_info {
	repeated qka_fish_master_user_info    users   = 1;
	repeated msg_qka_fish_master_appear common_fish_list = 2;
	repeated msg_qka_fish_master_array array_fish_list = 3;
	optional int32 room_type = 4;
}

message msg_qka_fish_master_set_bet_req {
	optional int32             bet_dataid   = 1;
}

message msg_qka_fish_master_set_bet_ret{
	required int32             ret_code  = 1[default=0];
	optional int32             user_id   = 2;
	optional int32             bet_dataid   = 3;
}

message msg_qka_fish_master_bet_req{
	optional int32             bullet_id = 1;
	optional int32             dir       = 2;
	optional int32             type      = 3;
	optional bool              is_sub_bullet    = 4;
}

message msg_qka_fish_master_bet_ret{
	required int32             ret_code  = 1[default=0];
	optional int32             user_id   = 2;
	optional int32             bullet_id = 3;
	optional int32             dir       = 4;
	optional int32             type      = 5;//锁定的鱼
	optional int64             coin      = 6;
	optional bool              is_sub_bullet    = 7;
}

message qka_fish_master_hit_req_info{
	optional int32            fish_id  = 1;
	optional int32            pos      = 2;
	repeated int32            relation = 3;
}

message msg_qka_fish_master_hit_req{
	optional int32             		bullet_id = 1;
	optional int32             		buff_id   = 2;
	repeated qka_fish_master_hit_req_info 		fishs     = 3;
	optional int32                  user_id   = 4;
}

message qka_fish_master_hit_info{
	optional int32             fish_id = 1;
	optional int32             hit     = 2; //0 不中 1 中
	required int32 			   win     = 3;
	required int32             bet_times = 4; //炮台的倍数
	required int32 			   fish_times = 5; //鱼的倍数
	required int32 			   buff_id = 6;
	required int32 			   pos 	   = 7;
	required int32             item_data_id = 8[default=0]; //物品id 0时未触发
}

message msg_qka_fish_master_hit_ret{
	optional int32                  user_id   		= 1;
	optional int32             		bullet_id 		= 2;
	optional int32             		buff_id   		= 3;
	optional int32             		coin   		    = 4;
	optional int32             		buff_end_time 	= 5; //buff结束时间戳
	repeated qka_fish_master_hit_info   fishs     	= 6;
}

message msg_qka_fish_master_appear {
	required int32 path_id 		= 1;//路径id
	required int32 fish_data_id = 2;
	required int32 form 		= 3;
	repeated msg_qka_fish_info fish_ids 	= 4;
}

//清鱼，即将出现鱼阵
message msg_qka_fish_master_clean {
}

//鱼阵
message msg_qka_fish_master_array {
	required int32 id 		= 1;//鱼阵id
	repeated msg_qka_fish_info fish_ids = 2;
	required int32 pos 		= 3;//0为默认
}

//捕鱼金币返还
message msg_qka_fish_master_coin_return {
	required int32 user_id = 1;
	required int64 coin    = 2;
}

message msg_qka_fish_master_room_quit_req {

}

//
message msg_qka_fish_use_item_req {
	required int32 type = 1; //1:冰冻, 2:瞄准镜
}

message msg_qka_fish_use_item_ret {
	required int32 ret_code = 1[default=0];
	optional int32 type = 2;
}

message msg_qka_fish_effect {
	required int32 remain_time = 1; //剩余时间(0时效果解除)
	optional int32 type = 2;
}

message msg_qka_buy_item_req {
	required int32 item_data_id = 1;
}

message msg_qka_buy_item_ret {
	required int32 ret_code = 1[default=0]; //1:成功, 2:商品找不到, 3:必须人民币购买, 4:消耗道具不足, 5:数值错误,打折过头了, 6:消耗失败, 7:配置错误
	required int32 item_data_id = 2;
}

message msg_qka_sync_coin {
	required int32 user_id = 1;
	required int32 coin = 2;
}

message msg_qka_fish_info {
	required int32 fishid = 1;
	required int32 d_value = 2;
}
//----------------------end------------------------




//------------------转转------------------
//cmd_start_index=8300
//cmd_name=turn
message msg_turn_info{
	optional int32      			turn_state         = 1;//1 押注阶段  2 开奖阶段
	optional int32      			last_time          = 2;//剩余时间 秒数
	repeated turn_bet_info          bet_area           = 3;
	repeated turn_record_info       way_bill           = 4;
	optional int64                  cur_coin    	   = 5;//自己当前的钱
	optional int32                  room_config_id     = 6;
	optional int32					game_num		   = 7;//当前期数
	repeated turn_user_info			rank5			   = 8;//上局盈利前5
}

message turn_bet_info{
	optional int32      id 			= 1;
	optional int64      value 		= 2;
	optional int64      self_value  = 3;
}

message turn_record_info{
	optional int32      type    = 1;//0 普通 1 双响 2 三响
	repeated int32      icons   = 2;
}

message turn_user_info{
	optional int32      rank     	= 1;
	optional int32      user_id 	= 2;
	optional string     name 	    = 3;
	optional string   	open_id     = 4;
	optional string   	head_url    = 5;
	optional int64    	coin        = 6;
	optional int64      win         = 7;
	repeated turn_bet_info    rank8_win  = 8;
}

message msg_turn_bet_req{
	optional turn_bet_info    bet   = 1;
}

message msg_turn_bet_ret{
	optional int32      		ret_code    = 1[default=0];
	optional int32      		user_id     = 2;
	optional turn_bet_info   	bet     	= 3;
}

message msg_turn_bet_area_update{
	repeated turn_bet_info      bet_area    = 1;
}

message msg_turn_state_update{
	optional int32              state       = 1; //1 押注阶段  2 开奖阶段
	optional int32              last_time   = 2;
}

message turn_result_info{
	optional int32              index       = 1;
	optional int32              icon        = 2;
}


message msg_turn_result{
	optional int32              	type        = 1;
	repeated turn_result_info  		result      = 2;
	repeated turn_bet_info          area        = 3;//中奖区域
	repeated turn_user_info         rank5       = 4;//
	optional int64                  win         = 5;//自己赢钱
	optional int64                  coin        = 6;
}

message msg_turn_self_record_req{
	optional int32				id = 1[default=0];
}

message msg_turn_self_record{
	optional int32					phase = 1;
	repeated turn_result_info  		result = 2;//中奖结果
	repeated turn_bet_info 			area = 3;//中奖区域
	repeated turn_bet_info			bet = 4;//自己押注
	optional int32					type = 5;
	optional int32					win = 6;
}

message msg_turn_self_record_ack{
	optional int32					ret_code = 1[default=0];
	repeated msg_turn_self_record	records = 2;
}

//------------------------------转转------------------ end

//----------------------------------百人二八杠 begin------------------------------
//cmd_start_index=8400
//cmd_name=br_tb

//房间状态
message msg_br_tb_state_notify {
	required int32 room_state = 1; //（0：等待， 1：下注， 2：结算  3：数据重置）
}


//战况信息
message msg_br_tb_battle_record {
	required int32 id = 1;
	repeated int32 list = 2; //是否胜利(0,1)
}

//手牌
message msg_br_tb_pokers {
	required int32 id = 1;              // (0:庄, >0:闲家位置)
	required int32 is_win_banker = 2;   // 是否能胜庄（1：胜  2：不胜）
	required int32 poker_value = 3;     // 牌面值大小
	repeated int32 pokers = 4;          // 牌
}

//已压注
message msg_br_tb_bet_info {
	required int32 id = 1;      //押注位置
	required int64 sum = 2;     //押注数额
}

// 玩家进入/重连通报
message msg_br_tb_player_enter_notify {
	required int32 room_state = 1;      //（0：等待， 1：下注， 2： 比牌，3：结算）
	required int32 left_time = 2;       // 倒计时
	repeated br_tb_banker_info req_banker = 3;  // 申请上庄人数
	required int32 banker_times = 4;    // 如果自己是庄的话，还剩余庄的次数
	required int32 is_join = 5;         // 是否已经加入游戏
	repeated msg_br_tb_bet_info other_bet = 6;//其他人已下注
	repeated msg_br_tb_bet_info my_bet = 7; //自己的下注
	repeated msg_br_tb_pokers pokers = 8; //手牌
	repeated msg_br_tb_battle_record battle_recode = 9; //战况信息
	repeated br_tb_banker_info bankers = 10; //庄家id列表
	repeated msg_get_site_notify site_list = 11; //位置列表
	required int32 cur_round = 12;  			 // 当前轮
	required int64 gold = 13;  			 		// 钱
	required int32 timestamp = 14; // 服务器时间
}


//押注请求
message msg_br_tb_bet_req {
	required int64 bet = 1;//金币
	required int32 bet_id = 2; //压的是哪一门
}

//押注响应
message msg_br_tb_bet_resp {
	required int32 result = 1; //0：表示成功， -1：表示超过最大值 -2：表示时间已过  
	required int32 bet_id = 2; //表示压到哪一门
	required int64 bet_add = 3; //当前新增
	required int64 bet_sum = 4;// (压注总数)
	required int64 gold = 5;// 金币
}



//广播位置押注信息
message msg_br_tb_seat_bet_info {
	required int32 bet_id = 1; //(表示压到哪一门)
	required int64 bet_sum = 2;// (压注总数)
}


//广播压注
message msg_br_tb_bet_info_notify {
	repeated msg_br_tb_seat_bet_info bet_info = 1; //各个位置投注信息
}

//申请上下庄
message msg_br_tb_banker_req {
	required int32 type = 1; //1:上庄， 2：下庄
	required int64 gold = 2; //携带金币
	
}

//申请上庄回复
message msg_br_tb_banker_resp {
	required int32 result = 1; //(0：正确 ； -1：钱不够  -2： 庄人数已满)
	required int32 type = 2; //1 上庄， 2 下庄
}



//申请上庄通报
message msg_br_tb_banker_req_notify {
	required int32 user_id = 1; //用户ID
	required int64 gold = 2; //携带金币
	required int32 type = 3; //1 上庄， 2 下庄
}



// 当前庄列表
message br_tb_banker_info{
	required int32 user_id = 1;
	required int64 gold = 2;
}


//广播当前庄列表
message msg_br_tb_banker_list_notify {
	repeated br_tb_banker_info bankers = 1;
}


//广播当前申请庄列表
message msg_br_tb_req_banker_list_notify {
	repeated br_tb_banker_info bankers = 1;
}

// 输赢列表
message msg_br_tb_win {
	required int32 id = 1;
	required int64 sum = 2;
}

//广播战绩
message msg_br_tb_battle_record_notify {
	repeated msg_br_tb_battle_record info = 1;
}

//玩家输赢
message msg_br_tb_result {
	required int32 id = 1; // (表示那个位置)
	required int64 sum = 2;
}

// 战绩结算通报
message msg_br_tb_results_notify {
	repeated msg_br_tb_result me = 1;
	repeated msg_br_tb_win win = 2;
	repeated msg_br_tb_pokers pokers = 3;
	required int64 me_win = 4;		// 玩家真实输赢
	repeated int32 dice = 5;				//色子点数
}

// 做位置请求
message msg_get_site_req {
	required int32 site_id = 1;//位置ID
}

//做位置响应
message msg_get_site_resp {
	required int32 result = 1; //0：表示成功， -1：位置错误 -2：表示钱不够
	required int32 site_id = 2; //表示坐的哪个位置
}

//做位置通报
message msg_get_site_notify {
	required int32 site_id = 1; //表示坐的哪个位置
	required int32 user_id = 2; //玩家ID
}

//玩家金币通报
message msg_player_gold_notify {
	required int64 gold = 1; //玩家金币
	required int32 user_id = 2; //玩家ID
}

//自身金币同步
message msg_self_gold_notify {
	required int64 gold = 1; //玩家金币
}

//庄家奖池同步
message msg_banker_gold_pool_notify {
	required int64 gold = 1; //金币
}

//玩家奖池同步
message msg_player_gold_pool_notify {
	required int64 gold = 1; //金币
}

// 排行榜基本信息
message br_tb_rank_base{
	optional 	int32		id			=1;//玩家id
	optional	int64		gold		=2;//金币
	optional	string		head		=3;//头像
	optional	string		name		=4;//名字
}

// 玩家排行榜 请求
message msg_br_tb_rank_req{
	required  int32 type = 1; // 排行榜  1  玩家输赢排行榜  2  庄家奖金榜   3  闲家奖金榜
} 
// 玩家排行榜 响应
message msg_br_tb_rank_resp{
	required int32 result = 1; //0：表示成功， -1：失败
	required  int32 type = 2; // 排行榜
	repeated  br_tb_rank_base rank = 3; // 排行榜	
	required  int32 time = 4; //时间
	required  int64 sum = 5; //总金额
}

//奖池奖金通报
message msg_lottery_gold_notify {
	required int64 gold = 1; //玩家金币
	required int32 user_id = 2; //玩家ID
}

message br_tb_continue_win{
	required int32 count = 1; //连胜次数
	required int32 user_id = 2; //玩家ID
}

//连胜通报通报
message msg_br_tb_continue_win_notify {
	repeated br_tb_continue_win list = 1; // 连胜列表
}

//座位上玩家投注
message msg_br_tb_site_player_bet_notify {
	required int64 gold = 1; //投注额
	required int32 user_id = 2; //玩家ID
	required int32 site_id = 3; //位置ID
	required int32 seat_id = 4; // 下注位置
}

//座位上玩家输赢
message msg_br_tb_site_player_win_notify {
	required int64 gold = 1; //输赢
	required int32 user_id = 2; //玩家ID
	repeated msg_br_tb_result result = 3; // 具体输赢
	required int32 site_id = 4; //位置ID
}


//----------------------------------百人二八杠 end-------------------------------------


//------------------------------马------------------ begin
//cmd_start_index=8500
//cmd_name=horse
message horse_info{
	optional int32  index = 1;
	optional int32  id    = 2;
	optional string name  = 3;
	repeated int32  rank  = 4;
}

message horse_bet_info{
	optional int32  id = 1;
	optional int32  rate = 2;
	optional int64  sf_bet = 3;
	optional int64  all_bet = 4; 
}

message msg_horse_info{
	optional int64         id = 1;
	optional int32         state = 2;
	optional int32         last_time = 3;
	optional int64         all_bet = 4;
	repeated horse_info    horse  = 5;
	repeated horse_bet_info   bet_info = 6;
	optional int32         tongshi_num = 7;
	optional int64         coin = 8;
	optional int32         config_id = 9; 
}

message msg_horse_begin{
	optional int64         id = 1;
	optional int32         state = 2;
	repeated horse_info    horse  = 3;
	repeated horse_bet_info   bet_info = 4;
	optional int32         tongshi_num = 5;
}

message msg_horse_update{
	repeated horse_bet_info   bet_info = 1;
	optional int64         all_bet = 2;
}

message msg_horse_bet_req{
	optional int32         op_type = 1;
	optional horse_bet_info  bet_info = 2;
}

message msg_horse_bet_ret{
	optional int32         ret_code = 1[default=0];
	optional int32          op_type = 2;
	optional horse_bet_info  bet_info = 3;
	optional int64         coin   = 4;
}

message msg_horse_open_tongshi_req{
}

message horse_rd{
	optional int32       id = 1;
	optional int32       rate1 = 2;
	optional int32       rate2 = 3;
}

message msg_horse_open_tongshi_ret{
	repeated horse_rd     rate = 1;
	repeated horse_rd     rd   = 2;
	repeated int32        tongshi = 3;
}

message horse_user_info{
	optional int32      rank     	= 1;
	optional int32      user_id 	= 2;
	optional string     name 	    = 3;
	optional string   	open_id     = 4;
	optional string   	head_url    = 5;
	optional int64    	coin        = 6;
}

message horse_rank{
	optional int32      id = 1;
	repeated int32      rank = 2;
}

message msg_horse_result{
	optional int32          type = 1;
	repeated int32          win_horses = 2;
	repeated horse_rank     h_rank = 3;
	repeated horse_user_info     rank5 = 4;
	optional int64          win  = 5;
	optional int64          coin = 6;
}

//------------------马------------------end

//------------------21点------------------
//cmd_start_index=8600
//cmd_name=blackjack

//朋友场可能会用
message msg_bj_ready_req{
}

message msg_bj_ready_ack{
	optional int32 result = 1; //0:成功，其他：错误
}


//行动位改变， 比如你的上家不要了， 服务器则会发送该消息，改变行动位到下一个
message msg_bj_action_change{
	optional int32			user_id	= 1; //当前行动位
	optional int32			index	= 2; //那一铺(有双倍下注的情况，可能有两铺)
}

message msg_bj_state_change_2c{
	optional int32	room_state	= 1;	////1:等待玩家状态2:初次下注阶段 3:买保险阶段  4:牌局进行状态 5:显示结果状态  
	optional int32	cur_round	= 2;	//当前第几轮
}

//房间解散 （同意/拒绝）
message msg_bj_dissolve_agree_req {
	optional	bool		is_agree = 1;
}

message msg_bj_dissolve_agree_ack {
	optional	uint32 		user_id 	= 1;
	optional	bool 		is_agree 	= 2;
	optional	int32		time		=3; //倒计时， 恢复时候使用
}

//房间解散结果
message msg_bj_dissolve_agree_result {
	optional	bool		is_dissolve = 1;		// 是否解散
}

message msg_bj_info{
	optional int32      							bj_state			= 1;//1:等待玩家状态2:初次下注阶段 3:买保险阶段  4:牌局进行状态 5:显示结果状态  
	optional int32      							last_time			= 2;//剩余时间 秒数
	repeated bj_user_info          					users_info          = 3;
	optional int32                  				room_config_id      = 4;
	optional msg_bj_action_change					turn				= 5; //当前该谁操作， 1:所有玩家 100:庄家 userid:具体玩家
}

message bj_bet_info{
	optional int32 		index		= 1;
	repeated int32		cards		= 2;
	optional int64      value 		= 3;
	optional int64      insure	    = 4;  //保险
}

message bj_user_info{
	optional uint32			user_id 	= 1;
	repeated bj_bet_info	bet_infos	= 2;
}

message msg_bj_deal_poker{
	optional uint32			user_id 	= 1;
	optional int32			index		= 2;
	repeated int32			cards		= 3;
	repeated int32			point		= 4;
	optional int32			type		= 5; //0:普通情况 1：doubule情况
}

message msg_bj_bet_req{
	optional int32			type  = 1; //1:下注 2：双倍下注 3:保险 4：要牌， 5:分牌 6:停牌
	optional int32			index = 2; //对应一人拆分牌的时候的情况
	optional uint32    		bet   = 3;
}

message msg_bj_bet_ret{
	optional int32      		ret_code    = 1[default=0];   //1:当前不该自己说话， 2:没有这个用户  3：金币不够， 4：超过下注次数,5:错误的参数
	optional uint32      		user_id     = 2;
	optional int32				type		= 3;
	repeated bj_bet_info   		bet     	= 4; //这里有可能有分牌的情况，所以可能是两个
	optional int32				show_coin	= 5;//显示的金币
}

message bj_result_info{
	optional uint32				user_id        = 1;
	optional int32				index		   = 2;
	optional int64				coin		   = 3; //当前赢的钱
	optional int64				insure		   = 4; //保险的钱
	optional int64				all_coin	   = 5; //赢钱后总的钱
}


message msg_bj_result{
	repeated bj_result_info 	results		= 1;
}

//战绩
message msg_bj_result_all_2c {
	required int32 room_number = 1;//房号
	required int32 game_times = 2;//局数
	required uint32	room_master = 3;//房主ID
	required int32	start_time = 4;//开始时间
	repeated bj_result_info results = 5;
}

//------------------------------21点------------------ end


//----------------------------------德州扑克 begin------------------------------
//cmd_start_index=8700
//cmd_name=texas

// 庄 大小盲通报
message msg_texas_banker_notify{
	required int32  banker_id = 1; // 庄
	required int32  big_blind_id = 2;// 大盲
	required int32  small_blind_id = 3; // 小盲
}

// 玩家手牌通报
message msg_texas_player_poker_notify{
	repeated int32 cards = 1; 	 //手牌
	optional int32 win_rate = 2; //胜率
}

// 通报 翻牌  转牌  河牌
message msg_texas_common_poker_notify{
	required int32 round = 1;			       // 圈数(1:翻牌(第一次公共牌), 2:转牌(第二次公共牌), 3:河牌(第三次公共牌)), 4:提前发余下的公共牌
	repeated int32 poker = 2; 			       // 牌
	optional int32 win_rate = 3;               // 胜率
	optional int32 poker_type = 4;             // round为3或者4时有值
}

// 玩家下注通报
message msg_texas_bet_notify{
	required int32 player_id = 1;	// 玩家ID
	required int64 bet 	= 2;		// 金额	
	required int32 type = 3;		// 类型  0:大小盲默认下注 1:跟  2:过  3:弃牌  4:加注  5:全压
	required int64 cur_gold = 4;    // 当前余额
}

// 通报当前操作玩家
message msg_texas_operate_player_notify{
	required int32 player_id = 1;	// 玩家ID
}

// 玩家下注请求
message msg_texas_bet_req{
	required int32 type = 1; // 操作类型 1:跟  2:过  3:弃牌  4:加注  5:全压
	required int64 bet = 2; 	// 下注金额
}

// 响应玩家下注请求
message msg_texas_bet_ret{
	required int32 result = 1; 	 	//0：表示成功, -1：未轮到自已, -2:金额不足, -3:玩家不存在, -4:不是下注状态, -5:自已状态不对(弃牌或者全压状态时无法操作), -6:自已未在下注状态中, -7:跟和过投注额少于条件
	required int64 cur_gold = 2; 	//当前余额
}

// 自动设置
message msg_texas_auto_req {
	required int32 type = 1; //1:自动弃, 2:自动跟, 3:自动过, 4:自动弃,自动过同时存在
	required bool flag = 2;  //true或者false
}

// 
message msg_texas_auto_ret {
	optional int32 ret_code = 1[default=0]; //0:成功, 1:失败
}

message nested_texas_user_info {
	optional int32     	player_id    = 1;
	optional int32     	seat_id      = 2;
	optional string     name 	     = 3;
	optional string   	open_id      = 4;
	optional string   	head_url     = 5;
	optional int64    	coin         = 6;  //当前金币
	optional int32      state        = 7;  //当前状态  0:大小盲默认下注 1:跟  2:过  3:弃牌  4:加注  5:全压
	optional int64      cur_bet      = 8;  //当前投注值
	optional int64      turn_bet     = 9;  //轮投注值
	optional int64      total_bet    = 10; //总投注值
	repeated int32      cards        = 11; //手牌
	optional int32      auto_type    = 12; //自动设置类型1:自动弃, 2:自动跟, 3:自动过, 4:自动跟,自动过同时存在
	optional bool       auto_flag    = 13; //自动设置状态
	optional int32      join_game    = 14; //1:游戏中, 0:观望
	optional int32      win_rate     = 15; //胜率
}

//房间信息
message msg_texas_room {
	optional int32 room_type = 1;                //房间类型
	optional int32 room_id   = 2;                //房间唯一id
	optional int32 bank_id   = 3;                //庄家id
	optional int32 cur_op_player_id = 4;         //当前操作玩家
	repeated nested_texas_user_info players = 5; //玩家信息
	repeated int32 common_cards = 6;             //公共牌
	optional int32 state     = 7;                //0:等待, 1:下注, 2:结算
	optional int64 last_bet  = 8;                //最后一次玩家下注额度
	optional int32 small_blind_id = 9;           //小盲
	optional int32 big_blind_id = 10;            //大盲
	optional int32 cur_op_player_time = 11;      //当前操作者剩余时间
}

message texas_table_result{
	required int32 player_id 		= 1; // 玩家ID
	required int64 win 				= 2; // 输赢		
	required int64 bet 				= 3; // 押注额
	repeated int32 poker 			= 4; // 牌
	optional int32 type             = 5; // 组合后牌型(10:皇家同花顺, 9:同花顺, 8:四条, 7:葫芦, 6:同花, 5:顺子, 4:三条, 3:二对, 2:一对, 1:高牌)
	repeated int32 real_poker 		= 6; // 组合后的牌
}

// 战绩结算通报
message msg_texas_results_notify {
	repeated texas_table_result result = 1; // 结果
}

//房间状态
message msg_texas_room_state_notify {
	required int32 room_state = 1; //0:等待, 1:下注, 2:结算
}

message nested_texas_player_poker {
	required int32 playerid = 1;
	repeated int32 cards = 2; 	// 手牌
}

// 玩家手牌通报
message msg_texas_other_player_poker_notify{
	repeated nested_texas_player_poker list = 1;
}

//
message msg_texas_sync_coin {
	required int32 playerid = 1;
	required int64 coin = 2;
}

//测试时使用
message texas_player_win_rate {
	required int32 playerid = 1;
	required int32 win_rate = 2;
}

message msg_texas_test_win_rate {
	repeated texas_player_win_rate list = 1;
}

message texas_sync_game_status {
	optional int32      playerid     = 1;
	optional int32      join_game    = 2; //1:游戏中, 0:观望
}

message msg_texas_sync_game_status {
	repeated texas_sync_game_status list = 1;
}

message texas_player_poker_type {
	optional int32      playerid     = 1;
	optional int32      poker_type   = 2; //组合后牌型(10:皇家同花顺, 9:同花顺, 8:四条, 7:葫芦, 6:同花, 5:顺子, 4:三条, 3:二对, 2:一对, 1:高牌)
}

message texas_player_list {
	repeated int32 playerid = 1;
}

//----------------------------------德州扑克 end------------------------------

//------------------rummy------------------
//cmd_start_index=8800
//cmd_name=rummy

//朋友场可能会用
message msg_rm_ready_req{
}

message msg_rm_ready_ack{
	optional int32 result = 1; //0:成功，其他：错误
}


//行动位改变
message msg_rm_action_change{
	optional uint32			user_id	= 1; //当前行动位
}

//状态改变
message msg_rm_state_change_2c{
	optional int32	room_state	= 1;	////1:等待玩家状态2:牌局进行状态 3:已经有赢家，但是还可以组牌 4:显示结果状态  
	optional int32	cur_round	= 2;	//当前第几轮
	optional uint32	banker		= 3;
}

//同步房间信息，用于断线重连
message msg_rm_info{
	optional int32      							bj_state			= 1;//1:等待玩家状态2:牌局进行状态 3:已经有赢家，但是还可以组牌 4:显示结果状态  
	optional int32      							last_time			= 2;//剩余时间 秒数
	optional int32                  				room_config_id      = 3;
	optional uint32									turn				= 4; //当前该谁操作， 1:所有玩家 100:庄家 userid:具体玩家
	optional int32									turn_left_time		= 5; //行动位玩家剩余时间
	optional uint32									banker				= 6;
	optional int32									xcard				= 7; //百搭牌是那一张
	optional int32									give_up				= 8; //弃牌堆的第一张牌
	optional int32									dirop_coin			= 9; //自己放弃需要付出的金币
	optional int32									self_state			= 10; //1：正常玩， 2:已经弃牌 ， 3:围观状态
}


//发牌
message msg_rm_deal_poker{
	optional uint32			user_id 	= 1;
	repeated int32			cards		= 2;
}

//弃一张牌
message msg_rm_give_up_poker_req{
	optional int32			card = 1;
}

message msg_rm_give_up_poker_ack{
	optional int32			ret = 1;
	optional int32			card = 2;
}

//同步弃牌堆的牌和xcard
message msg_rm_syn_giveup_poker{
	optional int32			giveup_card = 1;
	optional int32			xcard 		= 2;
}

message rm_group{
	repeated int32	cards = 1;
}

//组牌请求
message msg_rm_group_req{
	repeated rm_group		groups = 1;
}

message msg_rm_group_ack{
	optional int32 		ret = 1; //0:正确， 1：当前不是你的轮次
	optional int32		score = 2;
}

//show牌请求
message msg_rm_show_req{
	optional int32 		card = 1; //打出去的那张poker
}

message msg_rm_show_ack{
	optional int32 		ret = 1; //0:成功， 1:失败
}

//请求自动排序
message msg_rm_sort_req{
}

message msg_rm_sort_ack{
	optional int32 	ret = 1; //0:成功， 1:请求过于频繁
	repeated rm_group	groups = 2;
}

//放弃本局
message msg_rm_drop_req{
}

message msg_rm_drop_ack{
	optional int32	ret = 1; //0 成功
}


message rm_result_info{
	optional uint32				user_id        = 1;
	optional string				user_name	   = 2;
	optional string				head_url	   = 3;
	optional int32				score		   = 4; //输赢分数
	optional int64				coin		   = 5; //当前赢的钱
	optional int64				all_coin	   = 6; //赢钱后总的钱
	repeated rm_group			groups		   = 7;
	optional int32				xcard		   = 8;
	optional int32				isdrop		   = 9; //1：正常  2:放弃
}

//广播结果
message msg_rm_result{
	repeated rm_result_info 	results		= 1;
}
//-----------------------------rummy------------------ end

